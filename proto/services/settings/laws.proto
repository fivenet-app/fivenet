syntax = "proto3";

package services.settings;

import "buf/validate/validate.proto";
import "codegen/perms/perms.proto";
import "resources/laws/laws.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/settings;settings";

message CreateOrUpdateLawBookRequest {
  resources.laws.LawBook law_book = 1 [(buf.validate.field).required = true];
}

message CreateOrUpdateLawBookResponse {
  resources.laws.LawBook law_book = 1;
}

message DeleteLawBookRequest {
  int64 id = 1;
}
message DeleteLawBookResponse {}

message CreateOrUpdateLawRequest {
  resources.laws.Law law = 1 [(buf.validate.field).required = true];
}

message CreateOrUpdateLawResponse {
  resources.laws.Law law = 1;
}

message DeleteLawRequest {
  int64 id = 1;
}

message DeleteLawResponse {}

service LawsService {
  option (codegen.perms.perms_svc) = {
    order: 122
    icon: "i-mdi-scale-balance"
  };

  rpc CreateOrUpdateLawBook(CreateOrUpdateLawBookRequest) returns (CreateOrUpdateLawBookResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
  rpc DeleteLawBook(DeleteLawBookRequest) returns (DeleteLawBookResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
  rpc CreateOrUpdateLaw(CreateOrUpdateLawRequest) returns (CreateOrUpdateLawResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "CreateOrUpdateLawBook"
    };
  }
  rpc DeleteLaw(DeleteLawRequest) returns (DeleteLawResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "DeleteLawBook"
    };
  }
}
