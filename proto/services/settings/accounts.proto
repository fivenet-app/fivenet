syntax = "proto3";

package services.settings;

import "buf/validate/validate.proto";
import "resources/accounts/accounts.proto";
import "resources/common/database/database.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/settings;settings";

message ListAccountsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional string license = 3 [(buf.validate.field).string.max_len = 64];
  optional bool enabled = 4;
  optional string username = 5 [(buf.validate.field).string.max_len = 64];
  optional string external_id = 6 [(buf.validate.field).string.max_len = 128];
}

message ListAccountsResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.accounts.Account accounts = 2;
}

message UpdateAccountRequest {
  uint64 id = 1 [(buf.validate.field).uint64.gt = 0];
  optional bool enabled = 2;
  optional int32 last_char = 3;
}

message UpdateAccountResponse {
  resources.accounts.Account account = 1;
}

message DisconnectOAuth2ConnectionRequest {
  uint64 id = 1 [(buf.validate.field).uint64.gt = 0];
  string provider_name = 2 [(buf.validate.field).string.max_len = 255];
}

message DisconnectOAuth2ConnectionResponse {}

message DeleteAccountRequest {
  uint64 id = 1 [(buf.validate.field).uint64.gt = 0];
}

message DeleteAccountResponse {}

service AccountsService {
  // @perm: Name=Superuser
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
  // @perm: Name=Superuser
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);
  // @perm: Name=Superuser
  rpc DisconnectOAuth2Connection(DisconnectOAuth2ConnectionRequest) returns (DisconnectOAuth2ConnectionResponse);
  // @perm: Name=Superuser
  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse);
}
