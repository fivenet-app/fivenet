syntax = "proto3";

package services.wiki;

import "resources/common/database/database.proto";
import "resources/wiki/activity.proto";
import "resources/wiki/page.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/wiki;wiki";

message ListPagesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional string job = 3 [(validate.rules).string.max_len = 50];
  optional bool root_only = 4;
  optional string search = 5 [(validate.rules).string.max_len = 64];
}

message ListPagesResponse {
  resources.common.database.PaginationResponse pagination = 1 [(validate.rules).message.required = true];
  repeated resources.wiki.PageShort pages = 2;
}

message GetPageRequest {
  uint64 id = 1;
}

message GetPageResponse {
  resources.wiki.Page page = 1;
}

message CreatePageRequest {
  resources.wiki.Page page = 1 [(validate.rules).message.required = true];
}

message CreatePageResponse {
  resources.wiki.Page page = 1;
}

message UpdatePageRequest {
  resources.wiki.Page page = 1 [(validate.rules).message.required = true];
}

message UpdatePageResponse {
  resources.wiki.Page page = 1;
}

message DeletePageRequest {
  uint64 id = 1;
}

message DeletePageResponse {}

message ListPageActivityRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  uint64 page_id = 2;
}

message ListPageActivityResponse {
  resources.common.database.PaginationResponse pagination = 1 [(validate.rules).message.required = true];
  repeated resources.wiki.PageActivity activity = 2;
}

service WikiService {
  // @perm
  rpc ListPages(ListPagesRequest) returns (ListPagesResponse);
  // @perm: Name=ListPages
  rpc GetPage(GetPageRequest) returns (GetPageResponse);
  // @perm: Attrs=Fields/StringList:[]string{"Public"}
  rpc CreatePage(CreatePageRequest) returns (CreatePageResponse);
  // @perm: Name=ListPages
  rpc UpdatePage(UpdatePageRequest) returns (UpdatePageResponse);
  // @perm
  rpc DeletePage(DeletePageRequest) returns (DeletePageResponse);

  // @perm
  rpc ListPageActivity(ListPageActivityRequest) returns (ListPageActivityResponse);
}
