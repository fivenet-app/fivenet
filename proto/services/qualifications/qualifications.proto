syntax = "proto3";

package services.qualifications;

import "buf/validate/validate.proto";
import "codegen/itemslen/itemslen.proto";
import "codegen/perms/perms.proto";
import "google/protobuf/duration.proto";
import "resources/common/content/content.proto";
import "resources/common/database/database.proto";
import "resources/file/filestore.proto";
import "resources/qualifications/access.proto";
import "resources/qualifications/exam.proto";
import "resources/qualifications/qualifications.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/qualifications;qualifications";

message ListQualificationsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional string search = 3 [(buf.validate.field).string.max_len = 64];
  optional string job = 4 [(buf.validate.field).string.max_len = 20];
}

message ListQualificationsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.qualifications.Qualification qualifications = 2 [(codegen.itemslen.items_len) = true];
}

message GetQualificationRequest {
  int64 qualification_id = 1;
  optional bool with_exam = 2;
}

message GetQualificationResponse {
  resources.qualifications.Qualification qualification = 1;
}

message CreateQualificationRequest {
  resources.common.content.ContentType content_type = 1 [(buf.validate.field).enum.defined_only = true];
}

message CreateQualificationResponse {
  int64 qualification_id = 1;
}

message UpdateQualificationRequest {
  resources.qualifications.Qualification qualification = 1 [(buf.validate.field).required = true];
}

message UpdateQualificationResponse {
  int64 qualification_id = 1;
}

message DeleteQualificationRequest {
  int64 qualification_id = 1;
}

message DeleteQualificationResponse {}

// Access =====================================================================

message GetQualificationAccessRequest {
  int64 qualification_id = 1;
}

message GetQualificationAccessResponse {
  resources.qualifications.QualificationAccess access = 1 [(buf.validate.field).required = true];
}

message SetQualificationAccessRequest {
  int64 qualification_id = 1;
  resources.qualifications.QualificationAccess access = 2 [(buf.validate.field).required = true];
}

message SetQualificationAccessResponse {}

// Requests ===================================================================

message ListQualificationRequestsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional int64 qualification_id = 3;
  repeated resources.qualifications.RequestStatus status = 4;
  optional int32 user_id = 5 [(buf.validate.field).int32.gte = 0];
}

message ListQualificationRequestsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.qualifications.QualificationRequest requests = 2 [(codegen.itemslen.items_len) = true];
}

message CreateOrUpdateQualificationRequestRequest {
  resources.qualifications.QualificationRequest request = 1 [(buf.validate.field).required = true];
}

message CreateOrUpdateQualificationRequestResponse {
  resources.qualifications.QualificationRequest request = 1;
}

message DeleteQualificationReqRequest {
  int64 qualification_id = 1;
  int32 user_id = 2 [(buf.validate.field).int32.gte = 0];
}

message DeleteQualificationReqResponse {}

// Results ====================================================================

message ListQualificationsResultsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional int64 qualification_id = 3;
  repeated resources.qualifications.ResultStatus status = 4;
  optional int32 user_id = 5 [(buf.validate.field).int32.gte = 0];
}

message ListQualificationsResultsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.qualifications.QualificationResult results = 2 [(codegen.itemslen.items_len) = true];
}

message CreateOrUpdateQualificationResultRequest {
  resources.qualifications.QualificationResult result = 1 [(buf.validate.field).required = true];
  optional resources.qualifications.ExamGrading grading = 2;
}

message CreateOrUpdateQualificationResultResponse {
  resources.qualifications.QualificationResult result = 1;
}

message DeleteQualificationResultRequest {
  int64 result_id = 1;
}

message DeleteQualificationResultResponse {}

// Exam =======================================================================

message GetExamInfoRequest {
  int64 qualification_id = 1;
}

message GetExamInfoResponse {
  resources.qualifications.QualificationShort qualification = 1;
  int64 question_count = 2;
  optional resources.qualifications.ExamUser exam_user = 3;
}

message TakeExamRequest {
  int64 qualification_id = 1;
  optional bool cancel = 2;
}

message TakeExamResponse {
  resources.qualifications.ExamQuestions exam = 1;
  resources.qualifications.ExamUser exam_user = 2;
}

message SubmitExamRequest {
  int64 qualification_id = 1;
  resources.qualifications.ExamResponses responses = 2;
}

message SubmitExamResponse {
  google.protobuf.Duration duration = 1;
}

message GetUserExamRequest {
  int64 qualification_id = 1;
  int32 user_id = 2 [(buf.validate.field).int32.gte = 0];
}

message GetUserExamResponse {
  resources.qualifications.ExamQuestions exam = 1;
  resources.qualifications.ExamUser exam_user = 2;
  resources.qualifications.ExamResponses responses = 3;
  resources.qualifications.ExamGrading grading = 4;
}

service QualificationsService {
  rpc ListQualifications(ListQualificationsRequest) returns (ListQualificationsResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
  rpc GetQualification(GetQualificationRequest) returns (GetQualificationResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc CreateQualification(CreateQualificationRequest) returns (CreateQualificationResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "UpdateQualification"
    };
  }
  rpc UpdateQualification(UpdateQualificationRequest) returns (UpdateQualificationResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      attrs: [
        {
          key: "Access"
          type: ATTRIBUTE_TYPE_STRING_LIST
          valid_string_list: [
            "Own",
            "Lower_Rank",
            "Same_Rank",
            "Any"
          ]
        },
        {
          key: "Fields"
          type: ATTRIBUTE_TYPE_STRING_LIST
          valid_string_list: ["Public"]
        }
      ]
    };
  }
  rpc DeleteQualification(DeleteQualificationRequest) returns (DeleteQualificationResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      attrs: [
        {
          key: "Access"
          type: ATTRIBUTE_TYPE_STRING_LIST
          valid_string_list: [
            "Own",
            "Lower_Rank",
            "Same_Rank",
            "Any"
          ]
        }
      ]
    };
  }

  rpc ListQualificationRequests(ListQualificationRequestsRequest) returns (ListQualificationRequestsResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc CreateOrUpdateQualificationRequest(CreateOrUpdateQualificationRequestRequest) returns (CreateOrUpdateQualificationRequestResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc DeleteQualificationReq(DeleteQualificationReqRequest) returns (DeleteQualificationReqResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }

  rpc ListQualificationsResults(ListQualificationsResultsRequest) returns (ListQualificationsResultsResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc CreateOrUpdateQualificationResult(CreateOrUpdateQualificationResultRequest) returns (CreateOrUpdateQualificationResultResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc DeleteQualificationResult(DeleteQualificationResultRequest) returns (DeleteQualificationResultResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }

  rpc GetExamInfo(GetExamInfoRequest) returns (GetExamInfoResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc TakeExam(TakeExamRequest) returns (TakeExamResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc SubmitExam(SubmitExamRequest) returns (SubmitExamResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }
  rpc GetUserExam(GetUserExamRequest) returns (GetUserExamResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "ListQualifications"
    };
  }

  rpc UploadFile(stream resources.file.UploadFileRequest) returns (resources.file.UploadFileResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "UpdateQualification"
    };
  }
}
