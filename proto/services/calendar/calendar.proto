syntax = "proto3";

package services.calendar;

import "buf/validate/validate.proto";
import "resources/calendar/access.proto";
import "resources/calendar/calendar.proto";
import "resources/common/database/database.proto";
import "resources/timestamp/timestamp.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/calendar;calendar";

// Calendar

message ListCalendarsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  bool only_public = 2;
  optional resources.calendar.AccessLevel min_access_level = 3;
  optional resources.timestamp.Timestamp after = 4;
}

message ListCalendarsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.calendar.Calendar calendars = 2;
}

message GetCalendarRequest {
  int64 calendar_id = 1;
}

message GetCalendarResponse {
  resources.calendar.Calendar calendar = 1;
}

message CreateCalendarRequest {
  resources.calendar.Calendar calendar = 1 [(buf.validate.field).required = true];
}

message CreateCalendarResponse {
  resources.calendar.Calendar calendar = 1;
}

message UpdateCalendarRequest {
  resources.calendar.Calendar calendar = 1 [(buf.validate.field).required = true];
}

message UpdateCalendarResponse {
  resources.calendar.Calendar calendar = 1;
}

message DeleteCalendarRequest {
  int64 calendar_id = 1;
}

message DeleteCalendarResponse {}

// Calendar Entries

message ListCalendarEntriesRequest {
  int32 year = 1 [(buf.validate.field).int32 = {gte: 2023}];
  int32 month = 2 [(buf.validate.field).int32 = {
    gte: 1
    lte: 12
  }];
  repeated int64 calendar_ids = 3;
  optional bool show_hidden = 4;
  optional resources.timestamp.Timestamp after = 5;
}

message ListCalendarEntriesResponse {
  repeated resources.calendar.CalendarEntry entries = 1;
}

message GetUpcomingEntriesRequest {
  int32 seconds = 1;
}

message GetUpcomingEntriesResponse {
  repeated resources.calendar.CalendarEntry entries = 1;
}

message GetCalendarEntryRequest {
  int64 entry_id = 1;
}

message GetCalendarEntryResponse {
  resources.calendar.CalendarEntry entry = 1;
}

message CreateOrUpdateCalendarEntryRequest {
  resources.calendar.CalendarEntry entry = 1 [(buf.validate.field).required = true];
  repeated int32 user_ids = 2;
}

message CreateOrUpdateCalendarEntryResponse {
  resources.calendar.CalendarEntry entry = 1;
}

message DeleteCalendarEntryRequest {
  int64 entry_id = 1;
}

message DeleteCalendarEntryResponse {}

message ShareCalendarEntryRequest {
  int64 entry_id = 1;
  repeated int32 user_ids = 2;
}

message ShareCalendarEntryResponse {}

// RSVP

message ListCalendarEntryRSVPRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  int64 entry_id = 2;
}

message ListCalendarEntryRSVPResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.calendar.CalendarEntryRSVP entries = 2;
}

message RSVPCalendarEntryRequest {
  resources.calendar.CalendarEntryRSVP entry = 1;
  bool subscribe = 2;
  optional bool remove = 3;
}

message RSVPCalendarEntryResponse {
  optional resources.calendar.CalendarEntryRSVP entry = 1;
}

// Subs

message ListSubscriptionsRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
}

message ListSubscriptionsResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.calendar.CalendarSub subs = 2;
}

message SubscribeToCalendarRequest {
  resources.calendar.CalendarSub sub = 1;
  bool delete = 2;
}

message SubscribeToCalendarResponse {
  resources.calendar.CalendarSub sub = 1;
}

service CalendarService {
  // @perm: Name=Any
  rpc ListCalendars(ListCalendarsRequest) returns (ListCalendarsResponse);
  // @perm: Name=Any
  rpc GetCalendar(GetCalendarRequest) returns (GetCalendarResponse);
  // @perm: Attrs=Fields/StringList:[]string{"Job", "Public"}
  rpc CreateCalendar(CreateCalendarRequest) returns (CreateCalendarResponse);
  // @perm: Name=Any
  rpc UpdateCalendar(UpdateCalendarRequest) returns (UpdateCalendarResponse);
  // @perm: Name=Any
  rpc DeleteCalendar(DeleteCalendarRequest) returns (DeleteCalendarResponse);

  // @perm: Name=Any
  rpc ListCalendarEntries(ListCalendarEntriesRequest) returns (ListCalendarEntriesResponse);
  // @perm: Name=Any
  rpc GetUpcomingEntries(GetUpcomingEntriesRequest) returns (GetUpcomingEntriesResponse);
  // @perm: Name=Any
  rpc GetCalendarEntry(GetCalendarEntryRequest) returns (GetCalendarEntryResponse);
  // @perm: Name=Any
  rpc CreateOrUpdateCalendarEntry(CreateOrUpdateCalendarEntryRequest) returns (CreateOrUpdateCalendarEntryResponse);
  // @perm: Name=Any
  rpc DeleteCalendarEntry(DeleteCalendarEntryRequest) returns (DeleteCalendarEntryResponse);
  // @perm: Name=Any
  rpc ShareCalendarEntry(ShareCalendarEntryRequest) returns (ShareCalendarEntryResponse);

  // @perm: Name=Any
  rpc ListCalendarEntryRSVP(ListCalendarEntryRSVPRequest) returns (ListCalendarEntryRSVPResponse);
  // @perm: Name=Any
  rpc RSVPCalendarEntry(RSVPCalendarEntryRequest) returns (RSVPCalendarEntryResponse);

  // @perm: Name=Any
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse);
  // @perm: Name=Any
  rpc SubscribeToCalendar(SubscribeToCalendarRequest) returns (SubscribeToCalendarResponse);
}
