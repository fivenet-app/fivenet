syntax = "proto3";

package services.filestore;

import "buf/validate/validate.proto";
import "codegen/itemslen/itemslen.proto";
import "codegen/perms/perms.proto";
import "resources/common/database/database.proto";
import "resources/file/file.proto";
import "resources/file/filestore.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/filestore;filestore";

message ListFilesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional string path = 2 [(buf.validate.field).string.max_len = 128];
}

message ListFilesResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.file.File files = 2 [(codegen.itemslen.items_len) = true];
}

message DeleteFileByPathRequest {
  string path = 1 [(buf.validate.field).string.max_len = 128];
}

message DeleteFileByPathResponse {}

service FilestoreService {
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  rpc Upload(stream resources.file.UploadFileRequest) returns (resources.file.UploadFileResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "Superuser"
    };
  }

  rpc ListFiles(ListFilesRequest) returns (ListFilesResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "Superuser"
    };
  }
  rpc DeleteFile(resources.file.DeleteFileRequest) returns (resources.file.DeleteFileResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "Superuser"
    };
  }
  rpc DeleteFileByPath(DeleteFileByPathRequest) returns (DeleteFileByPathResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      name: "Superuser"
    };
  }
}
