syntax = "proto3";

package services.vehicles;

import "buf/validate/validate.proto";
import "resources/common/database/database.proto";
import "resources/vehicles/props.proto";
import "resources/vehicles/vehicles.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/vehicles;vehicles";

message ListVehiclesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  optional string license_plate = 3 [(buf.validate.field).string.max_len = 32];
  optional string model = 4 [(buf.validate.field).string.max_len = 32];
  repeated int32 user_ids = 5 [(buf.validate.field).repeated.items.int32.gte = 0];
  optional string job = 6 [(buf.validate.field).string.max_len = 20];
  optional bool wanted = 7;
}

message ListVehiclesResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.vehicles.Vehicle vehicles = 2;
}

message SetVehiclePropsRequest {
  resources.vehicles.VehicleProps props = 1 [(buf.validate.field).required = true];
}

message SetVehiclePropsResponse {
  resources.vehicles.VehicleProps props = 1;
  // @sanitize
  string reason = 2 [
    (buf.validate.field).string = {
      min_len: 3
      max_len: 255
    },
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE
  ];
}

service VehiclesService {
  // @perm: Attrs=Fields/StringList:[]string{"Wanted"}
  rpc ListVehicles(ListVehiclesRequest) returns (ListVehiclesResponse);

  // @perm: Attrs=Fields/StringList:[]string{"Wanted"}
  rpc SetVehicleProps(SetVehiclePropsRequest) returns (SetVehiclePropsResponse);
}
