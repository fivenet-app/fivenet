syntax = "proto3";

package services.jobs;

import "resources/common/database/database.proto";
import "resources/jobs/activity.proto";
import "resources/jobs/colleagues.proto";
import "resources/jobs/labels.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/jobs;jobs";

// Colleagues

message ListColleaguesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  string search = 3 [(validate.rules).string.max_len = 64];
  optional int32 user_id = 4 [(validate.rules).int32.gte = 0];
  optional bool absent = 5;
  repeated uint64 label_ids = 6;
  optional string name_prefix = 7 [(validate.rules).string.max_len = 12];
  optional string name_suffix = 8 [(validate.rules).string.max_len = 12];
}

message ListColleaguesResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.Colleague colleagues = 2;
}

message GetSelfRequest {}

message GetSelfResponse {
  resources.jobs.Colleague colleague = 1;
}

message GetColleagueRequest {
  int32 user_id = 1 [(validate.rules).int32.gte = 0];
  optional bool info_only = 2;
}

message GetColleagueResponse {
  resources.jobs.Colleague colleague = 1;
}

message ListColleagueActivityRequest {
  resources.common.database.PaginationRequest pagination = 1 [(validate.rules).message.required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  repeated int32 user_ids = 3;
  repeated resources.jobs.JobsUserActivityType activity_types = 4 [(validate.rules).repeated.max_items = 10];
}

message ListColleagueActivityResponse {
  resources.common.database.PaginationResponse pagination = 1;
  repeated resources.jobs.JobsUserActivity activity = 2;
}

message SetJobsUserPropsRequest {
  resources.jobs.JobsUserProps props = 1;
  // @sanitize
  string reason = 2 [(validate.rules).string = {
    ignore_empty: true,
    min_len: 3,
    max_len: 255
  }];
}

message SetJobsUserPropsResponse {
  resources.jobs.JobsUserProps props = 1;
}

message GetColleagueLabelsRequest {
  optional string search = 1 [(validate.rules).string.max_len = 32];
}

message GetColleagueLabelsResponse {
  repeated resources.jobs.Label labels = 1;
}

message ManageColleagueLabelsRequest {
  repeated resources.jobs.Label labels = 1;
}

message ManageColleagueLabelsResponse {
  repeated resources.jobs.Label labels = 1;
}

message GetColleagueLabelsStatsRequest {
  repeated uint64 label_ids = 1;
}

message GetColleagueLabelsStatsResponse {
  repeated resources.jobs.LabelCount count = 1;
}

// MOTD

message GetMOTDRequest {}

message GetMOTDResponse {
  string motd = 1;
}

message SetMOTDRequest {
  // @sanitize: method=StripTags
  string motd = 1 [(validate.rules).string.max_len = 1024];
}

message SetMOTDResponse {
  string motd = 1;
}

service JobsService {
  // @perm
  rpc ListColleagues(ListColleaguesRequest) returns (ListColleaguesResponse);
  // @perm: Name=ListColleagues
  rpc GetSelf(GetSelfRequest) returns (GetSelfResponse);

  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank", "Any"}|Types/StringList:[]string{"Note", "Labels"}
  rpc GetColleague(GetColleagueRequest) returns (GetColleagueResponse);
  // @perm: Attrs=Types/StringList:[]string{"HIRED", "FIRED", "PROMOTED", "DEMOTED", "ABSENCE_DATE", "NOTE", "LABELS", "NAME"}
  rpc ListColleagueActivity(ListColleagueActivityRequest) returns (ListColleagueActivityResponse);
  // @perm: Attrs=Access/StringList:[]string{"Own", "Lower_Rank", "Same_Rank", "Any"}|Types/StringList:[]string{"AbsenceDate", "Note", "Labels", "Name"}
  rpc SetJobsUserProps(SetJobsUserPropsRequest) returns (SetJobsUserPropsResponse);
  // @perm: Name=GetColleague
  rpc GetColleagueLabels(GetColleagueLabelsRequest) returns (GetColleagueLabelsResponse);
  // @perm
  rpc ManageColleagueLabels(ManageColleagueLabelsRequest) returns (ManageColleagueLabelsResponse);
  // @perm: Name=GetColleague
  rpc GetColleagueLabelsStats(GetColleagueLabelsStatsRequest) returns (GetColleagueLabelsStatsResponse);

  // @perm: Name=Any
  rpc GetMOTD(GetMOTDRequest) returns (GetMOTDResponse);
  // @perm
  rpc SetMOTD(SetMOTDRequest) returns (SetMOTDResponse);
}
