syntax = "proto3";

package services.jobs;

import "buf/validate/validate.proto";
import "codegen/itemslen/itemslen.proto";
import "codegen/perms/perms.proto";
import "resources/common/database/database.proto";
import "resources/jobs/conduct.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/services/jobs;jobs";

// Conduct Register

message ListConductEntriesRequest {
  resources.common.database.PaginationRequest pagination = 1 [(buf.validate.field).required = true];
  optional resources.common.database.Sort sort = 2;
  // Search params
  repeated resources.jobs.ConductType types = 3;
  optional bool show_expired = 4;
  repeated int32 user_ids = 5;
  repeated int64 ids = 6;
}

message ListConductEntriesResponse {
  resources.common.database.PaginationResponse pagination = 1 [(buf.validate.field).required = true];
  repeated resources.jobs.ConductEntry entries = 2 [(codegen.itemslen.items_len) = true];
}

message CreateConductEntryRequest {
  resources.jobs.ConductEntry entry = 1 [(buf.validate.field).required = true];
}

message CreateConductEntryResponse {
  resources.jobs.ConductEntry entry = 1;
}

message UpdateConductEntryRequest {
  resources.jobs.ConductEntry entry = 1 [(buf.validate.field).required = true];
}

message UpdateConductEntryResponse {
  resources.jobs.ConductEntry entry = 1 [(buf.validate.field).required = true];
}

message DeleteConductEntryRequest {
  int64 id = 1;
}

message DeleteConductEntryResponse {}

service ConductService {
  rpc ListConductEntries(ListConductEntriesRequest) returns (ListConductEntriesResponse) {
    option (codegen.perms.perms) = {
      enabled: true
      attrs: [
        {
          key: "Access"
          type: ATTRIBUTE_TYPE_STRING_LIST
          valid_string_list: [
            "Own",
            "All"
          ]
        }
      ]
    };
  }
  rpc CreateConductEntry(CreateConductEntryRequest) returns (CreateConductEntryResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
  rpc UpdateConductEntry(UpdateConductEntryRequest) returns (UpdateConductEntryResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
  rpc DeleteConductEntry(DeleteConductEntryRequest) returns (DeleteConductEntryResponse) {
    option (codegen.perms.perms) = {enabled: true};
  }
}
