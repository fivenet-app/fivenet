syntax = "proto3";

package resources.wiki;

import "buf/validate/validate.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "resources/wiki/access.proto";
import "tagger/tagger.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/wiki;wiki";

enum PageActivityType {
  PAGE_ACTIVITY_TYPE_UNSPECIFIED = 0;
  // Base
  PAGE_ACTIVITY_TYPE_CREATED = 1;
  PAGE_ACTIVITY_TYPE_UPDATED = 2;
  PAGE_ACTIVITY_TYPE_ACCESS_UPDATED = 3;
  PAGE_ACTIVITY_TYPE_OWNER_CHANGED = 4;
  PAGE_ACTIVITY_TYPE_DELETED = 5;
  PAGE_ACTIVITY_TYPE_DRAFT_TOGGLED = 6;
}

message PageActivity {
  int64 id = 1;
  resources.timestamp.Timestamp created_at = 2;
  int64 page_id = 3;
  PageActivityType activity_type = 4;
  optional int32 creator_id = 5 [(buf.validate.field).int32.gt = 0];
  optional resources.users.UserShort creator = 6 [(tagger.tags) = "alias:\"creator\""];
  string creator_job = 7 [(buf.validate.field).string.max_len = 20];
  optional string creator_job_label = 8 [(buf.validate.field).string.max_len = 50];
  optional string reason = 9 [(buf.validate.field).string.max_len = 255];
  PageActivityData data = 10;
}

// @dbscanner: json
message PageActivityData {
  oneof data {
    option (buf.validate.oneof).required = true;

    PageUpdated updated = 1;
    PageAccessUpdated access_updated = 2;
  }
}

message PageUpdated {
  optional string title_diff = 1;
  optional string description_diff = 2;
  optional string content_diff = 3;
  optional PageFilesChange files_change = 4;
}

message PageFilesChange {
  int64 added = 1;
  int64 deleted = 2;
}

message PageAccessUpdated {
  PageAccessJobsDiff jobs = 1;
  PageAccessUsersDiff users = 2;
}

message PageAccessJobsDiff {
  repeated PageJobAccess to_create = 1 [(buf.validate.field).repeated.max_items = 20];
  repeated PageJobAccess to_update = 2 [(buf.validate.field).repeated.max_items = 20];
  repeated PageJobAccess to_delete = 3 [(buf.validate.field).repeated.max_items = 20];
}

message PageAccessUsersDiff {
  repeated PageUserAccess to_create = 1 [(buf.validate.field).repeated.max_items = 20];
  repeated PageUserAccess to_update = 2 [(buf.validate.field).repeated.max_items = 20];
  repeated PageUserAccess to_delete = 3 [(buf.validate.field).repeated.max_items = 20];
}
