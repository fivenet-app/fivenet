syntax = "proto3";

package resources.documents;

import "buf/validate/validate.proto";
import "codegen/dbscanner/dbscanner.proto";
import "codegen/sanitizer/sanitizer.proto";
import "resources/documents/access.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "tagger/tagger.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents;documents";

enum DocActivityType {
  DOC_ACTIVITY_TYPE_UNSPECIFIED = 0;
  // Base
  DOC_ACTIVITY_TYPE_CREATED = 1;
  DOC_ACTIVITY_TYPE_STATUS_OPEN = 2;
  DOC_ACTIVITY_TYPE_STATUS_CLOSED = 3;
  DOC_ACTIVITY_TYPE_UPDATED = 4;
  DOC_ACTIVITY_TYPE_RELATIONS_UPDATED = 5;
  DOC_ACTIVITY_TYPE_REFERENCES_UPDATED = 6;
  DOC_ACTIVITY_TYPE_ACCESS_UPDATED = 7;
  DOC_ACTIVITY_TYPE_OWNER_CHANGED = 8;
  DOC_ACTIVITY_TYPE_DELETED = 9;
  DOC_ACTIVITY_TYPE_DRAFT_TOGGLED = 19;
  // Comments
  DOC_ACTIVITY_TYPE_COMMENT_ADDED = 10;
  DOC_ACTIVITY_TYPE_COMMENT_UPDATED = 11;
  DOC_ACTIVITY_TYPE_COMMENT_DELETED = 12;
  // Requests
  DOC_ACTIVITY_TYPE_REQUESTED_ACCESS = 13;
  DOC_ACTIVITY_TYPE_REQUESTED_CLOSURE = 14;
  DOC_ACTIVITY_TYPE_REQUESTED_OPENING = 15;
  DOC_ACTIVITY_TYPE_REQUESTED_UPDATE = 16;
  DOC_ACTIVITY_TYPE_REQUESTED_OWNER_CHANGE = 17;
  DOC_ACTIVITY_TYPE_REQUESTED_DELETION = 18;
  DOC_ACTIVITY_TYPE_REQUESTED_APPROVAL = 20;
  DOC_ACTIVITY_TYPE_REQUESTED_SIGNING = 21;
  // Approval
  DOC_ACTIVITY_TYPE_APPROVAL_ASSIGNED = 40;
  DOC_ACTIVITY_TYPE_APPROVAL_APPROVED = 41;
  DOC_ACTIVITY_TYPE_APPROVAL_REJECTED = 42;
  DOC_ACTIVITY_TYPE_APPROVAL_REVOKED = 43;
  DOC_ACTIVITY_TYPE_APPROVAL_REMOVED = 44;
  // Signing
  DOC_ACTIVITY_TYPE_SIGNING_ASSIGNED = 50;
  DOC_ACTIVITY_TYPE_SIGNING_SIGNED = 51;
  DOC_ACTIVITY_TYPE_SIGNING_REJECTED = 52;
  DOC_ACTIVITY_TYPE_SIGNING_REVOKED = 53;
  DOC_ACTIVITY_TYPE_SIGNING_REMOVED = 54;
}

message DocActivity {
  int64 id = 1;
  resources.timestamp.Timestamp created_at = 2;
  int64 document_id = 3;
  DocActivityType activity_type = 4;
  optional int32 creator_id = 5 [(buf.validate.field).int32.gt = 0];
  optional resources.users.UserShort creator = 6 [(tagger.tags) = "alias:\"creator\""];
  string creator_job = 7 [(buf.validate.field).string.max_len = 20];
  optional string creator_job_label = 8 [(buf.validate.field).string.max_len = 50];
  optional string reason = 9 [
    (buf.validate.field).string.max_len = 255,
    (codegen.sanitizer.sanitizer) = {enabled: true}
  ];
  DocActivityData data = 10;
}

message DocActivityData {
  option (codegen.dbscanner.dbscanner) = {enabled: true};

  oneof data {
    option (buf.validate.oneof).required = true;

    DocUpdated updated = 1;
    DocOwnerChanged owner_changed = 2;
    DocAccessUpdated access_updated = 4;
    DocAccessRequested access_requested = 5;
    DocSigningRequested signing_requested = 6;
  }
}

message DocUpdated {
  optional string title_diff = 1;
  optional string content_diff = 2;
  optional string state_diff = 3;
  optional DocFilesChange files_change = 4;
}

message DocFilesChange {
  int64 added = 1;
  int64 deleted = 2;
}

message DocOwnerChanged {
  int32 new_owner_id = 1;
  resources.users.UserShort new_owner = 2;
}

message DocAccessRequested {
  resources.documents.AccessLevel level = 1 [(buf.validate.field).enum.defined_only = true];
}

message DocAccessUpdated {
  DocAccessJobsDiff jobs = 1;
  DocAccessUsersDiff users = 2;
}

message DocAccessJobsDiff {
  repeated DocumentJobAccess to_create = 1 [(buf.validate.field).repeated.max_items = 20];
  repeated DocumentJobAccess to_update = 2 [(buf.validate.field).repeated.max_items = 20];
  repeated DocumentJobAccess to_delete = 3 [(buf.validate.field).repeated.max_items = 20];
}

message DocAccessUsersDiff {
  repeated DocumentUserAccess to_create = 1 [(buf.validate.field).repeated.max_items = 20];
  repeated DocumentUserAccess to_update = 2 [(buf.validate.field).repeated.max_items = 20];
  repeated DocumentUserAccess to_delete = 3 [(buf.validate.field).repeated.max_items = 20];
}

message DocSigningRequested {
  optional resources.timestamp.Timestamp deadline = 1;
  repeated resources.users.UserShort approvers = 2 [(buf.validate.field).repeated.max_items = 8];
}
