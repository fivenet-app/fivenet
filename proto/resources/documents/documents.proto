syntax = "proto3";

package resources.documents;

import "resources/common/content/content.proto";
import "resources/documents/category.proto";
import "resources/documents/pins.proto";
import "resources/documents/workflow.proto";
import "resources/file/file.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents;documents";

message Document {
  uint64 id = 1;
  resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  optional uint64 category_id = 5;
  optional resources.documents.Category category = 6; // @gotags: alias:"category"
  // @sanitize
  string title = 7 [(validate.rules).string = {
    min_len: 3,
    max_len: 512
  }];
  resources.common.content.ContentType content_type = 8 [(validate.rules).enum.defined_only = true];
  resources.common.content.Content content = 9;
  // @sanitize
  optional string data = 10 [(validate.rules).string = {
    max_bytes: 1000000 // 1 Megabyte
  }]; // @gotags: alias:"data"
  optional int32 creator_id = 11 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13 [(validate.rules).string.max_len = 20];
  optional string creator_job_label = 14 [(validate.rules).string.max_len = 50];
  // @sanitize
  string state = 15 [(validate.rules).string.max_len = 32];
  bool closed = 16;
  bool draft = 17;
  bool public = 18;
  optional uint64 template_id = 19;
  optional DocumentPin pin = 20; // @gotags: alias:"pin"
  optional WorkflowState workflow_state = 21;
  optional WorkflowUserState workflow_user = 22;
  repeated resources.file.File files = 23; // @gotags: alias:"files"
}

message DocumentShort {
  uint64 id = 1;
  resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  optional uint64 category_id = 5;
  optional resources.documents.Category category = 6; // @gotags: alias:"category"
  // @sanitize
  string title = 7 [(validate.rules).string = {
    min_len: 3,
    max_len: 512
  }];
  resources.common.content.ContentType content_type = 8 [(validate.rules).enum.defined_only = true];
  // @sanitize
  resources.common.content.Content content = 9;
  optional int32 creator_id = 11 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13 [(validate.rules).string.max_len = 20];
  optional string creator_job_label = 14 [(validate.rules).string.max_len = 50];
  // @sanitize
  string state = 15 [(validate.rules).string.max_len = 32];
  bool closed = 16;
  bool draft = 17;
  bool public = 18;
  optional DocumentPin pin = 20; // @gotags: alias:"pin"
  optional WorkflowState workflow_state = 21;
  optional WorkflowUserState workflow_user = 22;
}

enum DocReference {
  DOC_REFERENCE_UNSPECIFIED = 0;
  DOC_REFERENCE_LINKED = 1;
  DOC_REFERENCE_SOLVES = 2;
  DOC_REFERENCE_CLOSES = 3;
  DOC_REFERENCE_DEPRECATES = 4;
}

message DocumentReference {
  optional uint64 id = 1;
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 source_document_id = 3; // @gotags: alias:"source_document_id"
  optional resources.documents.DocumentShort source_document = 4; // @gotags: alias:"source_document"
  DocReference reference = 5 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"reference"
  uint64 target_document_id = 6; // @gotags: alias:"target_document_id"
  optional resources.documents.DocumentShort target_document = 7; // @gotags: alias:"target_document"
  optional int32 creator_id = 8 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 9; // @gotags: alias:"ref_creator"
}

enum DocRelation {
  DOC_RELATION_UNSPECIFIED = 0;
  DOC_RELATION_MENTIONED = 1;
  DOC_RELATION_TARGETS = 2;
  DOC_RELATION_CAUSED = 3;
}

message DocumentRelation {
  optional uint64 id = 1;
  optional resources.timestamp.Timestamp created_at = 2;
  uint64 document_id = 3;
  optional resources.documents.DocumentShort document = 4; // @gotags: alias:"document"
  int32 source_user_id = 5 [(validate.rules).int32.gt = 0]; // @gotags: alias:"source_user_id"
  optional resources.users.UserShort source_user = 6; // @gotags: alias:"source_user"
  DocRelation relation = 7 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"relation"
  int32 target_user_id = 8 [(validate.rules).int32.gt = 0]; // @gotags: alias:"target_user_id"
  optional resources.users.UserShort target_user = 9; // @gotags: alias:"target_user"
}

message WorkflowState {
  uint64 document_id = 1;
  optional resources.timestamp.Timestamp next_reminder_time = 2;
  optional int32 next_reminder_count = 3;
  optional resources.timestamp.Timestamp auto_close_time = 4;

  optional resources.documents.Workflow workflow = 5; // @gotags: alias:"workflow"
  optional resources.documents.DocumentShort document = 6;
}

message WorkflowUserState {
  uint64 document_id = 1;
  int32 user_id = 2 [(validate.rules).int32.gt = 0];
  optional resources.timestamp.Timestamp manual_reminder_time = 3;
  optional string manual_reminder_message = 4 [(validate.rules).string.max_len = 255];

  optional resources.documents.Workflow workflow = 5; // @gotags: alias:"workflow"
  optional resources.documents.DocumentShort document = 6;
}
