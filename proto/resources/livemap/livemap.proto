syntax = "proto3";

package resources.livemap;

import "resources/centrum/units.proto";
import "resources/jobs/colleagues.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/livemap;livemap";

enum MarkerType {
  MARKER_TYPE_UNSPECIFIED = 0;
  MARKER_TYPE_DOT = 1;
  MARKER_TYPE_CIRCLE = 2;
  MARKER_TYPE_ICON = 3;
}

message UserMarker {
  int32 user_id = 1 [(validate.rules).int32.gt = 0];
  double x = 2;
  double y = 3;
  optional resources.timestamp.Timestamp updated_at = 4;
  // @sanitize: method=StripTags
  optional string postal = 5 [(validate.rules).string.max_len = 48];
  // @sanitize: method=StripTags
  optional string color = 6 [(validate.rules).string = {
    len: 7,
    pattern: "^#[A-Fa-f0-9]{6}$",
  }];

  string job = 7 [(validate.rules).string.max_len = 20];
  string job_label = 8;

  resources.jobs.Colleague user = 9; // @gotags: alias:"user"
  optional uint64 unit_id = 10;
  optional resources.centrum.Unit unit = 11;

  bool hidden = 12;
}

message MarkerMarker {
  uint64 id = 1;
  double x = 2;
  double y = 3;
  optional resources.timestamp.Timestamp created_at = 4;
  optional resources.timestamp.Timestamp updated_at = 5;
  optional resources.timestamp.Timestamp expires_at = 6;
  optional resources.timestamp.Timestamp deleted_at = 7;
  // @sanitize
  string name = 8 [(validate.rules).string = {
    min_len: 1,
    max_len: 255,
  }];
  // @sanitize
  optional string description = 9;
  // @sanitize: method=StripTags
  optional string postal = 10 [(validate.rules).string.max_len = 48];
  // @sanitize: method=StripTags
  optional string color = 11 [(validate.rules).string = {
    len: 7,
    pattern: "^#[A-Fa-f0-9]{6}$",
  }];
  string job = 12 [(validate.rules).string.max_len = 20];
  string job_label = 13;

  MarkerType type = 14; // @gotags: alias:"markerType"
  MarkerData data = 15; // @gotags: alias:"markerData"

  optional int32 creator_id = 16 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 17;
}

// @dbscanner
message MarkerData {
  oneof data {
    option (validate.required) = true;

    CircleMarker circle = 3;
    IconMarker icon = 4;
  }
}

message CircleMarker {
  int32 radius = 1;
  optional float opacity = 2 [(validate.rules).float = {
    gte: 1,
    lte: 75,
  }];
}

message IconMarker {
  // @sanitize: method=StripTags
  string icon = 1 [(validate.rules).string.max_len = 128];
}

message Coords {
  double x = 1;
  double y = 2;
}
