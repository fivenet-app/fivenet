syntax = "proto3";

package resources.users;

import "resources/timestamp/timestamp.proto";
import "resources/users/labels.proto";
import "resources/users/licenses.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/users;users";

enum UserActivityType {
  USER_ACTIVITY_TYPE_UNSPECIFIED = 0;
  reserved 1 to 3;

  // Types for `UserActivityData`

  USER_ACTIVITY_TYPE_NAME = 4;
  USER_ACTIVITY_TYPE_LICENSES = 5;
  USER_ACTIVITY_TYPE_WANTED = 6;
  USER_ACTIVITY_TYPE_TRAFFIC_INFRACTION_POINTS = 7;
  USER_ACTIVITY_TYPE_MUGSHOT = 8;
  USER_ACTIVITY_TYPE_LABELS = 9;
  USER_ACTIVITY_TYPE_JOB = 10;
  USER_ACTIVITY_TYPE_DOCUMENT = 11;
  USER_ACTIVITY_TYPE_JAIL = 12;
  USER_ACTIVITY_TYPE_FINE = 13;
}

message UserActivity {
  uint64 id = 1; // @gotags: alias:"user_activity.id"
  UserActivityType type = 2 [(validate.rules).enum.defined_only = true]; // @gotags: alias:"user_activity.type"
  resources.timestamp.Timestamp created_at = 3; // @gotags: alias:"user_activity.created_at"
  optional int32 source_user_id = 4; // @gotags: alias:"source_user_id"
  optional UserShort source_user = 5; // @gotags: alias:"source_user"
  int32 target_user_id = 6; // @gotags: alias:"target_user_id"
  UserShort target_user = 7; // @gotags: alias:"target_user"
  // @sanitize
  string key = 8 [(validate.rules).string.max_len = 64]; // @gotags: alias:"user_activity.key"
  // @sanitize
  string reason = 9 [(validate.rules).string.max_len = 255]; // @gotags: alias:"user_activity.reason"
  optional UserActivityData data = 10; // @gotags: alias:"user_activity.data"
  string old_value = 11 [(validate.rules).string.max_len = 255]; // @gotags: alias:"user_activity.old_value"
  string new_value = 12 [(validate.rules).string.max_len = 255]; // @gotags: alias:"user_activity.new_value"
}

// @dbscanner: json
message UserActivityData {
  oneof data {
    option (validate.required) = true;

    NameChange name_change = 1;
    LicenseChange licenses_change = 2;

    // User Props
    WantedChange wanted_change = 3;
    TrafficInfractionPointsChange traffic_infraction_points_change = 4;
    MugshotChange mugshot_change = 5;
    LabelsChange labels_change = 6;
    JobChange job_change = 7;

    // Docstore related
    CitizenDocumentRelation document_relation = 8;

    // "Plugin" activities
    JailChange jail_change = 9;
    FineChange fine_change = 10;
  }
}

message NameChange {
  string old = 1;
  string new = 2;
}

message LicenseChange {
  bool added = 1;
  repeated License licenses = 2;
}

message WantedChange {
  bool wanted = 1;
}

message TrafficInfractionPointsChange {
  uint32 old = 1;
  uint32 new = 2;
}

message MugshotChange {
  optional string new = 1;
}

message LabelsChange {
  repeated Label added = 1;
  repeated Label removed = 2;
}

message JobChange {
  optional string job = 1;
  optional string job_label = 2;
  optional int32 grade = 3;
  optional string grade_label = 4;
}

message CitizenDocumentRelation {
  bool added = 1;
  uint64 document_id = 2;
  int32 relation = 3; // resources.documents.DocRelation enum
}

message JailChange {
  int32 seconds = 1;
  bool admin = 2;
  optional string location = 3;
}

message FineChange {
  bool removed = 1;
  int64 amount = 2;
}
