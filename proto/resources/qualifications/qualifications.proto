syntax = "proto3";

package resources.qualifications;

import "buf/validate/validate.proto";
import "codegen/dbscanner/dbscanner.proto";
import "codegen/sanitizer/sanitizer.proto";
import "google/protobuf/duration.proto";
import "resources/common/content/content.proto";
import "resources/file/file.proto";
import "resources/qualifications/access.proto";
import "resources/qualifications/exam.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "tagger/tagger.proto";

option go_package = "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/qualifications;qualifications";

message Qualification {
  int64 id = 1 [(tagger.tags) = "sql:\"primary_key\" alias:\"id\""];
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  string job = 5 [(buf.validate.field).string.max_len = 20];
  uint32 weight = 6 [(buf.validate.field).uint32.lt = 4294967295];
  bool closed = 7;
  bool draft = 8;
  bool public = 9;
  string abbreviation = 10 [
    (buf.validate.field).string.max_len = 20,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  string title = 11 [
    (buf.validate.field).string = {
      min_len: 3
      max_len: 1024
    },
    (codegen.sanitizer.sanitizer) = {enabled: true}
  ];
  optional string description = 12 [
    (buf.validate.field).string.max_len = 512,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  resources.common.content.Content content = 13;
  optional int32 creator_id = 14 [(buf.validate.field).int32.gt = 0];
  optional resources.users.UserShort creator = 15 [(tagger.tags) = "alias:\"creator\""];
  string creator_job = 16 [(buf.validate.field).string.max_len = 20];
  resources.qualifications.QualificationAccess access = 17;
  repeated QualificationRequirement requirements = 18;
  bool discord_sync_enabled = 19;
  optional QualificationDiscordSettings discord_settings = 20;
  QualificationExamMode exam_mode = 21 [(buf.validate.field).enum.defined_only = true];
  optional QualificationExamSettings exam_settings = 22;
  optional resources.qualifications.ExamQuestions exam = 23;
  optional QualificationResult result = 24;
  optional QualificationRequest request = 25;
  bool label_sync_enabled = 26;
  optional string label_sync_format = 27 [
    (buf.validate.field).string.max_len = 128,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  repeated resources.file.File files = 28 [(tagger.tags) = "alias:\"files\""];
}

message QualificationShort {
  int64 id = 1 [(tagger.tags) = "sql:\"primary_key\" alias:\"id\""];
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  string job = 5 [(buf.validate.field).string.max_len = 20];
  uint32 weight = 6 [(buf.validate.field).uint32.lt = 4294967295];
  bool closed = 7;
  bool draft = 8;
  bool public = 9;
  string abbreviation = 10 [
    (buf.validate.field).string.max_len = 20,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  string title = 11 [
    (buf.validate.field).string = {
      min_len: 3
      max_len: 1024
    },
    (codegen.sanitizer.sanitizer) = {enabled: true}
  ];
  optional string description = 12 [
    (buf.validate.field).string.max_len = 512,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  optional int32 creator_id = 14 [(buf.validate.field).int32.gt = 0];
  optional resources.users.UserShort creator = 15 [(tagger.tags) = "alias:\"creator\""];
  string creator_job = 16 [(buf.validate.field).string.max_len = 20];
  repeated QualificationRequirement requirements = 18;
  QualificationExamMode exam_mode = 21 [(buf.validate.field).enum.defined_only = true];
  optional QualificationExamSettings exam_settings = 22;
  optional QualificationResult result = 24;
}

message QualificationRequirement {
  int64 id = 1 [(tagger.tags) = "sql:\"primary_key\" alias:\"id\""];
  optional resources.timestamp.Timestamp created_at = 2;
  int64 qualification_id = 3;
  int64 target_qualification_id = 4;
  optional QualificationShort target_qualification = 5 [(tagger.tags) = "alias:\"targetqualification\""];
}

message QualificationDiscordSettings {
  option (codegen.dbscanner.dbscanner) = {enabled: true};

  optional string role_name = 1 [(buf.validate.field).string.max_len = 64];
  optional string role_format = 2 [(buf.validate.field).string.max_len = 64];
}

enum QualificationExamMode {
  QUALIFICATION_EXAM_MODE_UNSPECIFIED = 0;
  QUALIFICATION_EXAM_MODE_DISABLED = 1;
  QUALIFICATION_EXAM_MODE_REQUEST_NEEDED = 2;
  QUALIFICATION_EXAM_MODE_ENABLED = 3;
}

message QualificationExamSettings {
  option (codegen.dbscanner.dbscanner) = {enabled: true};

  google.protobuf.Duration time = 1 [
    (buf.validate.field).duration = {
      lt: {seconds: 1036800} /* 24 hours */
      gte: {seconds: 300} /* 5 minutes */
    },
    (buf.validate.field).required = true
  ];
  bool auto_grade = 2;
  AutoGradeMode auto_grade_mode = 3 [(buf.validate.field).enum.defined_only = true];
  int32 minimum_points = 4;
}

enum AutoGradeMode {
  AUTO_GRADE_MODE_UNSPECIFIED = 0;
  AUTO_GRADE_MODE_STRICT = 1;
  AUTO_GRADE_MODE_PARTIAL_CREDIT = 2;
}

enum RequestStatus {
  REQUEST_STATUS_UNSPECIFIED = 0;
  REQUEST_STATUS_PENDING = 1;
  REQUEST_STATUS_DENIED = 2;
  REQUEST_STATUS_ACCEPTED = 3;
  REQUEST_STATUS_EXAM_STARTED = 4;
  REQUEST_STATUS_EXAM_GRADING = 5;
  REQUEST_STATUS_COMPLETED = 6;
}

message QualificationRequest {
  optional resources.timestamp.Timestamp created_at = 1;
  optional resources.timestamp.Timestamp deleted_at = 2;
  int64 qualification_id = 3 [(tagger.tags) = "sql:\"primary_key\" alias:\"qualification_id\""];
  optional QualificationShort qualification = 4;
  int32 user_id = 5 [
    (buf.validate.field).int32.gte = 0,
    (tagger.tags) = "sql:\"primary_key\""
  ];
  resources.users.UserShort user = 6 [(tagger.tags) = "alias:\"user\""];
  optional string user_comment = 7 [
    (buf.validate.field).string = {max_len: 512},
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  optional RequestStatus status = 8 [(buf.validate.field).enum.defined_only = true];
  optional resources.timestamp.Timestamp approved_at = 9;
  optional string approver_comment = 10 [
    (buf.validate.field).string = {max_len: 512},
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  optional int32 approver_id = 11 [(buf.validate.field).int32.gt = 0];
  optional resources.users.UserShort approver = 12 [(tagger.tags) = "alias:\"approver\""];
  optional string approver_job = 13;
}

enum ResultStatus {
  RESULT_STATUS_UNSPECIFIED = 0;
  RESULT_STATUS_PENDING = 1;
  RESULT_STATUS_FAILED = 2;
  RESULT_STATUS_SUCCESSFUL = 3;
}

message QualificationResult {
  int64 id = 1 [(tagger.tags) = "sql:\"primary_key\" alias:\"id\""];
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp deleted_at = 3;
  int64 qualification_id = 4;
  optional QualificationShort qualification = 5;
  int32 user_id = 6 [(buf.validate.field).int32.gte = 0];
  resources.users.UserShort user = 7 [(tagger.tags) = "alias:\"user\""];
  ResultStatus status = 8 [(buf.validate.field).enum.defined_only = true];
  optional float score = 9 [(buf.validate.field).float = {
    gte: 0
    lte: 1000
  }];
  string summary = 10 [
    (buf.validate.field).string.max_len = 512,
    (codegen.sanitizer.sanitizer) = {
      enabled: true
      method: "StripTags"
    }
  ];
  int32 creator_id = 11 [(buf.validate.field).int32.gt = 0];
  resources.users.UserShort creator = 12 [(tagger.tags) = "alias:\"creator\""];
  string creator_job = 13 [(buf.validate.field).string.max_len = 20];
}
