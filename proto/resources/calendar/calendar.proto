syntax = "proto3";

package resources.calendar;

import "resources/calendar/access.proto";
import "resources/common/content/content.proto";
import "resources/timestamp/timestamp.proto";
import "resources/users/users.proto";
import "validate/validate.proto";

option go_package = "github.com/fivenet-app/fivenet/gen/go/proto/resources/calendar;calendar";

message Calendar {
  uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  optional string job = 5 [(validate.rules).string.max_len = 20];
  // @sanitize: method=StripTags
  string name = 6 [(validate.rules).string = {
    min_len: 3,
    max_len: 255
  }];
  // @sanitize: method=StripTags
  optional string description = 7 [(validate.rules).string.max_len = 512];
  bool public = 8;
  bool closed = 9;
  // @sanitize: method=StripTags
  string color = 10 [(validate.rules).string.max_len = 12];
  optional int32 creator_id = 11 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 12; // @gotags: alias:"creator"
  string creator_job = 13 [(validate.rules).string.max_len = 20];
  optional CalendarSub subscription = 14;
  resources.calendar.CalendarAccess access = 15;
}

message CalendarShort {
  uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  // @sanitize: method=StripTags
  string name = 6 [(validate.rules).string = {
    min_len: 3,
    max_len: 255
  }];
  // @sanitize: method=StripTags
  optional string description = 7 [(validate.rules).string.max_len = 512];
  bool public = 8;
  bool closed = 9;
  // @sanitize: method=StripTags
  string color = 10 [(validate.rules).string.max_len = 12];
  optional CalendarSub subscription = 14;
}

message CalendarSub {
  uint64 calendar_id = 1;
  int32 user_id = 2 [(validate.rules).int32.gte = 0];
  optional resources.users.UserShort user = 3;
  optional resources.timestamp.Timestamp created_at = 4;
  bool confirmed = 5;
  bool muted = 6;
}

// Entry

message CalendarEntry {
  uint64 id = 1; // @gotags: sql:"primary_key" alias:"id"
  optional resources.timestamp.Timestamp created_at = 2;
  optional resources.timestamp.Timestamp updated_at = 3;
  optional resources.timestamp.Timestamp deleted_at = 4;
  uint64 calendar_id = 5;
  optional Calendar calendar = 6;
  optional string job = 7 [(validate.rules).string.max_len = 20];
  resources.timestamp.Timestamp start_time = 8;
  optional resources.timestamp.Timestamp end_time = 9;
  // @sanitize: method=StripTags
  string title = 10 [(validate.rules).string = {
    min_len: 3,
    max_len: 512
  }];
  resources.common.content.Content content = 11;
  bool closed = 12;
  optional bool rsvp_open = 13;
  optional int32 creator_id = 14 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort creator = 15; // @gotags: alias:"creator"
  string creator_job = 16 [(validate.rules).string.max_len = 20];
  optional CalendarEntryRecurring recurring = 17;
  optional CalendarEntryRSVP rsvp = 18;
}

message CalendarEntryRecurring {
  string every = 1;
  int32 count = 2;
  optional resources.timestamp.Timestamp until = 3;
}

enum RsvpResponses {
  RSVP_RESPONSES_UNSPECIFIED = 0;
  RSVP_RESPONSES_HIDDEN = 1;
  RSVP_RESPONSES_INVITED = 2;
  RSVP_RESPONSES_NO = 3;
  RSVP_RESPONSES_MAYBE = 4;
  RSVP_RESPONSES_YES = 5;
}

message CalendarEntryRSVP {
  uint64 entry_id = 1;
  optional resources.timestamp.Timestamp created_at = 2;
  int32 user_id = 3 [(validate.rules).int32.gt = 0];
  optional resources.users.UserShort user = 4;
  RsvpResponses response = 5 [(validate.rules).enum.defined_only = true];
}
