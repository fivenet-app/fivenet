//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package tables

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetUsers = newFivenetUsersTable("", "fivenet_users", "")

type fivenetUsersTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Identifier  mysql.ColumnString
	Group       mysql.ColumnString
	Job         mysql.ColumnString
	JobGrade    mysql.ColumnInteger
	Firstname   mysql.ColumnString
	Lastname    mysql.ColumnString
	Dateofbirth mysql.ColumnString
	Sex         mysql.ColumnString
	Height      mysql.ColumnString
	PhoneNumber mysql.ColumnString
	Disabled    mysql.ColumnBool
	Visum       mysql.ColumnInteger
	Playtime    mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetUsersTable struct {
	fivenetUsersTable

	NEW fivenetUsersTable
}

// AS creates new FivenetUsersTable with assigned alias
func (a FivenetUsersTable) AS(alias string) *FivenetUsersTable {
	return newFivenetUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetUsersTable with assigned schema name
func (a FivenetUsersTable) FromSchema(schemaName string) *FivenetUsersTable {
	return newFivenetUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetUsersTable with assigned table prefix
func (a FivenetUsersTable) WithPrefix(prefix string) *FivenetUsersTable {
	return newFivenetUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetUsersTable with assigned table suffix
func (a FivenetUsersTable) WithSuffix(suffix string) *FivenetUsersTable {
	return newFivenetUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetUsersTable(schemaName, tableName, alias string) *FivenetUsersTable {
	return &FivenetUsersTable{
		fivenetUsersTable: newFivenetUsersTableImpl(schemaName, tableName, alias),
		NEW:               newFivenetUsersTableImpl("", "new", ""),
	}
}

func newFivenetUsersTableImpl(schemaName, tableName, alias string) fivenetUsersTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		IdentifierColumn  = mysql.StringColumn("identifier")
		GroupColumn       = mysql.StringColumn("group")
		JobColumn         = mysql.StringColumn("job")
		JobGradeColumn    = mysql.IntegerColumn("job_grade")
		FirstnameColumn   = mysql.StringColumn("firstname")
		LastnameColumn    = mysql.StringColumn("lastname")
		DateofbirthColumn = mysql.StringColumn("dateofbirth")
		SexColumn         = mysql.StringColumn("sex")
		HeightColumn      = mysql.StringColumn("height")
		PhoneNumberColumn = mysql.StringColumn("phone_number")
		DisabledColumn    = mysql.BoolColumn("disabled")
		VisumColumn       = mysql.IntegerColumn("visum")
		PlaytimeColumn    = mysql.IntegerColumn("playtime")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		allColumns        = mysql.ColumnList{IDColumn, IdentifierColumn, GroupColumn, JobColumn, JobGradeColumn, FirstnameColumn, LastnameColumn, DateofbirthColumn, SexColumn, HeightColumn, PhoneNumberColumn, DisabledColumn, VisumColumn, PlaytimeColumn, CreatedAtColumn}
		mutableColumns    = mysql.ColumnList{IDColumn, GroupColumn, JobColumn, JobGradeColumn, FirstnameColumn, LastnameColumn, DateofbirthColumn, SexColumn, HeightColumn, PhoneNumberColumn, DisabledColumn, VisumColumn, PlaytimeColumn, CreatedAtColumn}
	)

	return fivenetUsersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Identifier:  IdentifierColumn,
		Group:       GroupColumn,
		Job:         JobColumn,
		JobGrade:    JobGradeColumn,
		Firstname:   FirstnameColumn,
		Lastname:    LastnameColumn,
		Dateofbirth: DateofbirthColumn,
		Sex:         SexColumn,
		Height:      HeightColumn,
		PhoneNumber: PhoneNumberColumn,
		Disabled:    DisabledColumn,
		Visum:       VisumColumn,
		Playtime:    PlaytimeColumn,
		CreatedAt:   CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
