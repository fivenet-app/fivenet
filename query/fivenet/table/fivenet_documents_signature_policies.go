//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsSignaturePolicies = newFivenetDocumentsSignaturePoliciesTable("", "fivenet_documents_signature_policies", "")

type fivenetDocumentsSignaturePoliciesTable struct {
	mysql.Table

	// Columns
	ID               mysql.ColumnInteger
	DocumentID       mysql.ColumnInteger
	SnapshotDate     mysql.ColumnTimestamp
	Label            mysql.ColumnString
	Required         mysql.ColumnBool
	BindingMode      mysql.ColumnInteger
	AllowedTypesMask mysql.ColumnString
	CollectedCount   mysql.ColumnInteger
	RequiredCount    mysql.ColumnInteger
	CreatedAt        mysql.ColumnTimestamp
	UpdatedAt        mysql.ColumnTimestamp
	DeletedAt        mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsSignaturePoliciesTable struct {
	fivenetDocumentsSignaturePoliciesTable

	NEW fivenetDocumentsSignaturePoliciesTable
}

// AS creates new FivenetDocumentsSignaturePoliciesTable with assigned alias
func (a FivenetDocumentsSignaturePoliciesTable) AS(alias string) *FivenetDocumentsSignaturePoliciesTable {
	return newFivenetDocumentsSignaturePoliciesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsSignaturePoliciesTable with assigned schema name
func (a FivenetDocumentsSignaturePoliciesTable) FromSchema(schemaName string) *FivenetDocumentsSignaturePoliciesTable {
	return newFivenetDocumentsSignaturePoliciesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsSignaturePoliciesTable with assigned table prefix
func (a FivenetDocumentsSignaturePoliciesTable) WithPrefix(prefix string) *FivenetDocumentsSignaturePoliciesTable {
	return newFivenetDocumentsSignaturePoliciesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsSignaturePoliciesTable with assigned table suffix
func (a FivenetDocumentsSignaturePoliciesTable) WithSuffix(suffix string) *FivenetDocumentsSignaturePoliciesTable {
	return newFivenetDocumentsSignaturePoliciesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsSignaturePoliciesTable(schemaName, tableName, alias string) *FivenetDocumentsSignaturePoliciesTable {
	return &FivenetDocumentsSignaturePoliciesTable{
		fivenetDocumentsSignaturePoliciesTable: newFivenetDocumentsSignaturePoliciesTableImpl(schemaName, tableName, alias),
		NEW:                                    newFivenetDocumentsSignaturePoliciesTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsSignaturePoliciesTableImpl(schemaName, tableName, alias string) fivenetDocumentsSignaturePoliciesTable {
	var (
		IDColumn               = mysql.IntegerColumn("id")
		DocumentIDColumn       = mysql.IntegerColumn("document_id")
		SnapshotDateColumn     = mysql.TimestampColumn("snapshot_date")
		LabelColumn            = mysql.StringColumn("label")
		RequiredColumn         = mysql.BoolColumn("required")
		BindingModeColumn      = mysql.IntegerColumn("binding_mode")
		AllowedTypesMaskColumn = mysql.StringColumn("allowed_types_mask")
		CollectedCountColumn   = mysql.IntegerColumn("collected_count")
		RequiredCountColumn    = mysql.IntegerColumn("required_count")
		CreatedAtColumn        = mysql.TimestampColumn("created_at")
		UpdatedAtColumn        = mysql.TimestampColumn("updated_at")
		DeletedAtColumn        = mysql.TimestampColumn("deleted_at")
		allColumns             = mysql.ColumnList{IDColumn, DocumentIDColumn, SnapshotDateColumn, LabelColumn, RequiredColumn, BindingModeColumn, AllowedTypesMaskColumn, CollectedCountColumn, RequiredCountColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns         = mysql.ColumnList{DocumentIDColumn, SnapshotDateColumn, LabelColumn, RequiredColumn, BindingModeColumn, AllowedTypesMaskColumn, CollectedCountColumn, RequiredCountColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		defaultColumns         = mysql.ColumnList{RequiredColumn, AllowedTypesMaskColumn, CollectedCountColumn, RequiredCountColumn, CreatedAtColumn}
	)

	return fivenetDocumentsSignaturePoliciesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		DocumentID:       DocumentIDColumn,
		SnapshotDate:     SnapshotDateColumn,
		Label:            LabelColumn,
		Required:         RequiredColumn,
		BindingMode:      BindingModeColumn,
		AllowedTypesMask: AllowedTypesMaskColumn,
		CollectedCount:   CollectedCountColumn,
		RequiredCount:    RequiredCountColumn,
		CreatedAt:        CreatedAtColumn,
		UpdatedAt:        UpdatedAtColumn,
		DeletedAt:        DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
