//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerEmailsAccess = newFivenetMailerEmailsAccessTable("", "fivenet_mailer_emails_access", "")

type fivenetMailerEmailsAccessTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	TargetID        mysql.ColumnInteger
	UserID          mysql.ColumnInteger
	Job             mysql.ColumnString
	MinimumGrade    mysql.ColumnInteger
	QualificationID mysql.ColumnInteger
	Access          mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetMailerEmailsAccessTable struct {
	fivenetMailerEmailsAccessTable

	NEW fivenetMailerEmailsAccessTable
}

// AS creates new FivenetMailerEmailsAccessTable with assigned alias
func (a FivenetMailerEmailsAccessTable) AS(alias string) *FivenetMailerEmailsAccessTable {
	return newFivenetMailerEmailsAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerEmailsAccessTable with assigned schema name
func (a FivenetMailerEmailsAccessTable) FromSchema(schemaName string) *FivenetMailerEmailsAccessTable {
	return newFivenetMailerEmailsAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerEmailsAccessTable with assigned table prefix
func (a FivenetMailerEmailsAccessTable) WithPrefix(prefix string) *FivenetMailerEmailsAccessTable {
	return newFivenetMailerEmailsAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerEmailsAccessTable with assigned table suffix
func (a FivenetMailerEmailsAccessTable) WithSuffix(suffix string) *FivenetMailerEmailsAccessTable {
	return newFivenetMailerEmailsAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerEmailsAccessTable(schemaName, tableName, alias string) *FivenetMailerEmailsAccessTable {
	return &FivenetMailerEmailsAccessTable{
		fivenetMailerEmailsAccessTable: newFivenetMailerEmailsAccessTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetMailerEmailsAccessTableImpl("", "new", ""),
	}
}

func newFivenetMailerEmailsAccessTableImpl(schemaName, tableName, alias string) fivenetMailerEmailsAccessTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		TargetIDColumn        = mysql.IntegerColumn("target_id")
		UserIDColumn          = mysql.IntegerColumn("user_id")
		JobColumn             = mysql.StringColumn("job")
		MinimumGradeColumn    = mysql.IntegerColumn("minimum_grade")
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		AccessColumn          = mysql.IntegerColumn("access")
		allColumns            = mysql.ColumnList{IDColumn, TargetIDColumn, UserIDColumn, JobColumn, MinimumGradeColumn, QualificationIDColumn, AccessColumn}
		mutableColumns        = mysql.ColumnList{TargetIDColumn, UserIDColumn, JobColumn, MinimumGradeColumn, QualificationIDColumn, AccessColumn}
	)

	return fivenetMailerEmailsAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		TargetID:        TargetIDColumn,
		UserID:          UserIDColumn,
		Job:             JobColumn,
		MinimumGrade:    MinimumGradeColumn,
		QualificationID: QualificationIDColumn,
		Access:          AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
