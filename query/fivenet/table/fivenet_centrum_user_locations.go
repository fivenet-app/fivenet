//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCentrumUserLocations = newFivenetCentrumUserLocationsTable("", "fivenet_centrum_user_locations", "")

type fivenetCentrumUserLocationsTable struct {
	mysql.Table

	// Columns
	Identifier mysql.ColumnString
	Job        mysql.ColumnString
	JobGrade   mysql.ColumnInteger
	X          mysql.ColumnFloat
	Y          mysql.ColumnFloat
	Hidden     mysql.ColumnBool
	UpdatedAt  mysql.ColumnTimestamp
	Data       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetCentrumUserLocationsTable struct {
	fivenetCentrumUserLocationsTable

	NEW fivenetCentrumUserLocationsTable
}

// AS creates new FivenetCentrumUserLocationsTable with assigned alias
func (a FivenetCentrumUserLocationsTable) AS(alias string) *FivenetCentrumUserLocationsTable {
	return newFivenetCentrumUserLocationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCentrumUserLocationsTable with assigned schema name
func (a FivenetCentrumUserLocationsTable) FromSchema(schemaName string) *FivenetCentrumUserLocationsTable {
	return newFivenetCentrumUserLocationsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCentrumUserLocationsTable with assigned table prefix
func (a FivenetCentrumUserLocationsTable) WithPrefix(prefix string) *FivenetCentrumUserLocationsTable {
	return newFivenetCentrumUserLocationsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCentrumUserLocationsTable with assigned table suffix
func (a FivenetCentrumUserLocationsTable) WithSuffix(suffix string) *FivenetCentrumUserLocationsTable {
	return newFivenetCentrumUserLocationsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCentrumUserLocationsTable(schemaName, tableName, alias string) *FivenetCentrumUserLocationsTable {
	return &FivenetCentrumUserLocationsTable{
		fivenetCentrumUserLocationsTable: newFivenetCentrumUserLocationsTableImpl(schemaName, tableName, alias),
		NEW:                              newFivenetCentrumUserLocationsTableImpl("", "new", ""),
	}
}

func newFivenetCentrumUserLocationsTableImpl(schemaName, tableName, alias string) fivenetCentrumUserLocationsTable {
	var (
		IdentifierColumn = mysql.StringColumn("identifier")
		JobColumn        = mysql.StringColumn("job")
		JobGradeColumn   = mysql.IntegerColumn("job_grade")
		XColumn          = mysql.FloatColumn("x")
		YColumn          = mysql.FloatColumn("y")
		HiddenColumn     = mysql.BoolColumn("hidden")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		DataColumn       = mysql.StringColumn("data")
		allColumns       = mysql.ColumnList{IdentifierColumn, JobColumn, JobGradeColumn, XColumn, YColumn, HiddenColumn, UpdatedAtColumn, DataColumn}
		mutableColumns   = mysql.ColumnList{JobColumn, JobGradeColumn, XColumn, YColumn, HiddenColumn, UpdatedAtColumn, DataColumn}
		defaultColumns   = mysql.ColumnList{HiddenColumn, UpdatedAtColumn}
	)

	return fivenetCentrumUserLocationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Identifier: IdentifierColumn,
		Job:        JobColumn,
		JobGrade:   JobGradeColumn,
		X:          XColumn,
		Y:          YColumn,
		Hidden:     HiddenColumn,
		UpdatedAt:  UpdatedAtColumn,
		Data:       DataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
