//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetAttrs = newFivenetAttrsTable("", "fivenet_attrs", "")

type fivenetAttrsTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	PermissionID mysql.ColumnInteger
	Key          mysql.ColumnString
	Type         mysql.ColumnString
	ValidValues  mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetAttrsTable struct {
	fivenetAttrsTable

	NEW fivenetAttrsTable
}

// AS creates new FivenetAttrsTable with assigned alias
func (a FivenetAttrsTable) AS(alias string) *FivenetAttrsTable {
	return newFivenetAttrsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetAttrsTable with assigned schema name
func (a FivenetAttrsTable) FromSchema(schemaName string) *FivenetAttrsTable {
	return newFivenetAttrsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetAttrsTable with assigned table prefix
func (a FivenetAttrsTable) WithPrefix(prefix string) *FivenetAttrsTable {
	return newFivenetAttrsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetAttrsTable with assigned table suffix
func (a FivenetAttrsTable) WithSuffix(suffix string) *FivenetAttrsTable {
	return newFivenetAttrsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetAttrsTable(schemaName, tableName, alias string) *FivenetAttrsTable {
	return &FivenetAttrsTable{
		fivenetAttrsTable: newFivenetAttrsTableImpl(schemaName, tableName, alias),
		NEW:               newFivenetAttrsTableImpl("", "new", ""),
	}
}

func newFivenetAttrsTableImpl(schemaName, tableName, alias string) fivenetAttrsTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		PermissionIDColumn = mysql.IntegerColumn("permission_id")
		KeyColumn          = mysql.StringColumn("key")
		TypeColumn         = mysql.StringColumn("type")
		ValidValuesColumn  = mysql.StringColumn("valid_values")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, PermissionIDColumn, KeyColumn, TypeColumn, ValidValuesColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, PermissionIDColumn, KeyColumn, TypeColumn, ValidValuesColumn}
		defaultColumns     = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetAttrsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		PermissionID: PermissionIDColumn,
		Key:          KeyColumn,
		Type:         TypeColumn,
		ValidValues:  ValidValuesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
