//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetUser = newFivenetUserTable("", "fivenet_user", "")

type fivenetUserTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Identifier  mysql.ColumnString
	Group       mysql.ColumnString
	Job         mysql.ColumnString
	JobGrade    mysql.ColumnInteger
	Firstname   mysql.ColumnString
	Lastname    mysql.ColumnString
	Dateofbirth mysql.ColumnString
	Sex         mysql.ColumnString
	Height      mysql.ColumnString
	PhoneNumber mysql.ColumnString
	Disabled    mysql.ColumnBool
	Visum       mysql.ColumnInteger
	Playtime    mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetUserTable struct {
	fivenetUserTable

	NEW fivenetUserTable
}

// AS creates new FivenetUserTable with assigned alias
func (a FivenetUserTable) AS(alias string) *FivenetUserTable {
	return newFivenetUserTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetUserTable with assigned schema name
func (a FivenetUserTable) FromSchema(schemaName string) *FivenetUserTable {
	return newFivenetUserTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetUserTable with assigned table prefix
func (a FivenetUserTable) WithPrefix(prefix string) *FivenetUserTable {
	return newFivenetUserTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetUserTable with assigned table suffix
func (a FivenetUserTable) WithSuffix(suffix string) *FivenetUserTable {
	return newFivenetUserTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetUserTable(schemaName, tableName, alias string) *FivenetUserTable {
	return &FivenetUserTable{
		fivenetUserTable: newFivenetUserTableImpl(schemaName, tableName, alias),
		NEW:              newFivenetUserTableImpl("", "new", ""),
	}
}

func newFivenetUserTableImpl(schemaName, tableName, alias string) fivenetUserTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		IdentifierColumn  = mysql.StringColumn("identifier")
		GroupColumn       = mysql.StringColumn("group")
		JobColumn         = mysql.StringColumn("job")
		JobGradeColumn    = mysql.IntegerColumn("job_grade")
		FirstnameColumn   = mysql.StringColumn("firstname")
		LastnameColumn    = mysql.StringColumn("lastname")
		DateofbirthColumn = mysql.StringColumn("dateofbirth")
		SexColumn         = mysql.StringColumn("sex")
		HeightColumn      = mysql.StringColumn("height")
		PhoneNumberColumn = mysql.StringColumn("phone_number")
		DisabledColumn    = mysql.BoolColumn("disabled")
		VisumColumn       = mysql.IntegerColumn("visum")
		PlaytimeColumn    = mysql.IntegerColumn("playtime")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		allColumns        = mysql.ColumnList{IDColumn, IdentifierColumn, GroupColumn, JobColumn, JobGradeColumn, FirstnameColumn, LastnameColumn, DateofbirthColumn, SexColumn, HeightColumn, PhoneNumberColumn, DisabledColumn, VisumColumn, PlaytimeColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns    = mysql.ColumnList{IDColumn, GroupColumn, JobColumn, JobGradeColumn, FirstnameColumn, LastnameColumn, DateofbirthColumn, SexColumn, HeightColumn, PhoneNumberColumn, DisabledColumn, VisumColumn, PlaytimeColumn, CreatedAtColumn, UpdatedAtColumn}
		defaultColumns    = mysql.ColumnList{JobColumn, JobGradeColumn, DisabledColumn, CreatedAtColumn}
	)

	return fivenetUserTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Identifier:  IdentifierColumn,
		Group:       GroupColumn,
		Job:         JobColumn,
		JobGrade:    JobGradeColumn,
		Firstname:   FirstnameColumn,
		Lastname:    LastnameColumn,
		Dateofbirth: DateofbirthColumn,
		Sex:         SexColumn,
		Height:      HeightColumn,
		PhoneNumber: PhoneNumberColumn,
		Disabled:    DisabledColumn,
		Visum:       VisumColumn,
		Playtime:    PlaytimeColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
