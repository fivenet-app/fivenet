//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsMeta = newFivenetDocumentsMetaTable("", "fivenet_documents_meta", "")

type fivenetDocumentsMetaTable struct {
	mysql.Table

	// Columns
	DocumentID           mysql.ColumnInteger
	RecomputedAt         mysql.ColumnTimestamp
	Approved             mysql.ColumnBool
	Signed               mysql.ColumnBool
	SigRequiredRemaining mysql.ColumnInteger
	SigRequiredTotal     mysql.ColumnInteger
	SigCollectedValid    mysql.ColumnInteger
	SigPoliciesActive    mysql.ColumnInteger
	ApRequiredTotal      mysql.ColumnInteger
	ApCollectedApproved  mysql.ColumnInteger
	ApRequiredRemaining  mysql.ColumnInteger
	ApDeclinedCount      mysql.ColumnInteger
	ApPendingCount       mysql.ColumnInteger
	ApAnyDeclined        mysql.ColumnBool
	ApPoliciesActive     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsMetaTable struct {
	fivenetDocumentsMetaTable

	NEW fivenetDocumentsMetaTable
}

// AS creates new FivenetDocumentsMetaTable with assigned alias
func (a FivenetDocumentsMetaTable) AS(alias string) *FivenetDocumentsMetaTable {
	return newFivenetDocumentsMetaTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsMetaTable with assigned schema name
func (a FivenetDocumentsMetaTable) FromSchema(schemaName string) *FivenetDocumentsMetaTable {
	return newFivenetDocumentsMetaTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsMetaTable with assigned table prefix
func (a FivenetDocumentsMetaTable) WithPrefix(prefix string) *FivenetDocumentsMetaTable {
	return newFivenetDocumentsMetaTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsMetaTable with assigned table suffix
func (a FivenetDocumentsMetaTable) WithSuffix(suffix string) *FivenetDocumentsMetaTable {
	return newFivenetDocumentsMetaTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsMetaTable(schemaName, tableName, alias string) *FivenetDocumentsMetaTable {
	return &FivenetDocumentsMetaTable{
		fivenetDocumentsMetaTable: newFivenetDocumentsMetaTableImpl(schemaName, tableName, alias),
		NEW:                       newFivenetDocumentsMetaTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsMetaTableImpl(schemaName, tableName, alias string) fivenetDocumentsMetaTable {
	var (
		DocumentIDColumn           = mysql.IntegerColumn("document_id")
		RecomputedAtColumn         = mysql.TimestampColumn("recomputed_at")
		ApprovedColumn             = mysql.BoolColumn("approved")
		SignedColumn               = mysql.BoolColumn("signed")
		SigRequiredRemainingColumn = mysql.IntegerColumn("sig_required_remaining")
		SigRequiredTotalColumn     = mysql.IntegerColumn("sig_required_total")
		SigCollectedValidColumn    = mysql.IntegerColumn("sig_collected_valid")
		SigPoliciesActiveColumn    = mysql.IntegerColumn("sig_policies_active")
		ApRequiredTotalColumn      = mysql.IntegerColumn("ap_required_total")
		ApCollectedApprovedColumn  = mysql.IntegerColumn("ap_collected_approved")
		ApRequiredRemainingColumn  = mysql.IntegerColumn("ap_required_remaining")
		ApDeclinedCountColumn      = mysql.IntegerColumn("ap_declined_count")
		ApPendingCountColumn       = mysql.IntegerColumn("ap_pending_count")
		ApAnyDeclinedColumn        = mysql.BoolColumn("ap_any_declined")
		ApPoliciesActiveColumn     = mysql.IntegerColumn("ap_policies_active")
		allColumns                 = mysql.ColumnList{DocumentIDColumn, RecomputedAtColumn, ApprovedColumn, SignedColumn, SigRequiredRemainingColumn, SigRequiredTotalColumn, SigCollectedValidColumn, SigPoliciesActiveColumn, ApRequiredTotalColumn, ApCollectedApprovedColumn, ApRequiredRemainingColumn, ApDeclinedCountColumn, ApPendingCountColumn, ApAnyDeclinedColumn, ApPoliciesActiveColumn}
		mutableColumns             = mysql.ColumnList{RecomputedAtColumn, ApprovedColumn, SignedColumn, SigRequiredRemainingColumn, SigRequiredTotalColumn, SigCollectedValidColumn, SigPoliciesActiveColumn, ApRequiredTotalColumn, ApCollectedApprovedColumn, ApRequiredRemainingColumn, ApDeclinedCountColumn, ApPendingCountColumn, ApAnyDeclinedColumn, ApPoliciesActiveColumn}
		defaultColumns             = mysql.ColumnList{ApprovedColumn, SignedColumn, SigRequiredRemainingColumn, SigRequiredTotalColumn, SigCollectedValidColumn, SigPoliciesActiveColumn, ApRequiredTotalColumn, ApCollectedApprovedColumn, ApRequiredRemainingColumn, ApDeclinedCountColumn, ApPendingCountColumn, ApAnyDeclinedColumn, ApPoliciesActiveColumn}
	)

	return fivenetDocumentsMetaTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DocumentID:           DocumentIDColumn,
		RecomputedAt:         RecomputedAtColumn,
		Approved:             ApprovedColumn,
		Signed:               SignedColumn,
		SigRequiredRemaining: SigRequiredRemainingColumn,
		SigRequiredTotal:     SigRequiredTotalColumn,
		SigCollectedValid:    SigCollectedValidColumn,
		SigPoliciesActive:    SigPoliciesActiveColumn,
		ApRequiredTotal:      ApRequiredTotalColumn,
		ApCollectedApproved:  ApCollectedApprovedColumn,
		ApRequiredRemaining:  ApRequiredRemainingColumn,
		ApDeclinedCount:      ApDeclinedCountColumn,
		ApPendingCount:       ApPendingCountColumn,
		ApAnyDeclined:        ApAnyDeclinedColumn,
		ApPoliciesActive:     ApPoliciesActiveColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
