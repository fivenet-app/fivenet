//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PhonePhones = newPhonePhonesTable("", "phone_phones", "")

type phonePhonesTable struct {
	mysql.Table

	// Columns
	OwnerID     mysql.ColumnString
	PhoneNumber mysql.ColumnString
	LastSeen    mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PhonePhonesTable struct {
	phonePhonesTable

	NEW phonePhonesTable
}

// AS creates new PhonePhonesTable with assigned alias
func (a PhonePhonesTable) AS(alias string) *PhonePhonesTable {
	return newPhonePhonesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PhonePhonesTable with assigned schema name
func (a PhonePhonesTable) FromSchema(schemaName string) *PhonePhonesTable {
	return newPhonePhonesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PhonePhonesTable with assigned table prefix
func (a PhonePhonesTable) WithPrefix(prefix string) *PhonePhonesTable {
	return newPhonePhonesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PhonePhonesTable with assigned table suffix
func (a PhonePhonesTable) WithSuffix(suffix string) *PhonePhonesTable {
	return newPhonePhonesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPhonePhonesTable(schemaName, tableName, alias string) *PhonePhonesTable {
	return &PhonePhonesTable{
		phonePhonesTable: newPhonePhonesTableImpl(schemaName, tableName, alias),
		NEW:              newPhonePhonesTableImpl("", "new", ""),
	}
}

func newPhonePhonesTableImpl(schemaName, tableName, alias string) phonePhonesTable {
	var (
		OwnerIDColumn     = mysql.StringColumn("owner_id")
		PhoneNumberColumn = mysql.StringColumn("phone_number")
		LastSeenColumn    = mysql.TimestampColumn("last_seen")
		allColumns        = mysql.ColumnList{OwnerIDColumn, PhoneNumberColumn, LastSeenColumn}
		mutableColumns    = mysql.ColumnList{OwnerIDColumn, PhoneNumberColumn, LastSeenColumn}
		defaultColumns    = mysql.ColumnList{LastSeenColumn}
	)

	return phonePhonesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		OwnerID:     OwnerIDColumn,
		PhoneNumber: PhoneNumberColumn,
		LastSeen:    LastSeenColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
