//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobConduct = newFivenetJobConductTable("", "fivenet_job_conduct", "")

type fivenetJobConductTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	UpdatedAt    mysql.ColumnTimestamp
	DeletedAt    mysql.ColumnTimestamp
	Job          mysql.ColumnString
	Type         mysql.ColumnInteger
	Message      mysql.ColumnString
	ExpiresAt    mysql.ColumnDate
	TargetUserID mysql.ColumnInteger
	CreatorID    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetJobConductTable struct {
	fivenetJobConductTable

	NEW fivenetJobConductTable
}

// AS creates new FivenetJobConductTable with assigned alias
func (a FivenetJobConductTable) AS(alias string) *FivenetJobConductTable {
	return newFivenetJobConductTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobConductTable with assigned schema name
func (a FivenetJobConductTable) FromSchema(schemaName string) *FivenetJobConductTable {
	return newFivenetJobConductTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobConductTable with assigned table prefix
func (a FivenetJobConductTable) WithPrefix(prefix string) *FivenetJobConductTable {
	return newFivenetJobConductTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobConductTable with assigned table suffix
func (a FivenetJobConductTable) WithSuffix(suffix string) *FivenetJobConductTable {
	return newFivenetJobConductTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobConductTable(schemaName, tableName, alias string) *FivenetJobConductTable {
	return &FivenetJobConductTable{
		fivenetJobConductTable: newFivenetJobConductTableImpl(schemaName, tableName, alias),
		NEW:                    newFivenetJobConductTableImpl("", "new", ""),
	}
}

func newFivenetJobConductTableImpl(schemaName, tableName, alias string) fivenetJobConductTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		UpdatedAtColumn    = mysql.TimestampColumn("updated_at")
		DeletedAtColumn    = mysql.TimestampColumn("deleted_at")
		JobColumn          = mysql.StringColumn("job")
		TypeColumn         = mysql.IntegerColumn("type")
		MessageColumn      = mysql.StringColumn("message")
		ExpiresAtColumn    = mysql.DateColumn("expires_at")
		TargetUserIDColumn = mysql.IntegerColumn("target_user_id")
		CreatorIDColumn    = mysql.IntegerColumn("creator_id")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, TypeColumn, MessageColumn, ExpiresAtColumn, TargetUserIDColumn, CreatorIDColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, TypeColumn, MessageColumn, ExpiresAtColumn, TargetUserIDColumn, CreatorIDColumn}
		defaultColumns     = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetJobConductTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,
		DeletedAt:    DeletedAtColumn,
		Job:          JobColumn,
		Type:         TypeColumn,
		Message:      MessageColumn,
		ExpiresAt:    ExpiresAtColumn,
		TargetUserID: TargetUserIDColumn,
		CreatorID:    CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
