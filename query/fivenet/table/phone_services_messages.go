//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var PhoneServicesMessages = newPhoneServicesMessagesTable("", "phone_services_messages", "")

type phoneServicesMessagesTable struct {
	mysql.Table

	// Columns
	ChannelID mysql.ColumnInteger
	Message   mysql.ColumnString
	XPos      mysql.ColumnInteger
	YPos      mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type PhoneServicesMessagesTable struct {
	phoneServicesMessagesTable

	NEW phoneServicesMessagesTable
}

// AS creates new PhoneServicesMessagesTable with assigned alias
func (a PhoneServicesMessagesTable) AS(alias string) *PhoneServicesMessagesTable {
	return newPhoneServicesMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PhoneServicesMessagesTable with assigned schema name
func (a PhoneServicesMessagesTable) FromSchema(schemaName string) *PhoneServicesMessagesTable {
	return newPhoneServicesMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PhoneServicesMessagesTable with assigned table prefix
func (a PhoneServicesMessagesTable) WithPrefix(prefix string) *PhoneServicesMessagesTable {
	return newPhoneServicesMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PhoneServicesMessagesTable with assigned table suffix
func (a PhoneServicesMessagesTable) WithSuffix(suffix string) *PhoneServicesMessagesTable {
	return newPhoneServicesMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPhoneServicesMessagesTable(schemaName, tableName, alias string) *PhoneServicesMessagesTable {
	return &PhoneServicesMessagesTable{
		phoneServicesMessagesTable: newPhoneServicesMessagesTableImpl(schemaName, tableName, alias),
		NEW:                        newPhoneServicesMessagesTableImpl("", "new", ""),
	}
}

func newPhoneServicesMessagesTableImpl(schemaName, tableName, alias string) phoneServicesMessagesTable {
	var (
		ChannelIDColumn = mysql.IntegerColumn("channel_id")
		MessageColumn   = mysql.StringColumn("message")
		XPosColumn      = mysql.IntegerColumn("x_pos")
		YPosColumn      = mysql.IntegerColumn("y_pos")
		allColumns      = mysql.ColumnList{ChannelIDColumn, MessageColumn, XPosColumn, YPosColumn}
		mutableColumns  = mysql.ColumnList{ChannelIDColumn, MessageColumn, XPosColumn, YPosColumn}
		defaultColumns  = mysql.ColumnList{}
	)

	return phoneServicesMessagesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ChannelID: ChannelIDColumn,
		Message:   MessageColumn,
		XPos:      XPosColumn,
		YPos:      YPosColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
