//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsActivity = newFivenetDocumentsActivityTable("", "fivenet_documents_activity", "")

type fivenetDocumentsActivityTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	DocumentID   mysql.ColumnInteger
	ActivityType mysql.ColumnInteger
	CreatorID    mysql.ColumnInteger
	CreatorJob   mysql.ColumnString
	Reason       mysql.ColumnString
	Data         mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsActivityTable struct {
	fivenetDocumentsActivityTable

	NEW fivenetDocumentsActivityTable
}

// AS creates new FivenetDocumentsActivityTable with assigned alias
func (a FivenetDocumentsActivityTable) AS(alias string) *FivenetDocumentsActivityTable {
	return newFivenetDocumentsActivityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsActivityTable with assigned schema name
func (a FivenetDocumentsActivityTable) FromSchema(schemaName string) *FivenetDocumentsActivityTable {
	return newFivenetDocumentsActivityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsActivityTable with assigned table prefix
func (a FivenetDocumentsActivityTable) WithPrefix(prefix string) *FivenetDocumentsActivityTable {
	return newFivenetDocumentsActivityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsActivityTable with assigned table suffix
func (a FivenetDocumentsActivityTable) WithSuffix(suffix string) *FivenetDocumentsActivityTable {
	return newFivenetDocumentsActivityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsActivityTable(schemaName, tableName, alias string) *FivenetDocumentsActivityTable {
	return &FivenetDocumentsActivityTable{
		fivenetDocumentsActivityTable: newFivenetDocumentsActivityTableImpl(schemaName, tableName, alias),
		NEW:                           newFivenetDocumentsActivityTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsActivityTableImpl(schemaName, tableName, alias string) fivenetDocumentsActivityTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		DocumentIDColumn   = mysql.IntegerColumn("document_id")
		ActivityTypeColumn = mysql.IntegerColumn("activity_type")
		CreatorIDColumn    = mysql.IntegerColumn("creator_id")
		CreatorJobColumn   = mysql.StringColumn("creator_job")
		ReasonColumn       = mysql.StringColumn("reason")
		DataColumn         = mysql.StringColumn("data")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, DocumentIDColumn, ActivityTypeColumn, CreatorIDColumn, CreatorJobColumn, ReasonColumn, DataColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, DocumentIDColumn, ActivityTypeColumn, CreatorIDColumn, CreatorJobColumn, ReasonColumn, DataColumn}
		defaultColumns     = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetDocumentsActivityTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		DocumentID:   DocumentIDColumn,
		ActivityType: ActivityTypeColumn,
		CreatorID:    CreatorIDColumn,
		CreatorJob:   CreatorJobColumn,
		Reason:       ReasonColumn,
		Data:         DataColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
