//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetUserLabelsJob = newFivenetUserLabelsJobTable("", "fivenet_user_labels_job", "")

type fivenetUserLabelsJobTable struct {
	mysql.Table

	// Columns
	ID      mysql.ColumnInteger
	Job     mysql.ColumnString
	Name    mysql.ColumnString
	SortKey mysql.ColumnString
	Color   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetUserLabelsJobTable struct {
	fivenetUserLabelsJobTable

	NEW fivenetUserLabelsJobTable
}

// AS creates new FivenetUserLabelsJobTable with assigned alias
func (a FivenetUserLabelsJobTable) AS(alias string) *FivenetUserLabelsJobTable {
	return newFivenetUserLabelsJobTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetUserLabelsJobTable with assigned schema name
func (a FivenetUserLabelsJobTable) FromSchema(schemaName string) *FivenetUserLabelsJobTable {
	return newFivenetUserLabelsJobTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetUserLabelsJobTable with assigned table prefix
func (a FivenetUserLabelsJobTable) WithPrefix(prefix string) *FivenetUserLabelsJobTable {
	return newFivenetUserLabelsJobTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetUserLabelsJobTable with assigned table suffix
func (a FivenetUserLabelsJobTable) WithSuffix(suffix string) *FivenetUserLabelsJobTable {
	return newFivenetUserLabelsJobTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetUserLabelsJobTable(schemaName, tableName, alias string) *FivenetUserLabelsJobTable {
	return &FivenetUserLabelsJobTable{
		fivenetUserLabelsJobTable: newFivenetUserLabelsJobTableImpl(schemaName, tableName, alias),
		NEW:                       newFivenetUserLabelsJobTableImpl("", "new", ""),
	}
}

func newFivenetUserLabelsJobTableImpl(schemaName, tableName, alias string) fivenetUserLabelsJobTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		JobColumn      = mysql.StringColumn("job")
		NameColumn     = mysql.StringColumn("name")
		SortKeyColumn  = mysql.StringColumn("sort_key")
		ColorColumn    = mysql.StringColumn("color")
		allColumns     = mysql.ColumnList{IDColumn, JobColumn, NameColumn, SortKeyColumn, ColorColumn}
		mutableColumns = mysql.ColumnList{JobColumn, NameColumn, SortKeyColumn, ColorColumn}
		defaultColumns = mysql.ColumnList{ColorColumn}
	)

	return fivenetUserLabelsJobTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:      IDColumn,
		Job:     JobColumn,
		Name:    NameColumn,
		SortKey: SortKeyColumn,
		Color:   ColorColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
