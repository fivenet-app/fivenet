//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetWikiPagesFiles = newFivenetWikiPagesFilesTable("", "fivenet_wiki_pages_files", "")

type fivenetWikiPagesFilesTable struct {
	mysql.Table

	// Columns
	PageID mysql.ColumnInteger
	FileID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetWikiPagesFilesTable struct {
	fivenetWikiPagesFilesTable

	NEW fivenetWikiPagesFilesTable
}

// AS creates new FivenetWikiPagesFilesTable with assigned alias
func (a FivenetWikiPagesFilesTable) AS(alias string) *FivenetWikiPagesFilesTable {
	return newFivenetWikiPagesFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetWikiPagesFilesTable with assigned schema name
func (a FivenetWikiPagesFilesTable) FromSchema(schemaName string) *FivenetWikiPagesFilesTable {
	return newFivenetWikiPagesFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetWikiPagesFilesTable with assigned table prefix
func (a FivenetWikiPagesFilesTable) WithPrefix(prefix string) *FivenetWikiPagesFilesTable {
	return newFivenetWikiPagesFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetWikiPagesFilesTable with assigned table suffix
func (a FivenetWikiPagesFilesTable) WithSuffix(suffix string) *FivenetWikiPagesFilesTable {
	return newFivenetWikiPagesFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetWikiPagesFilesTable(schemaName, tableName, alias string) *FivenetWikiPagesFilesTable {
	return &FivenetWikiPagesFilesTable{
		fivenetWikiPagesFilesTable: newFivenetWikiPagesFilesTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetWikiPagesFilesTableImpl("", "new", ""),
	}
}

func newFivenetWikiPagesFilesTableImpl(schemaName, tableName, alias string) fivenetWikiPagesFilesTable {
	var (
		PageIDColumn   = mysql.IntegerColumn("page_id")
		FileIDColumn   = mysql.IntegerColumn("file_id")
		allColumns     = mysql.ColumnList{PageIDColumn, FileIDColumn}
		mutableColumns = mysql.ColumnList{}
		defaultColumns = mysql.ColumnList{}
	)

	return fivenetWikiPagesFilesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PageID: PageIDColumn,
		FileID: FileIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
