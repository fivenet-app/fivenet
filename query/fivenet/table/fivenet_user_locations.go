//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetUserLocations = newFivenetUserLocationsTable("", "fivenet_user_locations", "")

type fivenetUserLocationsTable struct {
	mysql.Table

	// Columns
	Identifier mysql.ColumnString
	Job        mysql.ColumnString
	X          mysql.ColumnFloat
	Y          mysql.ColumnFloat
	Hidden     mysql.ColumnBool
	UpdatedAt  mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetUserLocationsTable struct {
	fivenetUserLocationsTable

	NEW fivenetUserLocationsTable
}

// AS creates new FivenetUserLocationsTable with assigned alias
func (a FivenetUserLocationsTable) AS(alias string) *FivenetUserLocationsTable {
	return newFivenetUserLocationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetUserLocationsTable with assigned schema name
func (a FivenetUserLocationsTable) FromSchema(schemaName string) *FivenetUserLocationsTable {
	return newFivenetUserLocationsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetUserLocationsTable with assigned table prefix
func (a FivenetUserLocationsTable) WithPrefix(prefix string) *FivenetUserLocationsTable {
	return newFivenetUserLocationsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetUserLocationsTable with assigned table suffix
func (a FivenetUserLocationsTable) WithSuffix(suffix string) *FivenetUserLocationsTable {
	return newFivenetUserLocationsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetUserLocationsTable(schemaName, tableName, alias string) *FivenetUserLocationsTable {
	return &FivenetUserLocationsTable{
		fivenetUserLocationsTable: newFivenetUserLocationsTableImpl(schemaName, tableName, alias),
		NEW:                       newFivenetUserLocationsTableImpl("", "new", ""),
	}
}

func newFivenetUserLocationsTableImpl(schemaName, tableName, alias string) fivenetUserLocationsTable {
	var (
		IdentifierColumn = mysql.StringColumn("identifier")
		JobColumn        = mysql.StringColumn("job")
		XColumn          = mysql.FloatColumn("x")
		YColumn          = mysql.FloatColumn("y")
		HiddenColumn     = mysql.BoolColumn("hidden")
		UpdatedAtColumn  = mysql.TimestampColumn("updated_at")
		allColumns       = mysql.ColumnList{IdentifierColumn, JobColumn, XColumn, YColumn, HiddenColumn, UpdatedAtColumn}
		mutableColumns   = mysql.ColumnList{JobColumn, XColumn, YColumn, HiddenColumn, UpdatedAtColumn}
		defaultColumns   = mysql.ColumnList{UpdatedAtColumn}
	)

	return fivenetUserLocationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Identifier: IdentifierColumn,
		Job:        JobColumn,
		X:          XColumn,
		Y:          YColumn,
		Hidden:     HiddenColumn,
		UpdatedAt:  UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
