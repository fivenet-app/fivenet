//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsPins = newFivenetDocumentsPinsTable("", "fivenet_documents_pins", "")

type fivenetDocumentsPinsTable struct {
	mysql.Table

	// Columns
	DocumentID mysql.ColumnInteger
	Job        mysql.ColumnString
	UserID     mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	State      mysql.ColumnBool
	CreatorID  mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsPinsTable struct {
	fivenetDocumentsPinsTable

	NEW fivenetDocumentsPinsTable
}

// AS creates new FivenetDocumentsPinsTable with assigned alias
func (a FivenetDocumentsPinsTable) AS(alias string) *FivenetDocumentsPinsTable {
	return newFivenetDocumentsPinsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsPinsTable with assigned schema name
func (a FivenetDocumentsPinsTable) FromSchema(schemaName string) *FivenetDocumentsPinsTable {
	return newFivenetDocumentsPinsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsPinsTable with assigned table prefix
func (a FivenetDocumentsPinsTable) WithPrefix(prefix string) *FivenetDocumentsPinsTable {
	return newFivenetDocumentsPinsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsPinsTable with assigned table suffix
func (a FivenetDocumentsPinsTable) WithSuffix(suffix string) *FivenetDocumentsPinsTable {
	return newFivenetDocumentsPinsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsPinsTable(schemaName, tableName, alias string) *FivenetDocumentsPinsTable {
	return &FivenetDocumentsPinsTable{
		fivenetDocumentsPinsTable: newFivenetDocumentsPinsTableImpl(schemaName, tableName, alias),
		NEW:                       newFivenetDocumentsPinsTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsPinsTableImpl(schemaName, tableName, alias string) fivenetDocumentsPinsTable {
	var (
		DocumentIDColumn = mysql.IntegerColumn("document_id")
		JobColumn        = mysql.StringColumn("job")
		UserIDColumn     = mysql.IntegerColumn("user_id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		StateColumn      = mysql.BoolColumn("state")
		CreatorIDColumn  = mysql.IntegerColumn("creator_id")
		allColumns       = mysql.ColumnList{DocumentIDColumn, JobColumn, UserIDColumn, CreatedAtColumn, StateColumn, CreatorIDColumn}
		mutableColumns   = mysql.ColumnList{DocumentIDColumn, JobColumn, UserIDColumn, CreatedAtColumn, StateColumn, CreatorIDColumn}
		defaultColumns   = mysql.ColumnList{CreatedAtColumn, StateColumn}
	)

	return fivenetDocumentsPinsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DocumentID: DocumentIDColumn,
		Job:        JobColumn,
		UserID:     UserIDColumn,
		CreatedAt:  CreatedAtColumn,
		State:      StateColumn,
		CreatorID:  CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
