//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsWorkflowUsers = newFivenetDocumentsWorkflowUsersTable("", "fivenet_documents_workflow_users", "")

type fivenetDocumentsWorkflowUsersTable struct {
	mysql.Table

	// Columns
	DocumentID            mysql.ColumnInteger
	UserID                mysql.ColumnInteger
	ManualReminderTime    mysql.ColumnTimestamp
	ManualReminderMessage mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsWorkflowUsersTable struct {
	fivenetDocumentsWorkflowUsersTable

	NEW fivenetDocumentsWorkflowUsersTable
}

// AS creates new FivenetDocumentsWorkflowUsersTable with assigned alias
func (a FivenetDocumentsWorkflowUsersTable) AS(alias string) *FivenetDocumentsWorkflowUsersTable {
	return newFivenetDocumentsWorkflowUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsWorkflowUsersTable with assigned schema name
func (a FivenetDocumentsWorkflowUsersTable) FromSchema(schemaName string) *FivenetDocumentsWorkflowUsersTable {
	return newFivenetDocumentsWorkflowUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsWorkflowUsersTable with assigned table prefix
func (a FivenetDocumentsWorkflowUsersTable) WithPrefix(prefix string) *FivenetDocumentsWorkflowUsersTable {
	return newFivenetDocumentsWorkflowUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsWorkflowUsersTable with assigned table suffix
func (a FivenetDocumentsWorkflowUsersTable) WithSuffix(suffix string) *FivenetDocumentsWorkflowUsersTable {
	return newFivenetDocumentsWorkflowUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsWorkflowUsersTable(schemaName, tableName, alias string) *FivenetDocumentsWorkflowUsersTable {
	return &FivenetDocumentsWorkflowUsersTable{
		fivenetDocumentsWorkflowUsersTable: newFivenetDocumentsWorkflowUsersTableImpl(schemaName, tableName, alias),
		NEW:                                newFivenetDocumentsWorkflowUsersTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsWorkflowUsersTableImpl(schemaName, tableName, alias string) fivenetDocumentsWorkflowUsersTable {
	var (
		DocumentIDColumn            = mysql.IntegerColumn("document_id")
		UserIDColumn                = mysql.IntegerColumn("user_id")
		ManualReminderTimeColumn    = mysql.TimestampColumn("manual_reminder_time")
		ManualReminderMessageColumn = mysql.StringColumn("manual_reminder_message")
		allColumns                  = mysql.ColumnList{DocumentIDColumn, UserIDColumn, ManualReminderTimeColumn, ManualReminderMessageColumn}
		mutableColumns              = mysql.ColumnList{DocumentIDColumn, UserIDColumn, ManualReminderTimeColumn, ManualReminderMessageColumn}
		defaultColumns              = mysql.ColumnList{}
	)

	return fivenetDocumentsWorkflowUsersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DocumentID:            DocumentIDColumn,
		UserID:                UserIDColumn,
		ManualReminderTime:    ManualReminderTimeColumn,
		ManualReminderMessage: ManualReminderMessageColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
