//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetWikiPages = newFivenetWikiPagesTable("", "fivenet_wiki_pages", "")

type fivenetWikiPagesTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Job         mysql.ColumnString
	ParentID    mysql.ColumnInteger
	ContentType mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	DeletedAt   mysql.ColumnTimestamp
	Toc         mysql.ColumnBool
	Public      mysql.ColumnBool
	Slug        mysql.ColumnString
	Title       mysql.ColumnString
	SortKey     mysql.ColumnString
	Description mysql.ColumnString
	Content     mysql.ColumnString
	Data        mysql.ColumnString
	CreatorID   mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetWikiPagesTable struct {
	fivenetWikiPagesTable

	NEW fivenetWikiPagesTable
}

// AS creates new FivenetWikiPagesTable with assigned alias
func (a FivenetWikiPagesTable) AS(alias string) *FivenetWikiPagesTable {
	return newFivenetWikiPagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetWikiPagesTable with assigned schema name
func (a FivenetWikiPagesTable) FromSchema(schemaName string) *FivenetWikiPagesTable {
	return newFivenetWikiPagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetWikiPagesTable with assigned table prefix
func (a FivenetWikiPagesTable) WithPrefix(prefix string) *FivenetWikiPagesTable {
	return newFivenetWikiPagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetWikiPagesTable with assigned table suffix
func (a FivenetWikiPagesTable) WithSuffix(suffix string) *FivenetWikiPagesTable {
	return newFivenetWikiPagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetWikiPagesTable(schemaName, tableName, alias string) *FivenetWikiPagesTable {
	return &FivenetWikiPagesTable{
		fivenetWikiPagesTable: newFivenetWikiPagesTableImpl(schemaName, tableName, alias),
		NEW:                   newFivenetWikiPagesTableImpl("", "new", ""),
	}
}

func newFivenetWikiPagesTableImpl(schemaName, tableName, alias string) fivenetWikiPagesTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		JobColumn         = mysql.StringColumn("job")
		ParentIDColumn    = mysql.IntegerColumn("parent_id")
		ContentTypeColumn = mysql.IntegerColumn("content_type")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		TocColumn         = mysql.BoolColumn("toc")
		PublicColumn      = mysql.BoolColumn("public")
		SlugColumn        = mysql.StringColumn("slug")
		TitleColumn       = mysql.StringColumn("title")
		SortKeyColumn     = mysql.StringColumn("sort_key")
		DescriptionColumn = mysql.StringColumn("description")
		ContentColumn     = mysql.StringColumn("content")
		DataColumn        = mysql.StringColumn("data")
		CreatorIDColumn   = mysql.IntegerColumn("creator_id")
		allColumns        = mysql.ColumnList{IDColumn, JobColumn, ParentIDColumn, ContentTypeColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TocColumn, PublicColumn, SlugColumn, TitleColumn, SortKeyColumn, DescriptionColumn, ContentColumn, DataColumn, CreatorIDColumn}
		mutableColumns    = mysql.ColumnList{JobColumn, ParentIDColumn, ContentTypeColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, TocColumn, PublicColumn, SlugColumn, TitleColumn, SortKeyColumn, DescriptionColumn, ContentColumn, DataColumn, CreatorIDColumn}
		defaultColumns    = mysql.ColumnList{CreatedAtColumn, TocColumn, PublicColumn}
	)

	return fivenetWikiPagesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Job:         JobColumn,
		ParentID:    ParentIDColumn,
		ContentType: ContentTypeColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		DeletedAt:   DeletedAtColumn,
		Toc:         TocColumn,
		Public:      PublicColumn,
		Slug:        SlugColumn,
		Title:       TitleColumn,
		SortKey:     SortKeyColumn,
		Description: DescriptionColumn,
		Content:     ContentColumn,
		Data:        DataColumn,
		CreatorID:   CreatorIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
