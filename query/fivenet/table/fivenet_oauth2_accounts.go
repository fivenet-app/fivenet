//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetOauth2Accounts = newFivenetOauth2AccountsTable("", "fivenet_oauth2_accounts", "")

type fivenetOauth2AccountsTable struct {
	mysql.Table

	// Columns
	AccountID  mysql.ColumnInteger
	CreatedAt  mysql.ColumnTimestamp
	Provider   mysql.ColumnString
	ExternalID mysql.ColumnString
	Username   mysql.ColumnString
	Avatar     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetOauth2AccountsTable struct {
	fivenetOauth2AccountsTable

	NEW fivenetOauth2AccountsTable
}

// AS creates new FivenetOauth2AccountsTable with assigned alias
func (a FivenetOauth2AccountsTable) AS(alias string) *FivenetOauth2AccountsTable {
	return newFivenetOauth2AccountsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetOauth2AccountsTable with assigned schema name
func (a FivenetOauth2AccountsTable) FromSchema(schemaName string) *FivenetOauth2AccountsTable {
	return newFivenetOauth2AccountsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetOauth2AccountsTable with assigned table prefix
func (a FivenetOauth2AccountsTable) WithPrefix(prefix string) *FivenetOauth2AccountsTable {
	return newFivenetOauth2AccountsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetOauth2AccountsTable with assigned table suffix
func (a FivenetOauth2AccountsTable) WithSuffix(suffix string) *FivenetOauth2AccountsTable {
	return newFivenetOauth2AccountsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetOauth2AccountsTable(schemaName, tableName, alias string) *FivenetOauth2AccountsTable {
	return &FivenetOauth2AccountsTable{
		fivenetOauth2AccountsTable: newFivenetOauth2AccountsTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetOauth2AccountsTableImpl("", "new", ""),
	}
}

func newFivenetOauth2AccountsTableImpl(schemaName, tableName, alias string) fivenetOauth2AccountsTable {
	var (
		AccountIDColumn  = mysql.IntegerColumn("account_id")
		CreatedAtColumn  = mysql.TimestampColumn("created_at")
		ProviderColumn   = mysql.StringColumn("provider")
		ExternalIDColumn = mysql.StringColumn("external_id")
		UsernameColumn   = mysql.StringColumn("username")
		AvatarColumn     = mysql.StringColumn("avatar")
		allColumns       = mysql.ColumnList{AccountIDColumn, CreatedAtColumn, ProviderColumn, ExternalIDColumn, UsernameColumn, AvatarColumn}
		mutableColumns   = mysql.ColumnList{AccountIDColumn, CreatedAtColumn, ProviderColumn, ExternalIDColumn, UsernameColumn, AvatarColumn}
		defaultColumns   = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetOauth2AccountsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AccountID:  AccountIDColumn,
		CreatedAt:  CreatedAtColumn,
		Provider:   ProviderColumn,
		ExternalID: ExternalIDColumn,
		Username:   UsernameColumn,
		Avatar:     AvatarColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
