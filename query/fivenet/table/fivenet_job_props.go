//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobProps = newFivenetJobPropsTable("", "fivenet_job_props", "")

type fivenetJobPropsTable struct {
	mysql.Table

	// Columns
	Job                 mysql.ColumnString
	UpdatedAt           mysql.ColumnTimestamp
	Theme               mysql.ColumnString
	LivemapMarkerColor  mysql.ColumnString
	QuickButtons        mysql.ColumnString
	RadioFrequency      mysql.ColumnString
	DiscordGuildID      mysql.ColumnString
	DiscordLastSync     mysql.ColumnTimestamp
	DiscordSyncSettings mysql.ColumnString
	DiscordSyncChanges  mysql.ColumnString
	Motd                mysql.ColumnString
	LogoURL             mysql.ColumnString
	Settings            mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetJobPropsTable struct {
	fivenetJobPropsTable

	NEW fivenetJobPropsTable
}

// AS creates new FivenetJobPropsTable with assigned alias
func (a FivenetJobPropsTable) AS(alias string) *FivenetJobPropsTable {
	return newFivenetJobPropsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobPropsTable with assigned schema name
func (a FivenetJobPropsTable) FromSchema(schemaName string) *FivenetJobPropsTable {
	return newFivenetJobPropsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobPropsTable with assigned table prefix
func (a FivenetJobPropsTable) WithPrefix(prefix string) *FivenetJobPropsTable {
	return newFivenetJobPropsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobPropsTable with assigned table suffix
func (a FivenetJobPropsTable) WithSuffix(suffix string) *FivenetJobPropsTable {
	return newFivenetJobPropsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobPropsTable(schemaName, tableName, alias string) *FivenetJobPropsTable {
	return &FivenetJobPropsTable{
		fivenetJobPropsTable: newFivenetJobPropsTableImpl(schemaName, tableName, alias),
		NEW:                  newFivenetJobPropsTableImpl("", "new", ""),
	}
}

func newFivenetJobPropsTableImpl(schemaName, tableName, alias string) fivenetJobPropsTable {
	var (
		JobColumn                 = mysql.StringColumn("job")
		UpdatedAtColumn           = mysql.TimestampColumn("updated_at")
		ThemeColumn               = mysql.StringColumn("theme")
		LivemapMarkerColorColumn  = mysql.StringColumn("livemap_marker_color")
		QuickButtonsColumn        = mysql.StringColumn("quick_buttons")
		RadioFrequencyColumn      = mysql.StringColumn("radio_frequency")
		DiscordGuildIDColumn      = mysql.StringColumn("discord_guild_id")
		DiscordLastSyncColumn     = mysql.TimestampColumn("discord_last_sync")
		DiscordSyncSettingsColumn = mysql.StringColumn("discord_sync_settings")
		DiscordSyncChangesColumn  = mysql.StringColumn("discord_sync_changes")
		MotdColumn                = mysql.StringColumn("motd")
		LogoURLColumn             = mysql.StringColumn("logo_url")
		SettingsColumn            = mysql.StringColumn("settings")
		allColumns                = mysql.ColumnList{JobColumn, UpdatedAtColumn, ThemeColumn, LivemapMarkerColorColumn, QuickButtonsColumn, RadioFrequencyColumn, DiscordGuildIDColumn, DiscordLastSyncColumn, DiscordSyncSettingsColumn, DiscordSyncChangesColumn, MotdColumn, LogoURLColumn, SettingsColumn}
		mutableColumns            = mysql.ColumnList{JobColumn, UpdatedAtColumn, ThemeColumn, LivemapMarkerColorColumn, QuickButtonsColumn, RadioFrequencyColumn, DiscordGuildIDColumn, DiscordLastSyncColumn, DiscordSyncSettingsColumn, DiscordSyncChangesColumn, MotdColumn, LogoURLColumn, SettingsColumn}
		defaultColumns            = mysql.ColumnList{ThemeColumn, LivemapMarkerColorColumn}
	)

	return fivenetJobPropsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Job:                 JobColumn,
		UpdatedAt:           UpdatedAtColumn,
		Theme:               ThemeColumn,
		LivemapMarkerColor:  LivemapMarkerColorColumn,
		QuickButtons:        QuickButtonsColumn,
		RadioFrequency:      RadioFrequencyColumn,
		DiscordGuildID:      DiscordGuildIDColumn,
		DiscordLastSync:     DiscordLastSyncColumn,
		DiscordSyncSettings: DiscordSyncSettingsColumn,
		DiscordSyncChanges:  DiscordSyncChangesColumn,
		Motd:                MotdColumn,
		LogoURL:             LogoURLColumn,
		Settings:            SettingsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
