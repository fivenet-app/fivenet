//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetRbacRolesAttrs = newFivenetRbacRolesAttrsTable("", "fivenet_rbac_roles_attrs", "")

type fivenetRbacRolesAttrsTable struct {
	mysql.Table

	// Columns
	RoleID    mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	UpdatedAt mysql.ColumnTimestamp
	AttrID    mysql.ColumnInteger
	Value     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetRbacRolesAttrsTable struct {
	fivenetRbacRolesAttrsTable

	NEW fivenetRbacRolesAttrsTable
}

// AS creates new FivenetRbacRolesAttrsTable with assigned alias
func (a FivenetRbacRolesAttrsTable) AS(alias string) *FivenetRbacRolesAttrsTable {
	return newFivenetRbacRolesAttrsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetRbacRolesAttrsTable with assigned schema name
func (a FivenetRbacRolesAttrsTable) FromSchema(schemaName string) *FivenetRbacRolesAttrsTable {
	return newFivenetRbacRolesAttrsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetRbacRolesAttrsTable with assigned table prefix
func (a FivenetRbacRolesAttrsTable) WithPrefix(prefix string) *FivenetRbacRolesAttrsTable {
	return newFivenetRbacRolesAttrsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetRbacRolesAttrsTable with assigned table suffix
func (a FivenetRbacRolesAttrsTable) WithSuffix(suffix string) *FivenetRbacRolesAttrsTable {
	return newFivenetRbacRolesAttrsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetRbacRolesAttrsTable(schemaName, tableName, alias string) *FivenetRbacRolesAttrsTable {
	return &FivenetRbacRolesAttrsTable{
		fivenetRbacRolesAttrsTable: newFivenetRbacRolesAttrsTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetRbacRolesAttrsTableImpl("", "new", ""),
	}
}

func newFivenetRbacRolesAttrsTableImpl(schemaName, tableName, alias string) fivenetRbacRolesAttrsTable {
	var (
		RoleIDColumn    = mysql.IntegerColumn("role_id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		UpdatedAtColumn = mysql.TimestampColumn("updated_at")
		AttrIDColumn    = mysql.IntegerColumn("attr_id")
		ValueColumn     = mysql.StringColumn("value")
		allColumns      = mysql.ColumnList{RoleIDColumn, CreatedAtColumn, UpdatedAtColumn, AttrIDColumn, ValueColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, ValueColumn}
		defaultColumns  = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetRbacRolesAttrsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		RoleID:    RoleIDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		AttrID:    AttrIDColumn,
		Value:     ValueColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
