//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCentrumJobAccess = newFivenetCentrumJobAccessTable("", "fivenet_centrum_job_access", "")

type fivenetCentrumJobAccessTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	SourceJob    mysql.ColumnString
	Job          mysql.ColumnString
	MinimumGrade mysql.ColumnInteger
	Access       mysql.ColumnInteger
	AcceptedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetCentrumJobAccessTable struct {
	fivenetCentrumJobAccessTable

	NEW fivenetCentrumJobAccessTable
}

// AS creates new FivenetCentrumJobAccessTable with assigned alias
func (a FivenetCentrumJobAccessTable) AS(alias string) *FivenetCentrumJobAccessTable {
	return newFivenetCentrumJobAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCentrumJobAccessTable with assigned schema name
func (a FivenetCentrumJobAccessTable) FromSchema(schemaName string) *FivenetCentrumJobAccessTable {
	return newFivenetCentrumJobAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCentrumJobAccessTable with assigned table prefix
func (a FivenetCentrumJobAccessTable) WithPrefix(prefix string) *FivenetCentrumJobAccessTable {
	return newFivenetCentrumJobAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCentrumJobAccessTable with assigned table suffix
func (a FivenetCentrumJobAccessTable) WithSuffix(suffix string) *FivenetCentrumJobAccessTable {
	return newFivenetCentrumJobAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCentrumJobAccessTable(schemaName, tableName, alias string) *FivenetCentrumJobAccessTable {
	return &FivenetCentrumJobAccessTable{
		fivenetCentrumJobAccessTable: newFivenetCentrumJobAccessTableImpl(schemaName, tableName, alias),
		NEW:                          newFivenetCentrumJobAccessTableImpl("", "new", ""),
	}
}

func newFivenetCentrumJobAccessTableImpl(schemaName, tableName, alias string) fivenetCentrumJobAccessTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		SourceJobColumn    = mysql.StringColumn("source_job")
		JobColumn          = mysql.StringColumn("job")
		MinimumGradeColumn = mysql.IntegerColumn("minimum_grade")
		AccessColumn       = mysql.IntegerColumn("access")
		AcceptedAtColumn   = mysql.TimestampColumn("accepted_at")
		allColumns         = mysql.ColumnList{IDColumn, CreatedAtColumn, SourceJobColumn, JobColumn, MinimumGradeColumn, AccessColumn, AcceptedAtColumn}
		mutableColumns     = mysql.ColumnList{CreatedAtColumn, SourceJobColumn, JobColumn, MinimumGradeColumn, AccessColumn, AcceptedAtColumn}
		defaultColumns     = mysql.ColumnList{CreatedAtColumn, MinimumGradeColumn}
	)

	return fivenetCentrumJobAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreatedAt:    CreatedAtColumn,
		SourceJob:    SourceJobColumn,
		Job:          JobColumn,
		MinimumGrade: MinimumGradeColumn,
		Access:       AccessColumn,
		AcceptedAt:   AcceptedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
