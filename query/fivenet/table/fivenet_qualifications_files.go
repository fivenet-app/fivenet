//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetQualificationsFiles = newFivenetQualificationsFilesTable("", "fivenet_qualifications_files", "")

type fivenetQualificationsFilesTable struct {
	mysql.Table

	// Columns
	QualificationID mysql.ColumnInteger
	FileID          mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetQualificationsFilesTable struct {
	fivenetQualificationsFilesTable

	NEW fivenetQualificationsFilesTable
}

// AS creates new FivenetQualificationsFilesTable with assigned alias
func (a FivenetQualificationsFilesTable) AS(alias string) *FivenetQualificationsFilesTable {
	return newFivenetQualificationsFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetQualificationsFilesTable with assigned schema name
func (a FivenetQualificationsFilesTable) FromSchema(schemaName string) *FivenetQualificationsFilesTable {
	return newFivenetQualificationsFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetQualificationsFilesTable with assigned table prefix
func (a FivenetQualificationsFilesTable) WithPrefix(prefix string) *FivenetQualificationsFilesTable {
	return newFivenetQualificationsFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetQualificationsFilesTable with assigned table suffix
func (a FivenetQualificationsFilesTable) WithSuffix(suffix string) *FivenetQualificationsFilesTable {
	return newFivenetQualificationsFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetQualificationsFilesTable(schemaName, tableName, alias string) *FivenetQualificationsFilesTable {
	return &FivenetQualificationsFilesTable{
		fivenetQualificationsFilesTable: newFivenetQualificationsFilesTableImpl(schemaName, tableName, alias),
		NEW:                             newFivenetQualificationsFilesTableImpl("", "new", ""),
	}
}

func newFivenetQualificationsFilesTableImpl(schemaName, tableName, alias string) fivenetQualificationsFilesTable {
	var (
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		FileIDColumn          = mysql.IntegerColumn("file_id")
		allColumns            = mysql.ColumnList{QualificationIDColumn, FileIDColumn}
		mutableColumns        = mysql.ColumnList{}
		defaultColumns        = mysql.ColumnList{}
	)

	return fivenetQualificationsFilesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		QualificationID: QualificationIDColumn,
		FileID:          FileIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
