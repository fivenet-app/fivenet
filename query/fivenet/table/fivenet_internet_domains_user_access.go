//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetInternetDomainsUserAccess = newFivenetInternetDomainsUserAccessTable("", "fivenet_internet_domains_user_access", "")

type fivenetInternetDomainsUserAccessTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	DomainID  mysql.ColumnInteger
	UserID    mysql.ColumnInteger
	Access    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FivenetInternetDomainsUserAccessTable struct {
	fivenetInternetDomainsUserAccessTable

	NEW fivenetInternetDomainsUserAccessTable
}

// AS creates new FivenetInternetDomainsUserAccessTable with assigned alias
func (a FivenetInternetDomainsUserAccessTable) AS(alias string) *FivenetInternetDomainsUserAccessTable {
	return newFivenetInternetDomainsUserAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetInternetDomainsUserAccessTable with assigned schema name
func (a FivenetInternetDomainsUserAccessTable) FromSchema(schemaName string) *FivenetInternetDomainsUserAccessTable {
	return newFivenetInternetDomainsUserAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetInternetDomainsUserAccessTable with assigned table prefix
func (a FivenetInternetDomainsUserAccessTable) WithPrefix(prefix string) *FivenetInternetDomainsUserAccessTable {
	return newFivenetInternetDomainsUserAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetInternetDomainsUserAccessTable with assigned table suffix
func (a FivenetInternetDomainsUserAccessTable) WithSuffix(suffix string) *FivenetInternetDomainsUserAccessTable {
	return newFivenetInternetDomainsUserAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetInternetDomainsUserAccessTable(schemaName, tableName, alias string) *FivenetInternetDomainsUserAccessTable {
	return &FivenetInternetDomainsUserAccessTable{
		fivenetInternetDomainsUserAccessTable: newFivenetInternetDomainsUserAccessTableImpl(schemaName, tableName, alias),
		NEW:                                   newFivenetInternetDomainsUserAccessTableImpl("", "new", ""),
	}
}

func newFivenetInternetDomainsUserAccessTableImpl(schemaName, tableName, alias string) fivenetInternetDomainsUserAccessTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		DomainIDColumn  = mysql.IntegerColumn("domain_id")
		UserIDColumn    = mysql.IntegerColumn("user_id")
		AccessColumn    = mysql.IntegerColumn("access")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, DomainIDColumn, UserIDColumn, AccessColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, DomainIDColumn, UserIDColumn, AccessColumn}
	)

	return fivenetInternetDomainsUserAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		DomainID:  DomainIDColumn,
		UserID:    UserIDColumn,
		Access:    AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
