//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GksphoneSettings = newGksphoneSettingsTable("", "gksphone_settings", "")

type gksphoneSettingsTable struct {
	mysql.Table

	// Columns
	Identifier  mysql.ColumnString
	PhoneNumber mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type GksphoneSettingsTable struct {
	gksphoneSettingsTable

	NEW gksphoneSettingsTable
}

// AS creates new GksphoneSettingsTable with assigned alias
func (a GksphoneSettingsTable) AS(alias string) *GksphoneSettingsTable {
	return newGksphoneSettingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GksphoneSettingsTable with assigned schema name
func (a GksphoneSettingsTable) FromSchema(schemaName string) *GksphoneSettingsTable {
	return newGksphoneSettingsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GksphoneSettingsTable with assigned table prefix
func (a GksphoneSettingsTable) WithPrefix(prefix string) *GksphoneSettingsTable {
	return newGksphoneSettingsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GksphoneSettingsTable with assigned table suffix
func (a GksphoneSettingsTable) WithSuffix(suffix string) *GksphoneSettingsTable {
	return newGksphoneSettingsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGksphoneSettingsTable(schemaName, tableName, alias string) *GksphoneSettingsTable {
	return &GksphoneSettingsTable{
		gksphoneSettingsTable: newGksphoneSettingsTableImpl(schemaName, tableName, alias),
		NEW:                   newGksphoneSettingsTableImpl("", "new", ""),
	}
}

func newGksphoneSettingsTableImpl(schemaName, tableName, alias string) gksphoneSettingsTable {
	var (
		IdentifierColumn  = mysql.StringColumn("identifier")
		PhoneNumberColumn = mysql.StringColumn("phone_number")
		allColumns        = mysql.ColumnList{IdentifierColumn, PhoneNumberColumn}
		mutableColumns    = mysql.ColumnList{IdentifierColumn, PhoneNumberColumn}
		defaultColumns    = mysql.ColumnList{}
	)

	return gksphoneSettingsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Identifier:  IdentifierColumn,
		PhoneNumber: PhoneNumberColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
