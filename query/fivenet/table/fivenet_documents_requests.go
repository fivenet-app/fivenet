//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsRequests = newFivenetDocumentsRequestsTable("", "fivenet_documents_requests", "")

type fivenetDocumentsRequestsTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	DocumentID  mysql.ColumnInteger
	RequestType mysql.ColumnInteger
	CreatorID   mysql.ColumnInteger
	CreatorJob  mysql.ColumnString
	Reason      mysql.ColumnString
	Data        mysql.ColumnString
	Accepted    mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsRequestsTable struct {
	fivenetDocumentsRequestsTable

	NEW fivenetDocumentsRequestsTable
}

// AS creates new FivenetDocumentsRequestsTable with assigned alias
func (a FivenetDocumentsRequestsTable) AS(alias string) *FivenetDocumentsRequestsTable {
	return newFivenetDocumentsRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsRequestsTable with assigned schema name
func (a FivenetDocumentsRequestsTable) FromSchema(schemaName string) *FivenetDocumentsRequestsTable {
	return newFivenetDocumentsRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsRequestsTable with assigned table prefix
func (a FivenetDocumentsRequestsTable) WithPrefix(prefix string) *FivenetDocumentsRequestsTable {
	return newFivenetDocumentsRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsRequestsTable with assigned table suffix
func (a FivenetDocumentsRequestsTable) WithSuffix(suffix string) *FivenetDocumentsRequestsTable {
	return newFivenetDocumentsRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsRequestsTable(schemaName, tableName, alias string) *FivenetDocumentsRequestsTable {
	return &FivenetDocumentsRequestsTable{
		fivenetDocumentsRequestsTable: newFivenetDocumentsRequestsTableImpl(schemaName, tableName, alias),
		NEW:                           newFivenetDocumentsRequestsTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsRequestsTableImpl(schemaName, tableName, alias string) fivenetDocumentsRequestsTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		DocumentIDColumn  = mysql.IntegerColumn("document_id")
		RequestTypeColumn = mysql.IntegerColumn("request_type")
		CreatorIDColumn   = mysql.IntegerColumn("creator_id")
		CreatorJobColumn  = mysql.StringColumn("creator_job")
		ReasonColumn      = mysql.StringColumn("reason")
		DataColumn        = mysql.StringColumn("data")
		AcceptedColumn    = mysql.BoolColumn("accepted")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DocumentIDColumn, RequestTypeColumn, CreatorIDColumn, CreatorJobColumn, ReasonColumn, DataColumn, AcceptedColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DocumentIDColumn, RequestTypeColumn, CreatorIDColumn, CreatorJobColumn, ReasonColumn, DataColumn, AcceptedColumn}
		defaultColumns    = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetDocumentsRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		DocumentID:  DocumentIDColumn,
		RequestType: RequestTypeColumn,
		CreatorID:   CreatorIDColumn,
		CreatorJob:  CreatorJobColumn,
		Reason:      ReasonColumn,
		Data:        DataColumn,
		Accepted:    AcceptedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
