//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCentrumUnitsAccess = newFivenetCentrumUnitsAccessTable("", "fivenet_centrum_units_access", "")

type fivenetCentrumUnitsAccessTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	TargetID        mysql.ColumnInteger
	Job             mysql.ColumnString
	MinimumGrade    mysql.ColumnInteger
	QualificationID mysql.ColumnInteger
	Access          mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetCentrumUnitsAccessTable struct {
	fivenetCentrumUnitsAccessTable

	NEW fivenetCentrumUnitsAccessTable
}

// AS creates new FivenetCentrumUnitsAccessTable with assigned alias
func (a FivenetCentrumUnitsAccessTable) AS(alias string) *FivenetCentrumUnitsAccessTable {
	return newFivenetCentrumUnitsAccessTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCentrumUnitsAccessTable with assigned schema name
func (a FivenetCentrumUnitsAccessTable) FromSchema(schemaName string) *FivenetCentrumUnitsAccessTable {
	return newFivenetCentrumUnitsAccessTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCentrumUnitsAccessTable with assigned table prefix
func (a FivenetCentrumUnitsAccessTable) WithPrefix(prefix string) *FivenetCentrumUnitsAccessTable {
	return newFivenetCentrumUnitsAccessTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCentrumUnitsAccessTable with assigned table suffix
func (a FivenetCentrumUnitsAccessTable) WithSuffix(suffix string) *FivenetCentrumUnitsAccessTable {
	return newFivenetCentrumUnitsAccessTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCentrumUnitsAccessTable(schemaName, tableName, alias string) *FivenetCentrumUnitsAccessTable {
	return &FivenetCentrumUnitsAccessTable{
		fivenetCentrumUnitsAccessTable: newFivenetCentrumUnitsAccessTableImpl(schemaName, tableName, alias),
		NEW:                            newFivenetCentrumUnitsAccessTableImpl("", "new", ""),
	}
}

func newFivenetCentrumUnitsAccessTableImpl(schemaName, tableName, alias string) fivenetCentrumUnitsAccessTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		TargetIDColumn        = mysql.IntegerColumn("target_id")
		JobColumn             = mysql.StringColumn("job")
		MinimumGradeColumn    = mysql.IntegerColumn("minimum_grade")
		QualificationIDColumn = mysql.IntegerColumn("qualification_id")
		AccessColumn          = mysql.IntegerColumn("access")
		allColumns            = mysql.ColumnList{IDColumn, TargetIDColumn, JobColumn, MinimumGradeColumn, QualificationIDColumn, AccessColumn}
		mutableColumns        = mysql.ColumnList{TargetIDColumn, JobColumn, MinimumGradeColumn, QualificationIDColumn, AccessColumn}
		defaultColumns        = mysql.ColumnList{}
	)

	return fivenetCentrumUnitsAccessTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		TargetID:        TargetIDColumn,
		Job:             JobColumn,
		MinimumGrade:    MinimumGradeColumn,
		QualificationID: QualificationIDColumn,
		Access:          AccessColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
