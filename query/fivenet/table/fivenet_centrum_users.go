//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetCentrumUsers = newFivenetCentrumUsersTable("", "fivenet_centrum_users", "")

type fivenetCentrumUsersTable struct {
	mysql.Table

	// Columns
	Job        mysql.ColumnString
	UserID     mysql.ColumnInteger
	Identifier mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetCentrumUsersTable struct {
	fivenetCentrumUsersTable

	NEW fivenetCentrumUsersTable
}

// AS creates new FivenetCentrumUsersTable with assigned alias
func (a FivenetCentrumUsersTable) AS(alias string) *FivenetCentrumUsersTable {
	return newFivenetCentrumUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetCentrumUsersTable with assigned schema name
func (a FivenetCentrumUsersTable) FromSchema(schemaName string) *FivenetCentrumUsersTable {
	return newFivenetCentrumUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetCentrumUsersTable with assigned table prefix
func (a FivenetCentrumUsersTable) WithPrefix(prefix string) *FivenetCentrumUsersTable {
	return newFivenetCentrumUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetCentrumUsersTable with assigned table suffix
func (a FivenetCentrumUsersTable) WithSuffix(suffix string) *FivenetCentrumUsersTable {
	return newFivenetCentrumUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetCentrumUsersTable(schemaName, tableName, alias string) *FivenetCentrumUsersTable {
	return &FivenetCentrumUsersTable{
		fivenetCentrumUsersTable: newFivenetCentrumUsersTableImpl(schemaName, tableName, alias),
		NEW:                      newFivenetCentrumUsersTableImpl("", "new", ""),
	}
}

func newFivenetCentrumUsersTableImpl(schemaName, tableName, alias string) fivenetCentrumUsersTable {
	var (
		JobColumn        = mysql.StringColumn("job")
		UserIDColumn     = mysql.IntegerColumn("user_id")
		IdentifierColumn = mysql.StringColumn("identifier")
		allColumns       = mysql.ColumnList{JobColumn, UserIDColumn, IdentifierColumn}
		mutableColumns   = mysql.ColumnList{JobColumn, IdentifierColumn}
		defaultColumns   = mysql.ColumnList{}
	)

	return fivenetCentrumUsersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Job:        JobColumn,
		UserID:     UserIDColumn,
		Identifier: IdentifierColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
