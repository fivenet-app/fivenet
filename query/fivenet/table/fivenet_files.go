//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetFiles = newFivenetFilesTable("", "fivenet_files", "")

type fivenetFilesTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	FilePath    mysql.ColumnString
	ByteSize    mysql.ColumnInteger
	ContentType mysql.ColumnString
	Meta        mysql.ColumnString
	CreatedAt   mysql.ColumnTimestamp
	DeletedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetFilesTable struct {
	fivenetFilesTable

	NEW fivenetFilesTable
}

// AS creates new FivenetFilesTable with assigned alias
func (a FivenetFilesTable) AS(alias string) *FivenetFilesTable {
	return newFivenetFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetFilesTable with assigned schema name
func (a FivenetFilesTable) FromSchema(schemaName string) *FivenetFilesTable {
	return newFivenetFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetFilesTable with assigned table prefix
func (a FivenetFilesTable) WithPrefix(prefix string) *FivenetFilesTable {
	return newFivenetFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetFilesTable with assigned table suffix
func (a FivenetFilesTable) WithSuffix(suffix string) *FivenetFilesTable {
	return newFivenetFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetFilesTable(schemaName, tableName, alias string) *FivenetFilesTable {
	return &FivenetFilesTable{
		fivenetFilesTable: newFivenetFilesTableImpl(schemaName, tableName, alias),
		NEW:               newFivenetFilesTableImpl("", "new", ""),
	}
}

func newFivenetFilesTableImpl(schemaName, tableName, alias string) fivenetFilesTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		FilePathColumn    = mysql.StringColumn("file_path")
		ByteSizeColumn    = mysql.IntegerColumn("byte_size")
		ContentTypeColumn = mysql.StringColumn("content_type")
		MetaColumn        = mysql.StringColumn("meta")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		allColumns        = mysql.ColumnList{IDColumn, FilePathColumn, ByteSizeColumn, ContentTypeColumn, MetaColumn, CreatedAtColumn, DeletedAtColumn}
		mutableColumns    = mysql.ColumnList{FilePathColumn, ByteSizeColumn, ContentTypeColumn, MetaColumn, CreatedAtColumn, DeletedAtColumn}
		defaultColumns    = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetFilesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		FilePath:    FilePathColumn,
		ByteSize:    ByteSizeColumn,
		ContentType: ContentTypeColumn,
		Meta:        MetaColumn,
		CreatedAt:   CreatedAtColumn,
		DeletedAt:   DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
