//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetQualifications = newFivenetQualificationsTable("", "fivenet_qualifications", "")

type fivenetQualificationsTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	CreatedAt          mysql.ColumnTimestamp
	UpdatedAt          mysql.ColumnTimestamp
	DeletedAt          mysql.ColumnTimestamp
	Job                mysql.ColumnString
	Weight             mysql.ColumnInteger
	Closed             mysql.ColumnBool
	Abbreviation       mysql.ColumnString
	Title              mysql.ColumnString
	Description        mysql.ColumnString
	Content            mysql.ColumnString
	CreatorID          mysql.ColumnInteger
	CreatorJob         mysql.ColumnString
	DiscordSyncEnabled mysql.ColumnBool
	DiscordSettings    mysql.ColumnString
	ExamMode           mysql.ColumnInteger
	ExamSettings       mysql.ColumnString
	LabelSyncEnabled   mysql.ColumnBool
	LabelSyncFormat    mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetQualificationsTable struct {
	fivenetQualificationsTable

	NEW fivenetQualificationsTable
}

// AS creates new FivenetQualificationsTable with assigned alias
func (a FivenetQualificationsTable) AS(alias string) *FivenetQualificationsTable {
	return newFivenetQualificationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetQualificationsTable with assigned schema name
func (a FivenetQualificationsTable) FromSchema(schemaName string) *FivenetQualificationsTable {
	return newFivenetQualificationsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetQualificationsTable with assigned table prefix
func (a FivenetQualificationsTable) WithPrefix(prefix string) *FivenetQualificationsTable {
	return newFivenetQualificationsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetQualificationsTable with assigned table suffix
func (a FivenetQualificationsTable) WithSuffix(suffix string) *FivenetQualificationsTable {
	return newFivenetQualificationsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetQualificationsTable(schemaName, tableName, alias string) *FivenetQualificationsTable {
	return &FivenetQualificationsTable{
		fivenetQualificationsTable: newFivenetQualificationsTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetQualificationsTableImpl("", "new", ""),
	}
}

func newFivenetQualificationsTableImpl(schemaName, tableName, alias string) fivenetQualificationsTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		CreatedAtColumn          = mysql.TimestampColumn("created_at")
		UpdatedAtColumn          = mysql.TimestampColumn("updated_at")
		DeletedAtColumn          = mysql.TimestampColumn("deleted_at")
		JobColumn                = mysql.StringColumn("job")
		WeightColumn             = mysql.IntegerColumn("weight")
		ClosedColumn             = mysql.BoolColumn("closed")
		AbbreviationColumn       = mysql.StringColumn("abbreviation")
		TitleColumn              = mysql.StringColumn("title")
		DescriptionColumn        = mysql.StringColumn("description")
		ContentColumn            = mysql.StringColumn("content")
		CreatorIDColumn          = mysql.IntegerColumn("creator_id")
		CreatorJobColumn         = mysql.StringColumn("creator_job")
		DiscordSyncEnabledColumn = mysql.BoolColumn("discord_sync_enabled")
		DiscordSettingsColumn    = mysql.StringColumn("discord_settings")
		ExamModeColumn           = mysql.IntegerColumn("exam_mode")
		ExamSettingsColumn       = mysql.StringColumn("exam_settings")
		LabelSyncEnabledColumn   = mysql.BoolColumn("label_sync_enabled")
		LabelSyncFormatColumn    = mysql.StringColumn("label_sync_format")
		allColumns               = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, WeightColumn, ClosedColumn, AbbreviationColumn, TitleColumn, DescriptionColumn, ContentColumn, CreatorIDColumn, CreatorJobColumn, DiscordSyncEnabledColumn, DiscordSettingsColumn, ExamModeColumn, ExamSettingsColumn, LabelSyncEnabledColumn, LabelSyncFormatColumn}
		mutableColumns           = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn, JobColumn, WeightColumn, ClosedColumn, AbbreviationColumn, TitleColumn, DescriptionColumn, ContentColumn, CreatorIDColumn, CreatorJobColumn, DiscordSyncEnabledColumn, DiscordSettingsColumn, ExamModeColumn, ExamSettingsColumn, LabelSyncEnabledColumn, LabelSyncFormatColumn}
		defaultColumns           = mysql.ColumnList{CreatedAtColumn, WeightColumn, ClosedColumn, DiscordSyncEnabledColumn, ExamModeColumn, LabelSyncEnabledColumn}
	)

	return fivenetQualificationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		CreatedAt:          CreatedAtColumn,
		UpdatedAt:          UpdatedAtColumn,
		DeletedAt:          DeletedAtColumn,
		Job:                JobColumn,
		Weight:             WeightColumn,
		Closed:             ClosedColumn,
		Abbreviation:       AbbreviationColumn,
		Title:              TitleColumn,
		Description:        DescriptionColumn,
		Content:            ContentColumn,
		CreatorID:          CreatorIDColumn,
		CreatorJob:         CreatorJobColumn,
		DiscordSyncEnabled: DiscordSyncEnabledColumn,
		DiscordSettings:    DiscordSettingsColumn,
		ExamMode:           ExamModeColumn,
		ExamSettings:       ExamSettingsColumn,
		LabelSyncEnabled:   LabelSyncEnabledColumn,
		LabelSyncFormat:    LabelSyncFormatColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
