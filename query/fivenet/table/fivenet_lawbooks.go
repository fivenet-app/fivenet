//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetLawbooks = newFivenetLawbooksTable("", "fivenet_lawbooks", "")

type fivenetLawbooksTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	CreatedAt   mysql.ColumnTimestamp
	UpdatedAt   mysql.ColumnTimestamp
	Name        mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetLawbooksTable struct {
	fivenetLawbooksTable

	NEW fivenetLawbooksTable
}

// AS creates new FivenetLawbooksTable with assigned alias
func (a FivenetLawbooksTable) AS(alias string) *FivenetLawbooksTable {
	return newFivenetLawbooksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetLawbooksTable with assigned schema name
func (a FivenetLawbooksTable) FromSchema(schemaName string) *FivenetLawbooksTable {
	return newFivenetLawbooksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetLawbooksTable with assigned table prefix
func (a FivenetLawbooksTable) WithPrefix(prefix string) *FivenetLawbooksTable {
	return newFivenetLawbooksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetLawbooksTable with assigned table suffix
func (a FivenetLawbooksTable) WithSuffix(suffix string) *FivenetLawbooksTable {
	return newFivenetLawbooksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetLawbooksTable(schemaName, tableName, alias string) *FivenetLawbooksTable {
	return &FivenetLawbooksTable{
		fivenetLawbooksTable: newFivenetLawbooksTableImpl(schemaName, tableName, alias),
		NEW:                  newFivenetLawbooksTableImpl("", "new", ""),
	}
}

func newFivenetLawbooksTableImpl(schemaName, tableName, alias string) fivenetLawbooksTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		CreatedAtColumn   = mysql.TimestampColumn("created_at")
		UpdatedAtColumn   = mysql.TimestampColumn("updated_at")
		NameColumn        = mysql.StringColumn("name")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{IDColumn, CreatedAtColumn, UpdatedAtColumn, NameColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{CreatedAtColumn, UpdatedAtColumn, NameColumn, DescriptionColumn}
		defaultColumns    = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetLawbooksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		Name:        NameColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
