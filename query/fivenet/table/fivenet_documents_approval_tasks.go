//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsApprovalTasks = newFivenetDocumentsApprovalTasksTable("", "fivenet_documents_approval_tasks", "")

type fivenetDocumentsApprovalTasksTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	DocumentID         mysql.ColumnInteger
	SnapshotDate       mysql.ColumnTimestamp
	AssigneeKind       mysql.ColumnInteger
	UserID             mysql.ColumnInteger
	Job                mysql.ColumnString
	MinimumGrade       mysql.ColumnInteger
	DecidedByUserID    mysql.ColumnInteger
	DecidedByJob       mysql.ColumnString
	DecidedByUserGrade mysql.ColumnInteger
	Status             mysql.ColumnInteger
	Comment            mysql.ColumnString
	CreatedAt          mysql.ColumnTimestamp
	DecidedAt          mysql.ColumnTimestamp
	DueAt              mysql.ColumnTimestamp
	DecisionCount      mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsApprovalTasksTable struct {
	fivenetDocumentsApprovalTasksTable

	NEW fivenetDocumentsApprovalTasksTable
}

// AS creates new FivenetDocumentsApprovalTasksTable with assigned alias
func (a FivenetDocumentsApprovalTasksTable) AS(alias string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsApprovalTasksTable with assigned schema name
func (a FivenetDocumentsApprovalTasksTable) FromSchema(schemaName string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsApprovalTasksTable with assigned table prefix
func (a FivenetDocumentsApprovalTasksTable) WithPrefix(prefix string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsApprovalTasksTable with assigned table suffix
func (a FivenetDocumentsApprovalTasksTable) WithSuffix(suffix string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsApprovalTasksTable(schemaName, tableName, alias string) *FivenetDocumentsApprovalTasksTable {
	return &FivenetDocumentsApprovalTasksTable{
		fivenetDocumentsApprovalTasksTable: newFivenetDocumentsApprovalTasksTableImpl(schemaName, tableName, alias),
		NEW:                                newFivenetDocumentsApprovalTasksTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsApprovalTasksTableImpl(schemaName, tableName, alias string) fivenetDocumentsApprovalTasksTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		DocumentIDColumn         = mysql.IntegerColumn("document_id")
		SnapshotDateColumn       = mysql.TimestampColumn("snapshot_date")
		AssigneeKindColumn       = mysql.IntegerColumn("assignee_kind")
		UserIDColumn             = mysql.IntegerColumn("user_id")
		JobColumn                = mysql.StringColumn("job")
		MinimumGradeColumn       = mysql.IntegerColumn("minimum_grade")
		DecidedByUserIDColumn    = mysql.IntegerColumn("decided_by_user_id")
		DecidedByJobColumn       = mysql.StringColumn("decided_by_job")
		DecidedByUserGradeColumn = mysql.IntegerColumn("decided_by_user_grade")
		StatusColumn             = mysql.IntegerColumn("status")
		CommentColumn            = mysql.StringColumn("comment")
		CreatedAtColumn          = mysql.TimestampColumn("created_at")
		DecidedAtColumn          = mysql.TimestampColumn("decided_at")
		DueAtColumn              = mysql.TimestampColumn("due_at")
		DecisionCountColumn      = mysql.IntegerColumn("decision_count")
		allColumns               = mysql.ColumnList{IDColumn, DocumentIDColumn, SnapshotDateColumn, AssigneeKindColumn, UserIDColumn, JobColumn, MinimumGradeColumn, DecidedByUserIDColumn, DecidedByJobColumn, DecidedByUserGradeColumn, StatusColumn, CommentColumn, CreatedAtColumn, DecidedAtColumn, DueAtColumn, DecisionCountColumn}
		mutableColumns           = mysql.ColumnList{DocumentIDColumn, SnapshotDateColumn, AssigneeKindColumn, UserIDColumn, JobColumn, MinimumGradeColumn, DecidedByUserIDColumn, DecidedByJobColumn, DecidedByUserGradeColumn, StatusColumn, CommentColumn, CreatedAtColumn, DecidedAtColumn, DueAtColumn, DecisionCountColumn}
		defaultColumns           = mysql.ColumnList{DecisionCountColumn}
	)

	return fivenetDocumentsApprovalTasksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		DocumentID:         DocumentIDColumn,
		SnapshotDate:       SnapshotDateColumn,
		AssigneeKind:       AssigneeKindColumn,
		UserID:             UserIDColumn,
		Job:                JobColumn,
		MinimumGrade:       MinimumGradeColumn,
		DecidedByUserID:    DecidedByUserIDColumn,
		DecidedByJob:       DecidedByJobColumn,
		DecidedByUserGrade: DecidedByUserGradeColumn,
		Status:             StatusColumn,
		Comment:            CommentColumn,
		CreatedAt:          CreatedAtColumn,
		DecidedAt:          DecidedAtColumn,
		DueAt:              DueAtColumn,
		DecisionCount:      DecisionCountColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
