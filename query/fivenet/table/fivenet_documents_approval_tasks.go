//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsApprovalTasks = newFivenetDocumentsApprovalTasksTable("", "fivenet_documents_approval_tasks", "")

type fivenetDocumentsApprovalTasksTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	DocumentID    mysql.ColumnInteger
	SnapshotDate  mysql.ColumnTimestamp
	PolicyID      mysql.ColumnInteger
	AssigneeKind  mysql.ColumnInteger
	UserID        mysql.ColumnInteger
	Job           mysql.ColumnString
	MinimumGrade  mysql.ColumnInteger
	SlotNo        mysql.ColumnInteger
	Status        mysql.ColumnInteger
	Comment       mysql.ColumnString
	DueAt         mysql.ColumnTimestamp
	DecisionCount mysql.ColumnInteger
	CreatedAt     mysql.ColumnTimestamp
	DecidedAt     mysql.ColumnTimestamp
	ApprovalID    mysql.ColumnInteger
	CreatorID     mysql.ColumnInteger
	CreatorJob    mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsApprovalTasksTable struct {
	fivenetDocumentsApprovalTasksTable

	NEW fivenetDocumentsApprovalTasksTable
}

// AS creates new FivenetDocumentsApprovalTasksTable with assigned alias
func (a FivenetDocumentsApprovalTasksTable) AS(alias string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsApprovalTasksTable with assigned schema name
func (a FivenetDocumentsApprovalTasksTable) FromSchema(schemaName string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsApprovalTasksTable with assigned table prefix
func (a FivenetDocumentsApprovalTasksTable) WithPrefix(prefix string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsApprovalTasksTable with assigned table suffix
func (a FivenetDocumentsApprovalTasksTable) WithSuffix(suffix string) *FivenetDocumentsApprovalTasksTable {
	return newFivenetDocumentsApprovalTasksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsApprovalTasksTable(schemaName, tableName, alias string) *FivenetDocumentsApprovalTasksTable {
	return &FivenetDocumentsApprovalTasksTable{
		fivenetDocumentsApprovalTasksTable: newFivenetDocumentsApprovalTasksTableImpl(schemaName, tableName, alias),
		NEW:                                newFivenetDocumentsApprovalTasksTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsApprovalTasksTableImpl(schemaName, tableName, alias string) fivenetDocumentsApprovalTasksTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		DocumentIDColumn    = mysql.IntegerColumn("document_id")
		SnapshotDateColumn  = mysql.TimestampColumn("snapshot_date")
		PolicyIDColumn      = mysql.IntegerColumn("policy_id")
		AssigneeKindColumn  = mysql.IntegerColumn("assignee_kind")
		UserIDColumn        = mysql.IntegerColumn("user_id")
		JobColumn           = mysql.StringColumn("job")
		MinimumGradeColumn  = mysql.IntegerColumn("minimum_grade")
		SlotNoColumn        = mysql.IntegerColumn("slot_no")
		StatusColumn        = mysql.IntegerColumn("status")
		CommentColumn       = mysql.StringColumn("comment")
		DueAtColumn         = mysql.TimestampColumn("due_at")
		DecisionCountColumn = mysql.IntegerColumn("decision_count")
		CreatedAtColumn     = mysql.TimestampColumn("created_at")
		DecidedAtColumn     = mysql.TimestampColumn("decided_at")
		ApprovalIDColumn    = mysql.IntegerColumn("approval_id")
		CreatorIDColumn     = mysql.IntegerColumn("creator_id")
		CreatorJobColumn    = mysql.StringColumn("creator_job")
		allColumns          = mysql.ColumnList{IDColumn, DocumentIDColumn, SnapshotDateColumn, PolicyIDColumn, AssigneeKindColumn, UserIDColumn, JobColumn, MinimumGradeColumn, SlotNoColumn, StatusColumn, CommentColumn, DueAtColumn, DecisionCountColumn, CreatedAtColumn, DecidedAtColumn, ApprovalIDColumn, CreatorIDColumn, CreatorJobColumn}
		mutableColumns      = mysql.ColumnList{DocumentIDColumn, SnapshotDateColumn, PolicyIDColumn, AssigneeKindColumn, UserIDColumn, JobColumn, MinimumGradeColumn, SlotNoColumn, StatusColumn, CommentColumn, DueAtColumn, DecisionCountColumn, CreatedAtColumn, DecidedAtColumn, ApprovalIDColumn, CreatorIDColumn, CreatorJobColumn}
		defaultColumns      = mysql.ColumnList{SlotNoColumn, DecisionCountColumn, CreatedAtColumn}
	)

	return fivenetDocumentsApprovalTasksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		DocumentID:    DocumentIDColumn,
		SnapshotDate:  SnapshotDateColumn,
		PolicyID:      PolicyIDColumn,
		AssigneeKind:  AssigneeKindColumn,
		UserID:        UserIDColumn,
		Job:           JobColumn,
		MinimumGrade:  MinimumGradeColumn,
		SlotNo:        SlotNoColumn,
		Status:        StatusColumn,
		Comment:       CommentColumn,
		DueAt:         DueAtColumn,
		DecisionCount: DecisionCountColumn,
		CreatedAt:     CreatedAtColumn,
		DecidedAt:     DecidedAtColumn,
		ApprovalID:    ApprovalIDColumn,
		CreatorID:     CreatorIDColumn,
		CreatorJob:    CreatorJobColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
