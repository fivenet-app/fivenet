//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerThreadsRecipients = newFivenetMailerThreadsRecipientsTable("", "fivenet_mailer_threads_recipients", "")

type fivenetMailerThreadsRecipientsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	CreatedAt mysql.ColumnTimestamp
	ThreadID  mysql.ColumnInteger
	EmailID   mysql.ColumnInteger
	Email     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetMailerThreadsRecipientsTable struct {
	fivenetMailerThreadsRecipientsTable

	NEW fivenetMailerThreadsRecipientsTable
}

// AS creates new FivenetMailerThreadsRecipientsTable with assigned alias
func (a FivenetMailerThreadsRecipientsTable) AS(alias string) *FivenetMailerThreadsRecipientsTable {
	return newFivenetMailerThreadsRecipientsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerThreadsRecipientsTable with assigned schema name
func (a FivenetMailerThreadsRecipientsTable) FromSchema(schemaName string) *FivenetMailerThreadsRecipientsTable {
	return newFivenetMailerThreadsRecipientsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerThreadsRecipientsTable with assigned table prefix
func (a FivenetMailerThreadsRecipientsTable) WithPrefix(prefix string) *FivenetMailerThreadsRecipientsTable {
	return newFivenetMailerThreadsRecipientsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerThreadsRecipientsTable with assigned table suffix
func (a FivenetMailerThreadsRecipientsTable) WithSuffix(suffix string) *FivenetMailerThreadsRecipientsTable {
	return newFivenetMailerThreadsRecipientsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerThreadsRecipientsTable(schemaName, tableName, alias string) *FivenetMailerThreadsRecipientsTable {
	return &FivenetMailerThreadsRecipientsTable{
		fivenetMailerThreadsRecipientsTable: newFivenetMailerThreadsRecipientsTableImpl(schemaName, tableName, alias),
		NEW:                                 newFivenetMailerThreadsRecipientsTableImpl("", "new", ""),
	}
}

func newFivenetMailerThreadsRecipientsTableImpl(schemaName, tableName, alias string) fivenetMailerThreadsRecipientsTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		CreatedAtColumn = mysql.TimestampColumn("created_at")
		ThreadIDColumn  = mysql.IntegerColumn("thread_id")
		EmailIDColumn   = mysql.IntegerColumn("email_id")
		EmailColumn     = mysql.StringColumn("email")
		allColumns      = mysql.ColumnList{IDColumn, CreatedAtColumn, ThreadIDColumn, EmailIDColumn, EmailColumn}
		mutableColumns  = mysql.ColumnList{CreatedAtColumn, ThreadIDColumn, EmailIDColumn, EmailColumn}
		defaultColumns  = mysql.ColumnList{CreatedAtColumn}
	)

	return fivenetMailerThreadsRecipientsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		CreatedAt: CreatedAtColumn,
		ThreadID:  ThreadIDColumn,
		EmailID:   EmailIDColumn,
		Email:     EmailColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
