//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetMailerMessagesFiles = newFivenetMailerMessagesFilesTable("", "fivenet_mailer_messages_files", "")

type fivenetMailerMessagesFilesTable struct {
	mysql.Table

	// Columns
	MessageID mysql.ColumnInteger
	FileID    mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetMailerMessagesFilesTable struct {
	fivenetMailerMessagesFilesTable

	NEW fivenetMailerMessagesFilesTable
}

// AS creates new FivenetMailerMessagesFilesTable with assigned alias
func (a FivenetMailerMessagesFilesTable) AS(alias string) *FivenetMailerMessagesFilesTable {
	return newFivenetMailerMessagesFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetMailerMessagesFilesTable with assigned schema name
func (a FivenetMailerMessagesFilesTable) FromSchema(schemaName string) *FivenetMailerMessagesFilesTable {
	return newFivenetMailerMessagesFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetMailerMessagesFilesTable with assigned table prefix
func (a FivenetMailerMessagesFilesTable) WithPrefix(prefix string) *FivenetMailerMessagesFilesTable {
	return newFivenetMailerMessagesFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetMailerMessagesFilesTable with assigned table suffix
func (a FivenetMailerMessagesFilesTable) WithSuffix(suffix string) *FivenetMailerMessagesFilesTable {
	return newFivenetMailerMessagesFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetMailerMessagesFilesTable(schemaName, tableName, alias string) *FivenetMailerMessagesFilesTable {
	return &FivenetMailerMessagesFilesTable{
		fivenetMailerMessagesFilesTable: newFivenetMailerMessagesFilesTableImpl(schemaName, tableName, alias),
		NEW:                             newFivenetMailerMessagesFilesTableImpl("", "new", ""),
	}
}

func newFivenetMailerMessagesFilesTableImpl(schemaName, tableName, alias string) fivenetMailerMessagesFilesTable {
	var (
		MessageIDColumn = mysql.IntegerColumn("message_id")
		FileIDColumn    = mysql.IntegerColumn("file_id")
		allColumns      = mysql.ColumnList{MessageIDColumn, FileIDColumn}
		mutableColumns  = mysql.ColumnList{}
		defaultColumns  = mysql.ColumnList{}
	)

	return fivenetMailerMessagesFilesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MessageID: MessageIDColumn,
		FileID:    FileIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
