//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetDocumentsApprovalPolicies = newFivenetDocumentsApprovalPoliciesTable("", "fivenet_documents_approval_policies", "")

type fivenetDocumentsApprovalPoliciesTable struct {
	mysql.Table

	// Columns
	DocumentID        mysql.ColumnInteger
	SnapshotDate      mysql.ColumnTimestamp
	OnEditBehavior    mysql.ColumnInteger
	RuleKind          mysql.ColumnInteger
	RequiredCount     mysql.ColumnInteger
	SignatureRequired mysql.ColumnBool
	AssignedCount     mysql.ColumnInteger
	ApprovedCount     mysql.ColumnInteger
	DeclinedCount     mysql.ColumnInteger
	PendingCount      mysql.ColumnInteger
	AnyDeclined       mysql.ColumnBool
	StartedAt         mysql.ColumnTimestamp
	CompletedAt       mysql.ColumnTimestamp
	CreatedAt         mysql.ColumnTimestamp
	UpdatedAt         mysql.ColumnTimestamp
	DeletedAt         mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetDocumentsApprovalPoliciesTable struct {
	fivenetDocumentsApprovalPoliciesTable

	NEW fivenetDocumentsApprovalPoliciesTable
}

// AS creates new FivenetDocumentsApprovalPoliciesTable with assigned alias
func (a FivenetDocumentsApprovalPoliciesTable) AS(alias string) *FivenetDocumentsApprovalPoliciesTable {
	return newFivenetDocumentsApprovalPoliciesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetDocumentsApprovalPoliciesTable with assigned schema name
func (a FivenetDocumentsApprovalPoliciesTable) FromSchema(schemaName string) *FivenetDocumentsApprovalPoliciesTable {
	return newFivenetDocumentsApprovalPoliciesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetDocumentsApprovalPoliciesTable with assigned table prefix
func (a FivenetDocumentsApprovalPoliciesTable) WithPrefix(prefix string) *FivenetDocumentsApprovalPoliciesTable {
	return newFivenetDocumentsApprovalPoliciesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetDocumentsApprovalPoliciesTable with assigned table suffix
func (a FivenetDocumentsApprovalPoliciesTable) WithSuffix(suffix string) *FivenetDocumentsApprovalPoliciesTable {
	return newFivenetDocumentsApprovalPoliciesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetDocumentsApprovalPoliciesTable(schemaName, tableName, alias string) *FivenetDocumentsApprovalPoliciesTable {
	return &FivenetDocumentsApprovalPoliciesTable{
		fivenetDocumentsApprovalPoliciesTable: newFivenetDocumentsApprovalPoliciesTableImpl(schemaName, tableName, alias),
		NEW:                                   newFivenetDocumentsApprovalPoliciesTableImpl("", "new", ""),
	}
}

func newFivenetDocumentsApprovalPoliciesTableImpl(schemaName, tableName, alias string) fivenetDocumentsApprovalPoliciesTable {
	var (
		DocumentIDColumn        = mysql.IntegerColumn("document_id")
		SnapshotDateColumn      = mysql.TimestampColumn("snapshot_date")
		OnEditBehaviorColumn    = mysql.IntegerColumn("on_edit_behavior")
		RuleKindColumn          = mysql.IntegerColumn("rule_kind")
		RequiredCountColumn     = mysql.IntegerColumn("required_count")
		SignatureRequiredColumn = mysql.BoolColumn("signature_required")
		AssignedCountColumn     = mysql.IntegerColumn("assigned_count")
		ApprovedCountColumn     = mysql.IntegerColumn("approved_count")
		DeclinedCountColumn     = mysql.IntegerColumn("declined_count")
		PendingCountColumn      = mysql.IntegerColumn("pending_count")
		AnyDeclinedColumn       = mysql.BoolColumn("any_declined")
		StartedAtColumn         = mysql.TimestampColumn("started_at")
		CompletedAtColumn       = mysql.TimestampColumn("completed_at")
		CreatedAtColumn         = mysql.TimestampColumn("created_at")
		UpdatedAtColumn         = mysql.TimestampColumn("updated_at")
		DeletedAtColumn         = mysql.TimestampColumn("deleted_at")
		allColumns              = mysql.ColumnList{DocumentIDColumn, SnapshotDateColumn, OnEditBehaviorColumn, RuleKindColumn, RequiredCountColumn, SignatureRequiredColumn, AssignedCountColumn, ApprovedCountColumn, DeclinedCountColumn, PendingCountColumn, AnyDeclinedColumn, StartedAtColumn, CompletedAtColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns          = mysql.ColumnList{SnapshotDateColumn, OnEditBehaviorColumn, RuleKindColumn, RequiredCountColumn, SignatureRequiredColumn, AssignedCountColumn, ApprovedCountColumn, DeclinedCountColumn, PendingCountColumn, AnyDeclinedColumn, StartedAtColumn, CompletedAtColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		defaultColumns          = mysql.ColumnList{RuleKindColumn, RequiredCountColumn, SignatureRequiredColumn, AssignedCountColumn, ApprovedCountColumn, DeclinedCountColumn, PendingCountColumn, AnyDeclinedColumn, CreatedAtColumn}
	)

	return fivenetDocumentsApprovalPoliciesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DocumentID:        DocumentIDColumn,
		SnapshotDate:      SnapshotDateColumn,
		OnEditBehavior:    OnEditBehaviorColumn,
		RuleKind:          RuleKindColumn,
		RequiredCount:     RequiredCountColumn,
		SignatureRequired: SignatureRequiredColumn,
		AssignedCount:     AssignedCountColumn,
		ApprovedCount:     ApprovedCountColumn,
		DeclinedCount:     DeclinedCountColumn,
		PendingCount:      PendingCountColumn,
		AnyDeclined:       AnyDeclinedColumn,
		StartedAt:         StartedAtColumn,
		CompletedAt:       CompletedAtColumn,
		CreatedAt:         CreatedAtColumn,
		UpdatedAt:         UpdatedAtColumn,
		DeletedAt:         DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
