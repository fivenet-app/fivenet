//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetQualificationsExamQuestionsFiles = newFivenetQualificationsExamQuestionsFilesTable("", "fivenet_qualifications_exam_questions_files", "")

type fivenetQualificationsExamQuestionsFilesTable struct {
	mysql.Table

	// Columns
	QuestionID mysql.ColumnInteger
	FileID     mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetQualificationsExamQuestionsFilesTable struct {
	fivenetQualificationsExamQuestionsFilesTable

	NEW fivenetQualificationsExamQuestionsFilesTable
}

// AS creates new FivenetQualificationsExamQuestionsFilesTable with assigned alias
func (a FivenetQualificationsExamQuestionsFilesTable) AS(alias string) *FivenetQualificationsExamQuestionsFilesTable {
	return newFivenetQualificationsExamQuestionsFilesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetQualificationsExamQuestionsFilesTable with assigned schema name
func (a FivenetQualificationsExamQuestionsFilesTable) FromSchema(schemaName string) *FivenetQualificationsExamQuestionsFilesTable {
	return newFivenetQualificationsExamQuestionsFilesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetQualificationsExamQuestionsFilesTable with assigned table prefix
func (a FivenetQualificationsExamQuestionsFilesTable) WithPrefix(prefix string) *FivenetQualificationsExamQuestionsFilesTable {
	return newFivenetQualificationsExamQuestionsFilesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetQualificationsExamQuestionsFilesTable with assigned table suffix
func (a FivenetQualificationsExamQuestionsFilesTable) WithSuffix(suffix string) *FivenetQualificationsExamQuestionsFilesTable {
	return newFivenetQualificationsExamQuestionsFilesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetQualificationsExamQuestionsFilesTable(schemaName, tableName, alias string) *FivenetQualificationsExamQuestionsFilesTable {
	return &FivenetQualificationsExamQuestionsFilesTable{
		fivenetQualificationsExamQuestionsFilesTable: newFivenetQualificationsExamQuestionsFilesTableImpl(schemaName, tableName, alias),
		NEW: newFivenetQualificationsExamQuestionsFilesTableImpl("", "new", ""),
	}
}

func newFivenetQualificationsExamQuestionsFilesTableImpl(schemaName, tableName, alias string) fivenetQualificationsExamQuestionsFilesTable {
	var (
		QuestionIDColumn = mysql.IntegerColumn("question_id")
		FileIDColumn     = mysql.IntegerColumn("file_id")
		allColumns       = mysql.ColumnList{QuestionIDColumn, FileIDColumn}
		mutableColumns   = mysql.ColumnList{}
		defaultColumns   = mysql.ColumnList{}
	)

	return fivenetQualificationsExamQuestionsFilesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		QuestionID: QuestionIDColumn,
		FileID:     FileIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
