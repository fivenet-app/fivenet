//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FivenetJobPermissions = newFivenetJobPermissionsTable("", "fivenet_job_permissions", "")

type fivenetJobPermissionsTable struct {
	mysql.Table

	// Columns
	Job          mysql.ColumnString
	PermissionID mysql.ColumnInteger
	Val          mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
	DefaultColumns mysql.ColumnList
}

type FivenetJobPermissionsTable struct {
	fivenetJobPermissionsTable

	NEW fivenetJobPermissionsTable
}

// AS creates new FivenetJobPermissionsTable with assigned alias
func (a FivenetJobPermissionsTable) AS(alias string) *FivenetJobPermissionsTable {
	return newFivenetJobPermissionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FivenetJobPermissionsTable with assigned schema name
func (a FivenetJobPermissionsTable) FromSchema(schemaName string) *FivenetJobPermissionsTable {
	return newFivenetJobPermissionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FivenetJobPermissionsTable with assigned table prefix
func (a FivenetJobPermissionsTable) WithPrefix(prefix string) *FivenetJobPermissionsTable {
	return newFivenetJobPermissionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FivenetJobPermissionsTable with assigned table suffix
func (a FivenetJobPermissionsTable) WithSuffix(suffix string) *FivenetJobPermissionsTable {
	return newFivenetJobPermissionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFivenetJobPermissionsTable(schemaName, tableName, alias string) *FivenetJobPermissionsTable {
	return &FivenetJobPermissionsTable{
		fivenetJobPermissionsTable: newFivenetJobPermissionsTableImpl(schemaName, tableName, alias),
		NEW:                        newFivenetJobPermissionsTableImpl("", "new", ""),
	}
}

func newFivenetJobPermissionsTableImpl(schemaName, tableName, alias string) fivenetJobPermissionsTable {
	var (
		JobColumn          = mysql.StringColumn("job")
		PermissionIDColumn = mysql.IntegerColumn("permission_id")
		ValColumn          = mysql.BoolColumn("val")
		allColumns         = mysql.ColumnList{JobColumn, PermissionIDColumn, ValColumn}
		mutableColumns     = mysql.ColumnList{ValColumn}
		defaultColumns     = mysql.ColumnList{}
	)

	return fivenetJobPermissionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Job:          JobColumn,
		PermissionID: PermissionIDColumn,
		Val:          ValColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
