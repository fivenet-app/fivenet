name: Build Release
on:
  release:
    types: [created]

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4

      - name: Set APP_VERSION env
        run: echo APP_VERSION=$(git describe --tags --exclude='fivenet-*') >> ${GITHUB_ENV}

      - uses: wangyoucao577/go-release-action@v1.53
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: '1.23.5'
          binary_name: 'fivenet'
          extra_files: LICENSE README.md VERSION config.example.yaml dbsync.example.yaml
          ldflags: '-X github.com/fivenet-app/fivenet/pkg/version.Version=${{ env.APP_VERSION }}'
