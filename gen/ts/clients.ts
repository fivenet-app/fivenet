// Code generated by protoc-gen-fronthelper. DO NOT EDIT.

import { useGRPCTransport } from '~/composables/useGRPCTransport';

// Factory for auth.auth client.
export async function getAuthAuthClient() {
    const { AuthServiceClient } = await import('~~/gen/ts/services/auth/auth.client');
    return new AuthServiceClient(useGRPCTransport());
}

// Factory for calendar.calendar client.
export async function getCalendarCalendarClient() {
    const { CalendarServiceClient } = await import('~~/gen/ts/services/calendar/calendar.client');
    return new CalendarServiceClient(useGRPCTransport());
}

// Factory for centrum.centrum client.
export async function getCentrumCentrumClient() {
    const { CentrumServiceClient } = await import('~~/gen/ts/services/centrum/centrum.client');
    return new CentrumServiceClient(useGRPCTransport());
}

// Factory for citizens.citizens client.
export async function getCitizensCitizensClient() {
    const { CitizensServiceClient } = await import('~~/gen/ts/services/citizens/citizens.client');
    return new CitizensServiceClient(useGRPCTransport());
}

// Factory for completor.completor client.
export async function getCompletorCompletorClient() {
    const { CompletorServiceClient } = await import('~~/gen/ts/services/completor/completor.client');
    return new CompletorServiceClient(useGRPCTransport());
}

// Factory for documents.collab client.
export async function getDocumentsCollabClient() {
    const { CollabServiceClient } = await import('~~/gen/ts/services/documents/collab.client');
    return new CollabServiceClient(useGRPCTransport());
}

// Factory for documents.documents client.
export async function getDocumentsDocumentsClient() {
    const { DocumentsServiceClient } = await import('~~/gen/ts/services/documents/documents.client');
    return new DocumentsServiceClient(useGRPCTransport());
}

// Factory for filestore.filestore client.
export async function getFilestoreFilestoreClient() {
    const { FilestoreServiceClient } = await import('~~/gen/ts/services/filestore/filestore.client');
    return new FilestoreServiceClient(useGRPCTransport());
}

// Factory for jobs.conduct client.
export async function getJobsConductClient() {
    const { ConductServiceClient } = await import('~~/gen/ts/services/jobs/conduct.client');
    return new ConductServiceClient(useGRPCTransport());
}

// Factory for jobs.jobs client.
export async function getJobsJobsClient() {
    const { JobsServiceClient } = await import('~~/gen/ts/services/jobs/jobs.client');
    return new JobsServiceClient(useGRPCTransport());
}

// Factory for jobs.timeclock client.
export async function getJobsTimeclockClient() {
    const { TimeclockServiceClient } = await import('~~/gen/ts/services/jobs/timeclock.client');
    return new TimeclockServiceClient(useGRPCTransport());
}

// Factory for livemap.livemap client.
export async function getLivemapLivemapClient() {
    const { LivemapServiceClient } = await import('~~/gen/ts/services/livemap/livemap.client');
    return new LivemapServiceClient(useGRPCTransport());
}

// Factory for mailer.mailer client.
export async function getMailerMailerClient() {
    const { MailerServiceClient } = await import('~~/gen/ts/services/mailer/mailer.client');
    return new MailerServiceClient(useGRPCTransport());
}

// Factory for notifications.notifications client.
export async function getNotificationsNotificationsClient() {
    const { NotificationsServiceClient } = await import('~~/gen/ts/services/notifications/notifications.client');
    return new NotificationsServiceClient(useGRPCTransport());
}

// Factory for qualifications.qualifications client.
export async function getQualificationsQualificationsClient() {
    const { QualificationsServiceClient } = await import('~~/gen/ts/services/qualifications/qualifications.client');
    return new QualificationsServiceClient(useGRPCTransport());
}

// Factory for settings.accounts client.
export async function getSettingsAccountsClient() {
    const { AccountsServiceClient } = await import('~~/gen/ts/services/settings/accounts.client');
    return new AccountsServiceClient(useGRPCTransport());
}

// Factory for settings.config client.
export async function getSettingsConfigClient() {
    const { ConfigServiceClient } = await import('~~/gen/ts/services/settings/config.client');
    return new ConfigServiceClient(useGRPCTransport());
}

// Factory for settings.cron client.
export async function getSettingsCronClient() {
    const { CronServiceClient } = await import('~~/gen/ts/services/settings/cron.client');
    return new CronServiceClient(useGRPCTransport());
}

// Factory for settings.laws client.
export async function getSettingsLawsClient() {
    const { LawsServiceClient } = await import('~~/gen/ts/services/settings/laws.client');
    return new LawsServiceClient(useGRPCTransport());
}

// Factory for settings.settings client.
export async function getSettingsSettingsClient() {
    const { SettingsServiceClient } = await import('~~/gen/ts/services/settings/settings.client');
    return new SettingsServiceClient(useGRPCTransport());
}

// Factory for settings.system client.
export async function getSettingsSystemClient() {
    const { SystemServiceClient } = await import('~~/gen/ts/services/settings/system.client');
    return new SystemServiceClient(useGRPCTransport());
}

// Factory for stats.stats client.
export async function getStatsStatsClient() {
    const { StatsServiceClient } = await import('~~/gen/ts/services/stats/stats.client');
    return new StatsServiceClient(useGRPCTransport());
}

// Factory for sync.sync client.
export async function getSyncSyncClient() {
    const { SyncServiceClient } = await import('~~/gen/ts/services/sync/sync.client');
    return new SyncServiceClient(useGRPCTransport());
}

// Factory for vehicles.vehicles client.
export async function getVehiclesVehiclesClient() {
    const { VehiclesServiceClient } = await import('~~/gen/ts/services/vehicles/vehicles.client');
    return new VehiclesServiceClient(useGRPCTransport());
}

// Factory for wiki.collab client.
export async function getWikiCollabClient() {
    const { CollabServiceClient } = await import('~~/gen/ts/services/wiki/collab.client');
    return new CollabServiceClient(useGRPCTransport());
}

// Factory for wiki.wiki client.
export async function getWikiWikiClient() {
    const { WikiServiceClient } = await import('~~/gen/ts/services/wiki/wiki.client');
    return new WikiServiceClient(useGRPCTransport());
}
