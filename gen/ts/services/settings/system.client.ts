// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "services/settings/system.proto" (package "services.settings", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SystemService } from "./system";
import type { DeleteFactionResponse } from "./system";
import type { DeleteFactionRequest } from "./system";
import type { UpdateJobLimitsResponse } from "./system";
import type { UpdateJobLimitsRequest } from "./system";
import type { GetJobLimitsResponse } from "./system";
import type { GetJobLimitsRequest } from "./system";
import type { GetAllPermissionsResponse } from "./system";
import type { GetAllPermissionsRequest } from "./system";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetStatusResponse } from "./system";
import type { GetStatusRequest } from "./system";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.settings.SystemService
 */
export interface ISystemServiceClient {
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetStatus
     */
    getStatus(input: GetStatusRequest, options?: RpcOptions): UnaryCall<GetStatusRequest, GetStatusResponse>;
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetAllPermissions
     */
    getAllPermissions(input: GetAllPermissionsRequest, options?: RpcOptions): UnaryCall<GetAllPermissionsRequest, GetAllPermissionsResponse>;
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetJobLimits
     */
    getJobLimits(input: GetJobLimitsRequest, options?: RpcOptions): UnaryCall<GetJobLimitsRequest, GetJobLimitsResponse>;
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: UpdateJobLimits
     */
    updateJobLimits(input: UpdateJobLimitsRequest, options?: RpcOptions): UnaryCall<UpdateJobLimitsRequest, UpdateJobLimitsResponse>;
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: DeleteFaction
     */
    deleteFaction(input: DeleteFactionRequest, options?: RpcOptions): UnaryCall<DeleteFactionRequest, DeleteFactionResponse>;
}
/**
 * @generated from protobuf service services.settings.SystemService
 */
export class SystemServiceClient implements ISystemServiceClient, ServiceInfo {
    typeName = SystemService.typeName;
    methods = SystemService.methods;
    options = SystemService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetStatus
     */
    getStatus(input: GetStatusRequest, options?: RpcOptions): UnaryCall<GetStatusRequest, GetStatusResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStatusRequest, GetStatusResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetAllPermissions
     */
    getAllPermissions(input: GetAllPermissionsRequest, options?: RpcOptions): UnaryCall<GetAllPermissionsRequest, GetAllPermissionsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAllPermissionsRequest, GetAllPermissionsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: GetJobLimits
     */
    getJobLimits(input: GetJobLimitsRequest, options?: RpcOptions): UnaryCall<GetJobLimitsRequest, GetJobLimitsResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetJobLimitsRequest, GetJobLimitsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: UpdateJobLimits
     */
    updateJobLimits(input: UpdateJobLimitsRequest, options?: RpcOptions): UnaryCall<UpdateJobLimitsRequest, UpdateJobLimitsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateJobLimitsRequest, UpdateJobLimitsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=Superuser
     *
     * @generated from protobuf rpc: DeleteFaction
     */
    deleteFaction(input: DeleteFactionRequest, options?: RpcOptions): UnaryCall<DeleteFactionRequest, DeleteFactionResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteFactionRequest, DeleteFactionResponse>("unary", this._transport, method, opt, input);
    }
}
