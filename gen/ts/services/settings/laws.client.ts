// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "services/settings/laws.proto" (package "services.settings", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { LawsService } from "./laws";
import type { DeleteLawResponse } from "./laws";
import type { DeleteLawRequest } from "./laws";
import type { CreateOrUpdateLawResponse } from "./laws";
import type { CreateOrUpdateLawRequest } from "./laws";
import type { DeleteLawBookResponse } from "./laws";
import type { DeleteLawBookRequest } from "./laws";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateOrUpdateLawBookResponse } from "./laws";
import type { CreateOrUpdateLawBookRequest } from "./laws";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.settings.LawsService
 */
export interface ILawsServiceClient {
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateOrUpdateLawBook
     */
    createOrUpdateLawBook(input: CreateOrUpdateLawBookRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateLawBookRequest, CreateOrUpdateLawBookResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteLawBook
     */
    deleteLawBook(input: DeleteLawBookRequest, options?: RpcOptions): UnaryCall<DeleteLawBookRequest, DeleteLawBookResponse>;
    /**
     * @perm: Name=CreateOrUpdateLawBook
     *
     * @generated from protobuf rpc: CreateOrUpdateLaw
     */
    createOrUpdateLaw(input: CreateOrUpdateLawRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateLawRequest, CreateOrUpdateLawResponse>;
    /**
     * @perm: Name=DeleteLawBook
     *
     * @generated from protobuf rpc: DeleteLaw
     */
    deleteLaw(input: DeleteLawRequest, options?: RpcOptions): UnaryCall<DeleteLawRequest, DeleteLawResponse>;
}
/**
 * @generated from protobuf service services.settings.LawsService
 */
export class LawsServiceClient implements ILawsServiceClient, ServiceInfo {
    typeName = LawsService.typeName;
    methods = LawsService.methods;
    options = LawsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: CreateOrUpdateLawBook
     */
    createOrUpdateLawBook(input: CreateOrUpdateLawBookRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateLawBookRequest, CreateOrUpdateLawBookResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOrUpdateLawBookRequest, CreateOrUpdateLawBookResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: DeleteLawBook
     */
    deleteLawBook(input: DeleteLawBookRequest, options?: RpcOptions): UnaryCall<DeleteLawBookRequest, DeleteLawBookResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteLawBookRequest, DeleteLawBookResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=CreateOrUpdateLawBook
     *
     * @generated from protobuf rpc: CreateOrUpdateLaw
     */
    createOrUpdateLaw(input: CreateOrUpdateLawRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateLawRequest, CreateOrUpdateLawResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOrUpdateLawRequest, CreateOrUpdateLawResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=DeleteLawBook
     *
     * @generated from protobuf rpc: DeleteLaw
     */
    deleteLaw(input: DeleteLawRequest, options?: RpcOptions): UnaryCall<DeleteLawRequest, DeleteLawResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteLawRequest, DeleteLawResponse>("unary", this._transport, method, opt, input);
    }
}
