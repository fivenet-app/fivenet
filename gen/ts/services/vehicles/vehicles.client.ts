// @generated by protobuf-ts 2.10.0 with parameter optimize_speed,long_type_number,force_server_none
// @generated from protobuf file "services/vehicles/vehicles.proto" (package "services.vehicles", syntax proto3)
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { VehiclesService } from "./vehicles";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListVehiclesResponse } from "./vehicles";
import type { ListVehiclesRequest } from "./vehicles";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.vehicles.VehiclesService
 */
export interface IVehiclesServiceClient {
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListVehicles(services.vehicles.ListVehiclesRequest) returns (services.vehicles.ListVehiclesResponse);
     */
    listVehicles(input: ListVehiclesRequest, options?: RpcOptions): UnaryCall<ListVehiclesRequest, ListVehiclesResponse>;
}
/**
 * @generated from protobuf service services.vehicles.VehiclesService
 */
export class VehiclesServiceClient implements IVehiclesServiceClient, ServiceInfo {
    typeName = VehiclesService.typeName;
    methods = VehiclesService.methods;
    options = VehiclesService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListVehicles(services.vehicles.ListVehiclesRequest) returns (services.vehicles.ListVehiclesResponse);
     */
    listVehicles(input: ListVehiclesRequest, options?: RpcOptions): UnaryCall<ListVehiclesRequest, ListVehiclesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListVehiclesRequest, ListVehiclesResponse>("unary", this._transport, method, opt, input);
    }
}
