// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "services/citizens/citizens.proto" (package "services.citizens", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CitizensService } from "./citizens";
import type { ManageLabelsResponse } from "./citizens";
import type { ManageLabelsRequest } from "./citizens";
import type { DeleteMugshotResponse } from "./citizens";
import type { DeleteMugshotRequest } from "./citizens";
import type { DeleteAvatarResponse } from "./citizens";
import type { DeleteAvatarRequest } from "./citizens";
import type { UploadFileResponse } from "../../resources/file/filestore";
import type { UploadFileRequest } from "../../resources/file/filestore";
import type { ClientStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { SetUserPropsResponse } from "./citizens";
import type { SetUserPropsRequest } from "./citizens";
import type { ListUserActivityResponse } from "./citizens";
import type { ListUserActivityRequest } from "./citizens";
import type { GetUserResponse } from "./citizens";
import type { GetUserRequest } from "./citizens";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListCitizensResponse } from "./citizens";
import type { ListCitizensRequest } from "./citizens";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.citizens.CitizensService
 */
export interface ICitizensServiceClient {
    /**
     * @generated from protobuf rpc: ListCitizens
     */
    listCitizens(input: ListCitizensRequest, options?: RpcOptions): UnaryCall<ListCitizensRequest, ListCitizensResponse>;
    /**
     * @generated from protobuf rpc: GetUser
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse>;
    /**
     * @generated from protobuf rpc: ListUserActivity
     */
    listUserActivity(input: ListUserActivityRequest, options?: RpcOptions): UnaryCall<ListUserActivityRequest, ListUserActivityResponse>;
    /**
     * @generated from protobuf rpc: SetUserProps
     */
    setUserProps(input: SetUserPropsRequest, options?: RpcOptions): UnaryCall<SetUserPropsRequest, SetUserPropsResponse>;
    /**
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from protobuf rpc: UploadAvatar
     */
    uploadAvatar(options?: RpcOptions): ClientStreamingCall<UploadFileRequest, UploadFileResponse>;
    /**
     * @generated from protobuf rpc: DeleteAvatar
     */
    deleteAvatar(input: DeleteAvatarRequest, options?: RpcOptions): UnaryCall<DeleteAvatarRequest, DeleteAvatarResponse>;
    /**
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from protobuf rpc: UploadMugshot
     */
    uploadMugshot(options?: RpcOptions): ClientStreamingCall<UploadFileRequest, UploadFileResponse>;
    /**
     * @generated from protobuf rpc: DeleteMugshot
     */
    deleteMugshot(input: DeleteMugshotRequest, options?: RpcOptions): UnaryCall<DeleteMugshotRequest, DeleteMugshotResponse>;
    /**
     * @generated from protobuf rpc: ManageLabels
     */
    manageLabels(input: ManageLabelsRequest, options?: RpcOptions): UnaryCall<ManageLabelsRequest, ManageLabelsResponse>;
}
/**
 * @generated from protobuf service services.citizens.CitizensService
 */
export class CitizensServiceClient implements ICitizensServiceClient, ServiceInfo {
    typeName = CitizensService.typeName;
    methods = CitizensService.methods;
    options = CitizensService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: ListCitizens
     */
    listCitizens(input: ListCitizensRequest, options?: RpcOptions): UnaryCall<ListCitizensRequest, ListCitizensResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListCitizensRequest, ListCitizensResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUser
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, GetUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListUserActivity
     */
    listUserActivity(input: ListUserActivityRequest, options?: RpcOptions): UnaryCall<ListUserActivityRequest, ListUserActivityResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListUserActivityRequest, ListUserActivityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetUserProps
     */
    setUserProps(input: SetUserPropsRequest, options?: RpcOptions): UnaryCall<SetUserPropsRequest, SetUserPropsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetUserPropsRequest, SetUserPropsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from protobuf rpc: UploadAvatar
     */
    uploadAvatar(options?: RpcOptions): ClientStreamingCall<UploadFileRequest, UploadFileResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UploadFileRequest, UploadFileResponse>("clientStreaming", this._transport, method, opt);
    }
    /**
     * @generated from protobuf rpc: DeleteAvatar
     */
    deleteAvatar(input: DeleteAvatarRequest, options?: RpcOptions): UnaryCall<DeleteAvatarRequest, DeleteAvatarResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteAvatarRequest, DeleteAvatarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
     * buf:lint:ignore RPC_REQUEST_STANDARD_NAME
     * buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
     *
     * @generated from protobuf rpc: UploadMugshot
     */
    uploadMugshot(options?: RpcOptions): ClientStreamingCall<UploadFileRequest, UploadFileResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<UploadFileRequest, UploadFileResponse>("clientStreaming", this._transport, method, opt);
    }
    /**
     * @generated from protobuf rpc: DeleteMugshot
     */
    deleteMugshot(input: DeleteMugshotRequest, options?: RpcOptions): UnaryCall<DeleteMugshotRequest, DeleteMugshotResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteMugshotRequest, DeleteMugshotResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ManageLabels
     */
    manageLabels(input: ManageLabelsRequest, options?: RpcOptions): UnaryCall<ManageLabelsRequest, ManageLabelsResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<ManageLabelsRequest, ManageLabelsResponse>("unary", this._transport, method, opt, input);
    }
}
