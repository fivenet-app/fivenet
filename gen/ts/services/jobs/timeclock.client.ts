// @generated by protobuf-ts 2.11.0 with parameter optimize_speed,long_type_number,force_server_none
// @generated from protobuf file "services/jobs/timeclock.proto" (package "services.jobs", syntax proto3)
// @ts-nocheck
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TimeclockService } from "./timeclock";
import type { ListInactiveEmployeesResponse } from "./timeclock";
import type { ListInactiveEmployeesRequest } from "./timeclock";
import type { GetTimeclockStatsResponse } from "./timeclock";
import type { GetTimeclockStatsRequest } from "./timeclock";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ListTimeclockResponse } from "./timeclock";
import type { ListTimeclockRequest } from "./timeclock";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service services.jobs.TimeclockService
 */
export interface ITimeclockServiceClient {
    /**
     * @perm: Attrs=Access/StringList:[]string{"All"}
     *
     * @generated from protobuf rpc: ListTimeclock
     */
    listTimeclock(input: ListTimeclockRequest, options?: RpcOptions): UnaryCall<ListTimeclockRequest, ListTimeclockResponse>;
    /**
     * @perm: Name=ListTimeclock
     *
     * @generated from protobuf rpc: GetTimeclockStats
     */
    getTimeclockStats(input: GetTimeclockStatsRequest, options?: RpcOptions): UnaryCall<GetTimeclockStatsRequest, GetTimeclockStatsResponse>;
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListInactiveEmployees
     */
    listInactiveEmployees(input: ListInactiveEmployeesRequest, options?: RpcOptions): UnaryCall<ListInactiveEmployeesRequest, ListInactiveEmployeesResponse>;
}
/**
 * @generated from protobuf service services.jobs.TimeclockService
 */
export class TimeclockServiceClient implements ITimeclockServiceClient, ServiceInfo {
    typeName = TimeclockService.typeName;
    methods = TimeclockService.methods;
    options = TimeclockService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @perm: Attrs=Access/StringList:[]string{"All"}
     *
     * @generated from protobuf rpc: ListTimeclock
     */
    listTimeclock(input: ListTimeclockRequest, options?: RpcOptions): UnaryCall<ListTimeclockRequest, ListTimeclockResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTimeclockRequest, ListTimeclockResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm: Name=ListTimeclock
     *
     * @generated from protobuf rpc: GetTimeclockStats
     */
    getTimeclockStats(input: GetTimeclockStatsRequest, options?: RpcOptions): UnaryCall<GetTimeclockStatsRequest, GetTimeclockStatsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTimeclockStatsRequest, GetTimeclockStatsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @perm
     *
     * @generated from protobuf rpc: ListInactiveEmployees
     */
    listInactiveEmployees(input: ListInactiveEmployeesRequest, options?: RpcOptions): UnaryCall<ListInactiveEmployeesRequest, ListInactiveEmployeesResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListInactiveEmployeesRequest, ListInactiveEmployeesResponse>("unary", this._transport, method, opt, input);
    }
}
