// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "resources/userinfo/user_info.proto" (package "resources.userinfo", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.userinfo.UserInfo
 */
export interface UserInfo {
    /**
     * @generated from protobuf field: bool enabled = 1
     */
    enabled: boolean;
    /**
     * @generated from protobuf field: int64 account_id = 2
     */
    accountId: number;
    /**
     * @generated from protobuf field: string license = 3
     */
    license: string;
    /**
     * @generated from protobuf field: optional int32 last_char = 4
     */
    lastChar?: number;
    /**
     * @generated from protobuf field: int32 user_id = 5
     */
    userId: number;
    /**
     * @generated from protobuf field: string job = 6
     */
    job: string;
    /**
     * @generated from protobuf field: int32 job_grade = 7
     */
    jobGrade: number;
    /**
     * @generated from protobuf field: string group = 8
     */
    group: string;
    /**
     * @generated from protobuf field: bool can_be_superuser = 9
     */
    canBeSuperuser: boolean;
    /**
     * @generated from protobuf field: bool superuser = 10
     */
    superuser: boolean;
    /**
     * @generated from protobuf field: optional string override_job = 11
     */
    overrideJob?: string;
    /**
     * @generated from protobuf field: optional int32 override_job_grade = 12
     */
    overrideJobGrade?: number;
}
/**
 * PollReq: published to `userinfo.poll.request` when an active user connects or requests a refresh.
 *
 * @generated from protobuf message resources.userinfo.PollReq
 */
export interface PollReq {
    /**
     * The account the user belongs to
     *
     * @generated from protobuf field: int64 account_id = 1
     */
    accountId: number;
    /**
     * The unique user identifier within the account
     *
     * @generated from protobuf field: int32 user_id = 2
     */
    userId: number;
}
/**
 * UserInfoChanged used to signal Job or JobGrade changes.
 *
 * @generated from protobuf message resources.userinfo.UserInfoChanged
 */
export interface UserInfoChanged {
    /**
     * The account the user belongs to
     *
     * @generated from protobuf field: int64 account_id = 1
     */
    accountId: number;
    /**
     * The unique user identifier within the account
     *
     * @generated from protobuf field: int32 user_id = 2
     */
    userId: number;
    /**
     * Previous job title
     *
     * @generated from protobuf field: string old_job = 3
     */
    oldJob: string;
    /**
     * New job title
     *
     * @generated from protobuf field: optional string new_job = 4
     */
    newJob?: string;
    /**
     * @generated from protobuf field: optional string new_job_label = 5
     */
    newJobLabel?: string;
    /**
     * Previous job grade
     *
     * @generated from protobuf field: int32 old_job_grade = 6
     */
    oldJobGrade: number;
    /**
     * New job grade
     *
     * @generated from protobuf field: optional int32 new_job_grade = 7
     */
    newJobGrade?: number;
    /**
     * New job grade label
     *
     * @generated from protobuf field: optional string new_job_grade_label = 8
     */
    newJobGradeLabel?: string;
    /**
     * Superuser state
     *
     * @generated from protobuf field: optional bool superuser = 10
     */
    superuser?: boolean;
    /**
     * Timestamp of when the change was detected
     *
     * @generated from protobuf field: resources.timestamp.Timestamp changed_at = 9
     */
    changedAt?: Timestamp;
}
// @generated message type with reflection information, may provide speed optimized methods
class UserInfo$Type extends MessageType<UserInfo> {
    constructor() {
        super("resources.userinfo.UserInfo", [
            { no: 1, name: "enabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "account_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "license", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "last_char", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "job_grade", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "group", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "can_be_superuser", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "superuser", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "override_job", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "override_job_grade", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<UserInfo>): UserInfo {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.enabled = false;
        message.accountId = 0;
        message.license = "";
        message.userId = 0;
        message.job = "";
        message.jobGrade = 0;
        message.group = "";
        message.canBeSuperuser = false;
        message.superuser = false;
        if (value !== undefined)
            reflectionMergePartial<UserInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserInfo): UserInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool enabled */ 1:
                    message.enabled = reader.bool();
                    break;
                case /* int64 account_id */ 2:
                    message.accountId = reader.int64().toNumber();
                    break;
                case /* string license */ 3:
                    message.license = reader.string();
                    break;
                case /* optional int32 last_char */ 4:
                    message.lastChar = reader.int32();
                    break;
                case /* int32 user_id */ 5:
                    message.userId = reader.int32();
                    break;
                case /* string job */ 6:
                    message.job = reader.string();
                    break;
                case /* int32 job_grade */ 7:
                    message.jobGrade = reader.int32();
                    break;
                case /* string group */ 8:
                    message.group = reader.string();
                    break;
                case /* bool can_be_superuser */ 9:
                    message.canBeSuperuser = reader.bool();
                    break;
                case /* bool superuser */ 10:
                    message.superuser = reader.bool();
                    break;
                case /* optional string override_job */ 11:
                    message.overrideJob = reader.string();
                    break;
                case /* optional int32 override_job_grade */ 12:
                    message.overrideJobGrade = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool enabled = 1; */
        if (message.enabled !== false)
            writer.tag(1, WireType.Varint).bool(message.enabled);
        /* int64 account_id = 2; */
        if (message.accountId !== 0)
            writer.tag(2, WireType.Varint).int64(message.accountId);
        /* string license = 3; */
        if (message.license !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.license);
        /* optional int32 last_char = 4; */
        if (message.lastChar !== undefined)
            writer.tag(4, WireType.Varint).int32(message.lastChar);
        /* int32 user_id = 5; */
        if (message.userId !== 0)
            writer.tag(5, WireType.Varint).int32(message.userId);
        /* string job = 6; */
        if (message.job !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.job);
        /* int32 job_grade = 7; */
        if (message.jobGrade !== 0)
            writer.tag(7, WireType.Varint).int32(message.jobGrade);
        /* string group = 8; */
        if (message.group !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.group);
        /* bool can_be_superuser = 9; */
        if (message.canBeSuperuser !== false)
            writer.tag(9, WireType.Varint).bool(message.canBeSuperuser);
        /* bool superuser = 10; */
        if (message.superuser !== false)
            writer.tag(10, WireType.Varint).bool(message.superuser);
        /* optional string override_job = 11; */
        if (message.overrideJob !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.overrideJob);
        /* optional int32 override_job_grade = 12; */
        if (message.overrideJobGrade !== undefined)
            writer.tag(12, WireType.Varint).int32(message.overrideJobGrade);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.userinfo.UserInfo
 */
export const UserInfo = new UserInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PollReq$Type extends MessageType<PollReq> {
    constructor() {
        super("resources.userinfo.PollReq", [
            { no: 1, name: "account_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PollReq>): PollReq {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.accountId = 0;
        message.userId = 0;
        if (value !== undefined)
            reflectionMergePartial<PollReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PollReq): PollReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 account_id */ 1:
                    message.accountId = reader.int64().toNumber();
                    break;
                case /* int32 user_id */ 2:
                    message.userId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PollReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 account_id = 1; */
        if (message.accountId !== 0)
            writer.tag(1, WireType.Varint).int64(message.accountId);
        /* int32 user_id = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).int32(message.userId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.userinfo.PollReq
 */
export const PollReq = new PollReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserInfoChanged$Type extends MessageType<UserInfoChanged> {
    constructor() {
        super("resources.userinfo.UserInfoChanged", [
            { no: 1, name: "account_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "old_job", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "new_job", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "new_job_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "old_job_grade", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "new_job_grade", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "new_job_grade_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "superuser", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "changed_at", kind: "message", T: () => Timestamp }
        ]);
    }
    create(value?: PartialMessage<UserInfoChanged>): UserInfoChanged {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.accountId = 0;
        message.userId = 0;
        message.oldJob = "";
        message.oldJobGrade = 0;
        if (value !== undefined)
            reflectionMergePartial<UserInfoChanged>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UserInfoChanged): UserInfoChanged {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 account_id */ 1:
                    message.accountId = reader.int64().toNumber();
                    break;
                case /* int32 user_id */ 2:
                    message.userId = reader.int32();
                    break;
                case /* string old_job */ 3:
                    message.oldJob = reader.string();
                    break;
                case /* optional string new_job */ 4:
                    message.newJob = reader.string();
                    break;
                case /* optional string new_job_label */ 5:
                    message.newJobLabel = reader.string();
                    break;
                case /* int32 old_job_grade */ 6:
                    message.oldJobGrade = reader.int32();
                    break;
                case /* optional int32 new_job_grade */ 7:
                    message.newJobGrade = reader.int32();
                    break;
                case /* optional string new_job_grade_label */ 8:
                    message.newJobGradeLabel = reader.string();
                    break;
                case /* optional bool superuser */ 10:
                    message.superuser = reader.bool();
                    break;
                case /* resources.timestamp.Timestamp changed_at */ 9:
                    message.changedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.changedAt);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UserInfoChanged, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 account_id = 1; */
        if (message.accountId !== 0)
            writer.tag(1, WireType.Varint).int64(message.accountId);
        /* int32 user_id = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).int32(message.userId);
        /* string old_job = 3; */
        if (message.oldJob !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.oldJob);
        /* optional string new_job = 4; */
        if (message.newJob !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.newJob);
        /* optional string new_job_label = 5; */
        if (message.newJobLabel !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.newJobLabel);
        /* int32 old_job_grade = 6; */
        if (message.oldJobGrade !== 0)
            writer.tag(6, WireType.Varint).int32(message.oldJobGrade);
        /* optional int32 new_job_grade = 7; */
        if (message.newJobGrade !== undefined)
            writer.tag(7, WireType.Varint).int32(message.newJobGrade);
        /* optional string new_job_grade_label = 8; */
        if (message.newJobGradeLabel !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.newJobGradeLabel);
        /* resources.timestamp.Timestamp changed_at = 9; */
        if (message.changedAt)
            Timestamp.internalBinaryWrite(message.changedAt, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional bool superuser = 10; */
        if (message.superuser !== undefined)
            writer.tag(10, WireType.Varint).bool(message.superuser);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.userinfo.UserInfoChanged
 */
export const UserInfoChanged = new UserInfoChanged$Type();
