// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "resources/mailer/events.proto" (package "resources.mailer", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Message } from "./message";
import { ThreadState } from "./thread";
import { Thread } from "./thread";
import { EmailSettings } from "./settings";
import { Email } from "./email";
/**
 * @generated from protobuf message resources.mailer.MailerEvent
 */
export interface MailerEvent {
    /**
     * @generated from protobuf oneof: data
     */
    data: {
        oneofKind: "emailUpdate";
        /**
         * @generated from protobuf field: resources.mailer.Email email_update = 1
         */
        emailUpdate: Email;
    } | {
        oneofKind: "emailDelete";
        /**
         * @generated from protobuf field: uint64 email_delete = 2
         */
        emailDelete: number;
    } | {
        oneofKind: "emailSettingsUpdated";
        /**
         * @generated from protobuf field: resources.mailer.EmailSettings email_settings_updated = 3
         */
        emailSettingsUpdated: EmailSettings;
    } | {
        oneofKind: "threadUpdate";
        /**
         * @generated from protobuf field: resources.mailer.Thread thread_update = 4
         */
        threadUpdate: Thread;
    } | {
        oneofKind: "threadDelete";
        /**
         * @generated from protobuf field: uint64 thread_delete = 5
         */
        threadDelete: number;
    } | {
        oneofKind: "threadStateUpdate";
        /**
         * @generated from protobuf field: resources.mailer.ThreadState thread_state_update = 6
         */
        threadStateUpdate: ThreadState;
    } | {
        oneofKind: "messageUpdate";
        /**
         * @generated from protobuf field: resources.mailer.Message message_update = 7
         */
        messageUpdate: Message;
    } | {
        oneofKind: "messageDelete";
        /**
         * @generated from protobuf field: uint64 message_delete = 8
         */
        messageDelete: number;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class MailerEvent$Type extends MessageType<MailerEvent> {
    constructor() {
        super("resources.mailer.MailerEvent", [
            { no: 1, name: "email_update", kind: "message", oneof: "data", T: () => Email },
            { no: 2, name: "email_delete", kind: "scalar", oneof: "data", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 3, name: "email_settings_updated", kind: "message", oneof: "data", T: () => EmailSettings },
            { no: 4, name: "thread_update", kind: "message", oneof: "data", T: () => Thread },
            { no: 5, name: "thread_delete", kind: "scalar", oneof: "data", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "thread_state_update", kind: "message", oneof: "data", T: () => ThreadState },
            { no: 7, name: "message_update", kind: "message", oneof: "data", T: () => Message },
            { no: 8, name: "message_delete", kind: "scalar", oneof: "data", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<MailerEvent>): MailerEvent {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.data = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<MailerEvent>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MailerEvent): MailerEvent {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* resources.mailer.Email email_update */ 1:
                    message.data = {
                        oneofKind: "emailUpdate",
                        emailUpdate: Email.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).emailUpdate)
                    };
                    break;
                case /* uint64 email_delete */ 2:
                    message.data = {
                        oneofKind: "emailDelete",
                        emailDelete: reader.uint64().toNumber()
                    };
                    break;
                case /* resources.mailer.EmailSettings email_settings_updated */ 3:
                    message.data = {
                        oneofKind: "emailSettingsUpdated",
                        emailSettingsUpdated: EmailSettings.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).emailSettingsUpdated)
                    };
                    break;
                case /* resources.mailer.Thread thread_update */ 4:
                    message.data = {
                        oneofKind: "threadUpdate",
                        threadUpdate: Thread.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).threadUpdate)
                    };
                    break;
                case /* uint64 thread_delete */ 5:
                    message.data = {
                        oneofKind: "threadDelete",
                        threadDelete: reader.uint64().toNumber()
                    };
                    break;
                case /* resources.mailer.ThreadState thread_state_update */ 6:
                    message.data = {
                        oneofKind: "threadStateUpdate",
                        threadStateUpdate: ThreadState.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).threadStateUpdate)
                    };
                    break;
                case /* resources.mailer.Message message_update */ 7:
                    message.data = {
                        oneofKind: "messageUpdate",
                        messageUpdate: Message.internalBinaryRead(reader, reader.uint32(), options, (message.data as any).messageUpdate)
                    };
                    break;
                case /* uint64 message_delete */ 8:
                    message.data = {
                        oneofKind: "messageDelete",
                        messageDelete: reader.uint64().toNumber()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MailerEvent, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* resources.mailer.Email email_update = 1; */
        if (message.data.oneofKind === "emailUpdate")
            Email.internalBinaryWrite(message.data.emailUpdate, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* uint64 email_delete = 2; */
        if (message.data.oneofKind === "emailDelete")
            writer.tag(2, WireType.Varint).uint64(message.data.emailDelete);
        /* resources.mailer.EmailSettings email_settings_updated = 3; */
        if (message.data.oneofKind === "emailSettingsUpdated")
            EmailSettings.internalBinaryWrite(message.data.emailSettingsUpdated, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* resources.mailer.Thread thread_update = 4; */
        if (message.data.oneofKind === "threadUpdate")
            Thread.internalBinaryWrite(message.data.threadUpdate, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* uint64 thread_delete = 5; */
        if (message.data.oneofKind === "threadDelete")
            writer.tag(5, WireType.Varint).uint64(message.data.threadDelete);
        /* resources.mailer.ThreadState thread_state_update = 6; */
        if (message.data.oneofKind === "threadStateUpdate")
            ThreadState.internalBinaryWrite(message.data.threadStateUpdate, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* resources.mailer.Message message_update = 7; */
        if (message.data.oneofKind === "messageUpdate")
            Message.internalBinaryWrite(message.data.messageUpdate, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* uint64 message_delete = 8; */
        if (message.data.oneofKind === "messageDelete")
            writer.tag(8, WireType.Varint).uint64(message.data.messageDelete);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.mailer.MailerEvent
 */
export const MailerEvent = new MailerEvent$Type();
