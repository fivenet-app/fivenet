// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "resources/documents/documents.proto" (package "resources.documents", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Workflow } from "./workflow";
import { File } from "../file/file";
import { DocumentPin } from "./pins";
import { UserShort } from "../users/users";
import { Content } from "../common/content/content";
import { ContentType } from "../common/content/content";
import { Category } from "./category";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.documents.Document
 */
export interface Document {
    /**
     * @generated from protobuf field: int64 id = 1
     */
    id: number;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp created_at = 2
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 4
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional int64 category_id = 5
     */
    categoryId?: number;
    /**
     * @generated from protobuf field: optional resources.documents.Category category = 6
     */
    category?: Category;
    /**
     * @generated from protobuf field: string title = 7
     */
    title: string;
    /**
     * @generated from protobuf field: resources.common.content.ContentType content_type = 8
     */
    contentType: ContentType;
    /**
     * @generated from protobuf field: resources.common.content.Content content = 9
     */
    content?: Content;
    /**
     * @generated from protobuf field: optional string data = 10
     */
    data?: string;
    /**
     * @generated from protobuf field: optional int32 creator_id = 11
     */
    creatorId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 12
     */
    creator?: UserShort;
    /**
     * @generated from protobuf field: string creator_job = 13
     */
    creatorJob: string;
    /**
     * @generated from protobuf field: optional string creator_job_label = 14
     */
    creatorJobLabel?: string;
    /**
     * @generated from protobuf field: resources.documents.DocumentMeta meta = 15
     */
    meta?: DocumentMeta;
    /**
     * @generated from protobuf field: optional int64 template_id = 16
     */
    templateId?: number;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentPin pin = 17
     */
    pin?: DocumentPin;
    /**
     * @generated from protobuf field: optional resources.documents.WorkflowState workflow_state = 18
     */
    workflowState?: WorkflowState;
    /**
     * @generated from protobuf field: optional resources.documents.WorkflowUserState workflow_user = 19
     */
    workflowUser?: WorkflowUserState;
    /**
     * @generated from protobuf field: repeated resources.file.File files = 20
     */
    files: File[];
}
/**
 * @generated from protobuf message resources.documents.DocumentShort
 */
export interface DocumentShort {
    /**
     * @generated from protobuf field: int64 id = 1
     */
    id: number;
    /**
     * @generated from protobuf field: resources.timestamp.Timestamp created_at = 2
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp updated_at = 3
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 4
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional int64 category_id = 5
     */
    categoryId?: number;
    /**
     * @generated from protobuf field: optional resources.documents.Category category = 6
     */
    category?: Category;
    /**
     * @generated from protobuf field: string title = 7
     */
    title: string;
    /**
     * @generated from protobuf field: resources.common.content.ContentType content_type = 8
     */
    contentType: ContentType;
    /**
     * @generated from protobuf field: resources.common.content.Content content = 9
     */
    content?: Content;
    /**
     * @generated from protobuf field: optional int32 creator_id = 11
     */
    creatorId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 12
     */
    creator?: UserShort;
    /**
     * @generated from protobuf field: string creator_job = 13
     */
    creatorJob: string;
    /**
     * @generated from protobuf field: optional string creator_job_label = 14
     */
    creatorJobLabel?: string;
    /**
     * @generated from protobuf field: resources.documents.DocumentMeta meta = 15
     */
    meta?: DocumentMeta;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentPin pin = 17
     */
    pin?: DocumentPin;
    /**
     * @generated from protobuf field: optional resources.documents.WorkflowState workflow_state = 18
     */
    workflowState?: WorkflowState;
    /**
     * @generated from protobuf field: optional resources.documents.WorkflowUserState workflow_user = 19
     */
    workflowUser?: WorkflowUserState;
}
/**
 * @generated from protobuf message resources.documents.DocumentMeta
 */
export interface DocumentMeta {
    /**
     * @generated from protobuf field: int64 document_id = 1
     */
    documentId: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp recomputed_at = 2
     */
    recomputedAt?: Timestamp;
    /**
     * @generated from protobuf field: bool closed = 3
     */
    closed: boolean;
    /**
     * @generated from protobuf field: bool draft = 4
     */
    draft: boolean;
    /**
     * @generated from protobuf field: bool public = 5
     */
    public: boolean;
    /**
     * @generated from protobuf field: string state = 6
     */
    state: string;
    /**
     * Overall aggregates - At least one approval policy fully satisfied
     *
     * @generated from protobuf field: optional bool approved = 7
     */
    approved?: boolean;
    /**
     * @generated from protobuf field: optional bool signed = 8
     */
    signed?: boolean;
    // Signature rollups

    /**
     * How many signatures still needed to satisfy all policies
     *
     * @generated from protobuf field: optional int32 sig_required_remaining = 9
     */
    sigRequiredRemaining?: number;
    /**
     * Total signatures needed across policies
     *
     * @generated from protobuf field: optional int32 sig_required_total = 10
     */
    sigRequiredTotal?: number;
    /**
     * Signatures collected
     *
     * @generated from protobuf field: optional int32 sig_collected_valid = 11
     */
    sigCollectedValid?: number;
    /**
     * Number of active signature policies
     *
     * @generated from protobuf field: optional int32 sig_policies_active = 12
     */
    sigPoliciesActive?: number;
    // Approval rollups

    /**
     * Total approvals needed across policies
     *
     * @generated from protobuf field: optional int32 ap_required_total = 13
     */
    apRequiredTotal?: number;
    /**
     * Approvals collected
     *
     * @generated from protobuf field: optional int32 ap_collected_approved = 14
     */
    apCollectedApproved?: number;
    /**
     * How many left to satisfy
     *
     * @generated from protobuf field: optional int32 ap_required_remaining = 15
     */
    apRequiredRemaining?: number;
    /**
     * Number of declines
     *
     * @generated from protobuf field: optional int32 ap_declined_count = 16
     */
    apDeclinedCount?: number;
    /**
     * Tasks still pending (optional)
     *
     * @generated from protobuf field: optional int32 ap_pending_count = 17
     */
    apPendingCount?: number;
    /**
     * Quick flag if any declines
     *
     * @generated from protobuf field: optional bool ap_any_declined = 18
     */
    apAnyDeclined?: boolean;
    /**
     * Number of active approval policies
     *
     * @generated from protobuf field: optional int32 ap_policies_active = 19
     */
    apPoliciesActive?: number;
}
/**
 * @generated from protobuf message resources.documents.DocumentReference
 */
export interface DocumentReference {
    /**
     * @generated from protobuf field: optional int64 id = 1
     */
    id?: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: int64 source_document_id = 3
     */
    sourceDocumentId: number;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort source_document = 4
     */
    sourceDocument?: DocumentShort;
    /**
     * @generated from protobuf field: resources.documents.DocReference reference = 5
     */
    reference: DocReference;
    /**
     * @generated from protobuf field: int64 target_document_id = 6
     */
    targetDocumentId: number;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort target_document = 7
     */
    targetDocument?: DocumentShort;
    /**
     * @generated from protobuf field: optional int32 creator_id = 8
     */
    creatorId?: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort creator = 9
     */
    creator?: UserShort;
}
/**
 * @generated from protobuf message resources.documents.DocumentRelation
 */
export interface DocumentRelation {
    /**
     * @generated from protobuf field: optional int64 id = 1
     */
    id?: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp created_at = 2
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: int64 document_id = 3
     */
    documentId: number;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort document = 4
     */
    document?: DocumentShort;
    /**
     * @generated from protobuf field: int32 source_user_id = 5
     */
    sourceUserId: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort source_user = 6
     */
    sourceUser?: UserShort;
    /**
     * @generated from protobuf field: resources.documents.DocRelation relation = 7
     */
    relation: DocRelation;
    /**
     * @generated from protobuf field: int32 target_user_id = 8
     */
    targetUserId: number;
    /**
     * @generated from protobuf field: optional resources.users.UserShort target_user = 9
     */
    targetUser?: UserShort;
}
/**
 * @generated from protobuf message resources.documents.WorkflowState
 */
export interface WorkflowState {
    /**
     * @generated from protobuf field: int64 document_id = 1
     */
    documentId: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp next_reminder_time = 2
     */
    nextReminderTime?: Timestamp;
    /**
     * @generated from protobuf field: optional int32 next_reminder_count = 3
     */
    nextReminderCount?: number;
    /**
     * @generated from protobuf field: int32 reminder_count = 5
     */
    reminderCount: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp auto_close_time = 4
     */
    autoCloseTime?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.documents.Workflow workflow = 6
     */
    workflow?: Workflow;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort document = 7
     */
    document?: DocumentShort;
}
/**
 * @generated from protobuf message resources.documents.WorkflowUserState
 */
export interface WorkflowUserState {
    /**
     * @generated from protobuf field: int64 document_id = 1
     */
    documentId: number;
    /**
     * @generated from protobuf field: int32 user_id = 2
     */
    userId: number;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp manual_reminder_time = 3
     */
    manualReminderTime?: Timestamp;
    /**
     * @generated from protobuf field: optional string manual_reminder_message = 4
     */
    manualReminderMessage?: string;
    /**
     * @generated from protobuf field: int32 reminder_count = 5
     */
    reminderCount: number;
    /**
     * @generated from protobuf field: int32 max_reminder_count = 6
     */
    maxReminderCount: number;
    /**
     * @generated from protobuf field: optional resources.documents.Workflow workflow = 7
     */
    workflow?: Workflow;
    /**
     * @generated from protobuf field: optional resources.documents.DocumentShort document = 8
     */
    document?: DocumentShort;
}
/**
 * @generated from protobuf enum resources.documents.DocReference
 */
export enum DocReference {
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_LINKED = 1;
     */
    LINKED = 1,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_SOLVES = 2;
     */
    SOLVES = 2,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_CLOSES = 3;
     */
    CLOSES = 3,
    /**
     * @generated from protobuf enum value: DOC_REFERENCE_DEPRECATES = 4;
     */
    DEPRECATES = 4
}
/**
 * @generated from protobuf enum resources.documents.DocRelation
 */
export enum DocRelation {
    /**
     * @generated from protobuf enum value: DOC_RELATION_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: DOC_RELATION_MENTIONED = 1;
     */
    MENTIONED = 1,
    /**
     * @generated from protobuf enum value: DOC_RELATION_TARGETS = 2;
     */
    TARGETS = 2,
    /**
     * @generated from protobuf enum value: DOC_RELATION_CAUSED = 3;
     */
    CAUSED = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class Document$Type extends MessageType<Document> {
    constructor() {
        super("resources.documents.Document", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "category_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "category", kind: "message", T: () => Category, options: { "tagger.tags": "alias:\"category\"" } },
            { no: 7, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { minLen: "3", maxLen: "512" } }, "codegen.sanitizer.sanitizer": { enabled: true, method: "StripTags" } } },
            { no: 8, name: "content_type", kind: "enum", T: () => ["resources.common.content.ContentType", ContentType, "CONTENT_TYPE_"], options: { "buf.validate.field": { enum: { definedOnly: true } } } },
            { no: 9, name: "content", kind: "message", T: () => Content },
            { no: 10, name: "data", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxBytes: "1000000" } }, "codegen.sanitizer.sanitizer": { enabled: true }, "tagger.tags": "alias:\"data\"" } },
            { no: 11, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } } } },
            { no: 12, name: "creator", kind: "message", T: () => UserShort, options: { "tagger.tags": "alias:\"creator\"" } },
            { no: 13, name: "creator_job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "20" } } } },
            { no: 14, name: "creator_job_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "50" } } } },
            { no: 15, name: "meta", kind: "message", T: () => DocumentMeta, options: { "tagger.tags": "alias:\"meta\"" } },
            { no: 16, name: "template_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 17, name: "pin", kind: "message", T: () => DocumentPin, options: { "tagger.tags": "alias:\"pin\"" } },
            { no: 18, name: "workflow_state", kind: "message", T: () => WorkflowState },
            { no: 19, name: "workflow_user", kind: "message", T: () => WorkflowUserState },
            { no: 20, name: "files", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => File, options: { "tagger.tags": "alias:\"files\"" } }
        ]);
    }
    create(value?: PartialMessage<Document>): Document {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = 0;
        message.title = "";
        message.contentType = 0;
        message.creatorJob = "";
        message.files = [];
        if (value !== undefined)
            reflectionMergePartial<Document>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Document): Document {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toNumber();
                    break;
                case /* resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional resources.timestamp.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional int64 category_id */ 5:
                    message.categoryId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.Category category */ 6:
                    message.category = Category.internalBinaryRead(reader, reader.uint32(), options, message.category);
                    break;
                case /* string title */ 7:
                    message.title = reader.string();
                    break;
                case /* resources.common.content.ContentType content_type */ 8:
                    message.contentType = reader.int32();
                    break;
                case /* resources.common.content.Content content */ 9:
                    message.content = Content.internalBinaryRead(reader, reader.uint32(), options, message.content);
                    break;
                case /* optional string data */ 10:
                    message.data = reader.string();
                    break;
                case /* optional int32 creator_id */ 11:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 12:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                case /* string creator_job */ 13:
                    message.creatorJob = reader.string();
                    break;
                case /* optional string creator_job_label */ 14:
                    message.creatorJobLabel = reader.string();
                    break;
                case /* resources.documents.DocumentMeta meta */ 15:
                    message.meta = DocumentMeta.internalBinaryRead(reader, reader.uint32(), options, message.meta);
                    break;
                case /* optional int64 template_id */ 16:
                    message.templateId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.DocumentPin pin */ 17:
                    message.pin = DocumentPin.internalBinaryRead(reader, reader.uint32(), options, message.pin);
                    break;
                case /* optional resources.documents.WorkflowState workflow_state */ 18:
                    message.workflowState = WorkflowState.internalBinaryRead(reader, reader.uint32(), options, message.workflowState);
                    break;
                case /* optional resources.documents.WorkflowUserState workflow_user */ 19:
                    message.workflowUser = WorkflowUserState.internalBinaryRead(reader, reader.uint32(), options, message.workflowUser);
                    break;
                case /* repeated resources.file.File files */ 20:
                    message.files.push(File.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Document, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional int64 category_id = 5; */
        if (message.categoryId !== undefined)
            writer.tag(5, WireType.Varint).int64(message.categoryId);
        /* optional resources.documents.Category category = 6; */
        if (message.category)
            Category.internalBinaryWrite(message.category, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string title = 7; */
        if (message.title !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.title);
        /* resources.common.content.ContentType content_type = 8; */
        if (message.contentType !== 0)
            writer.tag(8, WireType.Varint).int32(message.contentType);
        /* resources.common.content.Content content = 9; */
        if (message.content)
            Content.internalBinaryWrite(message.content, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional string data = 10; */
        if (message.data !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.data);
        /* optional int32 creator_id = 11; */
        if (message.creatorId !== undefined)
            writer.tag(11, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 12; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string creator_job = 13; */
        if (message.creatorJob !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.creatorJob);
        /* optional string creator_job_label = 14; */
        if (message.creatorJobLabel !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.creatorJobLabel);
        /* resources.documents.DocumentMeta meta = 15; */
        if (message.meta)
            DocumentMeta.internalBinaryWrite(message.meta, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional int64 template_id = 16; */
        if (message.templateId !== undefined)
            writer.tag(16, WireType.Varint).int64(message.templateId);
        /* optional resources.documents.DocumentPin pin = 17; */
        if (message.pin)
            DocumentPin.internalBinaryWrite(message.pin, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.WorkflowState workflow_state = 18; */
        if (message.workflowState)
            WorkflowState.internalBinaryWrite(message.workflowState, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.WorkflowUserState workflow_user = 19; */
        if (message.workflowUser)
            WorkflowUserState.internalBinaryWrite(message.workflowUser, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* repeated resources.file.File files = 20; */
        for (let i = 0; i < message.files.length; i++)
            File.internalBinaryWrite(message.files[i], writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.Document
 */
export const Document = new Document$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentShort$Type extends MessageType<DocumentShort> {
    constructor() {
        super("resources.documents.DocumentShort", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "category_id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 6, name: "category", kind: "message", T: () => Category, options: { "tagger.tags": "alias:\"category\"" } },
            { no: 7, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { minLen: "3", maxLen: "512" } }, "codegen.sanitizer.sanitizer": { enabled: true, method: "StripTags" } } },
            { no: 8, name: "content_type", kind: "enum", T: () => ["resources.common.content.ContentType", ContentType, "CONTENT_TYPE_"], options: { "buf.validate.field": { enum: { definedOnly: true } } } },
            { no: 9, name: "content", kind: "message", T: () => Content },
            { no: 11, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } } } },
            { no: 12, name: "creator", kind: "message", T: () => UserShort, options: { "tagger.tags": "alias:\"creator\"" } },
            { no: 13, name: "creator_job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "20" } } } },
            { no: 14, name: "creator_job_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "50" } } } },
            { no: 15, name: "meta", kind: "message", T: () => DocumentMeta, options: { "tagger.tags": "alias:\"meta\"" } },
            { no: 17, name: "pin", kind: "message", T: () => DocumentPin, options: { "tagger.tags": "alias:\"pin\"" } },
            { no: 18, name: "workflow_state", kind: "message", T: () => WorkflowState },
            { no: 19, name: "workflow_user", kind: "message", T: () => WorkflowUserState }
        ]);
    }
    create(value?: PartialMessage<DocumentShort>): DocumentShort {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = 0;
        message.title = "";
        message.contentType = 0;
        message.creatorJob = "";
        if (value !== undefined)
            reflectionMergePartial<DocumentShort>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentShort): DocumentShort {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toNumber();
                    break;
                case /* resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* optional resources.timestamp.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 4:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional int64 category_id */ 5:
                    message.categoryId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.Category category */ 6:
                    message.category = Category.internalBinaryRead(reader, reader.uint32(), options, message.category);
                    break;
                case /* string title */ 7:
                    message.title = reader.string();
                    break;
                case /* resources.common.content.ContentType content_type */ 8:
                    message.contentType = reader.int32();
                    break;
                case /* resources.common.content.Content content */ 9:
                    message.content = Content.internalBinaryRead(reader, reader.uint32(), options, message.content);
                    break;
                case /* optional int32 creator_id */ 11:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 12:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                case /* string creator_job */ 13:
                    message.creatorJob = reader.string();
                    break;
                case /* optional string creator_job_label */ 14:
                    message.creatorJobLabel = reader.string();
                    break;
                case /* resources.documents.DocumentMeta meta */ 15:
                    message.meta = DocumentMeta.internalBinaryRead(reader, reader.uint32(), options, message.meta);
                    break;
                case /* optional resources.documents.DocumentPin pin */ 17:
                    message.pin = DocumentPin.internalBinaryRead(reader, reader.uint32(), options, message.pin);
                    break;
                case /* optional resources.documents.WorkflowState workflow_state */ 18:
                    message.workflowState = WorkflowState.internalBinaryRead(reader, reader.uint32(), options, message.workflowState);
                    break;
                case /* optional resources.documents.WorkflowUserState workflow_user */ 19:
                    message.workflowUser = WorkflowUserState.internalBinaryRead(reader, reader.uint32(), options, message.workflowUser);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentShort, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp deleted_at = 4; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional int64 category_id = 5; */
        if (message.categoryId !== undefined)
            writer.tag(5, WireType.Varint).int64(message.categoryId);
        /* optional resources.documents.Category category = 6; */
        if (message.category)
            Category.internalBinaryWrite(message.category, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string title = 7; */
        if (message.title !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.title);
        /* resources.common.content.ContentType content_type = 8; */
        if (message.contentType !== 0)
            writer.tag(8, WireType.Varint).int32(message.contentType);
        /* resources.common.content.Content content = 9; */
        if (message.content)
            Content.internalBinaryWrite(message.content, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 creator_id = 11; */
        if (message.creatorId !== undefined)
            writer.tag(11, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 12; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* string creator_job = 13; */
        if (message.creatorJob !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.creatorJob);
        /* optional string creator_job_label = 14; */
        if (message.creatorJobLabel !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.creatorJobLabel);
        /* resources.documents.DocumentMeta meta = 15; */
        if (message.meta)
            DocumentMeta.internalBinaryWrite(message.meta, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.DocumentPin pin = 17; */
        if (message.pin)
            DocumentPin.internalBinaryWrite(message.pin, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.WorkflowState workflow_state = 18; */
        if (message.workflowState)
            WorkflowState.internalBinaryWrite(message.workflowState, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.WorkflowUserState workflow_user = 19; */
        if (message.workflowUser)
            WorkflowUserState.internalBinaryWrite(message.workflowUser, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentShort
 */
export const DocumentShort = new DocumentShort$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentMeta$Type extends MessageType<DocumentMeta> {
    constructor() {
        super("resources.documents.DocumentMeta", [
            { no: 1, name: "document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "recomputed_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "draft", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "public", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "state", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "32" } }, "codegen.sanitizer.sanitizer": { enabled: true } } },
            { no: 7, name: "approved", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "signed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "sig_required_remaining", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "sig_required_total", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "sig_collected_valid", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "sig_policies_active", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "ap_required_total", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "ap_collected_approved", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "ap_required_remaining", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 16, name: "ap_declined_count", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 17, name: "ap_pending_count", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "ap_any_declined", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 19, name: "ap_policies_active", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<DocumentMeta>): DocumentMeta {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentId = 0;
        message.closed = false;
        message.draft = false;
        message.public = false;
        message.state = "";
        if (value !== undefined)
            reflectionMergePartial<DocumentMeta>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentMeta): DocumentMeta {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 document_id */ 1:
                    message.documentId = reader.int64().toNumber();
                    break;
                case /* optional resources.timestamp.Timestamp recomputed_at */ 2:
                    message.recomputedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.recomputedAt);
                    break;
                case /* bool closed */ 3:
                    message.closed = reader.bool();
                    break;
                case /* bool draft */ 4:
                    message.draft = reader.bool();
                    break;
                case /* bool public */ 5:
                    message.public = reader.bool();
                    break;
                case /* string state */ 6:
                    message.state = reader.string();
                    break;
                case /* optional bool approved */ 7:
                    message.approved = reader.bool();
                    break;
                case /* optional bool signed */ 8:
                    message.signed = reader.bool();
                    break;
                case /* optional int32 sig_required_remaining */ 9:
                    message.sigRequiredRemaining = reader.int32();
                    break;
                case /* optional int32 sig_required_total */ 10:
                    message.sigRequiredTotal = reader.int32();
                    break;
                case /* optional int32 sig_collected_valid */ 11:
                    message.sigCollectedValid = reader.int32();
                    break;
                case /* optional int32 sig_policies_active */ 12:
                    message.sigPoliciesActive = reader.int32();
                    break;
                case /* optional int32 ap_required_total */ 13:
                    message.apRequiredTotal = reader.int32();
                    break;
                case /* optional int32 ap_collected_approved */ 14:
                    message.apCollectedApproved = reader.int32();
                    break;
                case /* optional int32 ap_required_remaining */ 15:
                    message.apRequiredRemaining = reader.int32();
                    break;
                case /* optional int32 ap_declined_count */ 16:
                    message.apDeclinedCount = reader.int32();
                    break;
                case /* optional int32 ap_pending_count */ 17:
                    message.apPendingCount = reader.int32();
                    break;
                case /* optional bool ap_any_declined */ 18:
                    message.apAnyDeclined = reader.bool();
                    break;
                case /* optional int32 ap_policies_active */ 19:
                    message.apPoliciesActive = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentMeta, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 document_id = 1; */
        if (message.documentId !== 0)
            writer.tag(1, WireType.Varint).int64(message.documentId);
        /* optional resources.timestamp.Timestamp recomputed_at = 2; */
        if (message.recomputedAt)
            Timestamp.internalBinaryWrite(message.recomputedAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool closed = 3; */
        if (message.closed !== false)
            writer.tag(3, WireType.Varint).bool(message.closed);
        /* bool draft = 4; */
        if (message.draft !== false)
            writer.tag(4, WireType.Varint).bool(message.draft);
        /* bool public = 5; */
        if (message.public !== false)
            writer.tag(5, WireType.Varint).bool(message.public);
        /* string state = 6; */
        if (message.state !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.state);
        /* optional bool approved = 7; */
        if (message.approved !== undefined)
            writer.tag(7, WireType.Varint).bool(message.approved);
        /* optional bool signed = 8; */
        if (message.signed !== undefined)
            writer.tag(8, WireType.Varint).bool(message.signed);
        /* optional int32 sig_required_remaining = 9; */
        if (message.sigRequiredRemaining !== undefined)
            writer.tag(9, WireType.Varint).int32(message.sigRequiredRemaining);
        /* optional int32 sig_required_total = 10; */
        if (message.sigRequiredTotal !== undefined)
            writer.tag(10, WireType.Varint).int32(message.sigRequiredTotal);
        /* optional int32 sig_collected_valid = 11; */
        if (message.sigCollectedValid !== undefined)
            writer.tag(11, WireType.Varint).int32(message.sigCollectedValid);
        /* optional int32 sig_policies_active = 12; */
        if (message.sigPoliciesActive !== undefined)
            writer.tag(12, WireType.Varint).int32(message.sigPoliciesActive);
        /* optional int32 ap_required_total = 13; */
        if (message.apRequiredTotal !== undefined)
            writer.tag(13, WireType.Varint).int32(message.apRequiredTotal);
        /* optional int32 ap_collected_approved = 14; */
        if (message.apCollectedApproved !== undefined)
            writer.tag(14, WireType.Varint).int32(message.apCollectedApproved);
        /* optional int32 ap_required_remaining = 15; */
        if (message.apRequiredRemaining !== undefined)
            writer.tag(15, WireType.Varint).int32(message.apRequiredRemaining);
        /* optional int32 ap_declined_count = 16; */
        if (message.apDeclinedCount !== undefined)
            writer.tag(16, WireType.Varint).int32(message.apDeclinedCount);
        /* optional int32 ap_pending_count = 17; */
        if (message.apPendingCount !== undefined)
            writer.tag(17, WireType.Varint).int32(message.apPendingCount);
        /* optional bool ap_any_declined = 18; */
        if (message.apAnyDeclined !== undefined)
            writer.tag(18, WireType.Varint).bool(message.apAnyDeclined);
        /* optional int32 ap_policies_active = 19; */
        if (message.apPoliciesActive !== undefined)
            writer.tag(19, WireType.Varint).int32(message.apPoliciesActive);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentMeta
 */
export const DocumentMeta = new DocumentMeta$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentReference$Type extends MessageType<DocumentReference> {
    constructor() {
        super("resources.documents.DocumentReference", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "source_document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/, options: { "tagger.tags": "alias:\"source_document_id\"" } },
            { no: 4, name: "source_document", kind: "message", T: () => DocumentShort, options: { "tagger.tags": "alias:\"source_document\"" } },
            { no: 5, name: "reference", kind: "enum", T: () => ["resources.documents.DocReference", DocReference, "DOC_REFERENCE_"], options: { "buf.validate.field": { enum: { definedOnly: true } }, "tagger.tags": "alias:\"reference\"" } },
            { no: 6, name: "target_document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/, options: { "tagger.tags": "alias:\"target_document_id\"" } },
            { no: 7, name: "target_document", kind: "message", T: () => DocumentShort, options: { "tagger.tags": "alias:\"target_document\"" } },
            { no: 8, name: "creator_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } } } },
            { no: 9, name: "creator", kind: "message", T: () => UserShort, options: { "tagger.tags": "alias:\"ref_creator\"" } }
        ]);
    }
    create(value?: PartialMessage<DocumentReference>): DocumentReference {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.sourceDocumentId = 0;
        message.reference = 0;
        message.targetDocumentId = 0;
        if (value !== undefined)
            reflectionMergePartial<DocumentReference>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentReference): DocumentReference {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 id */ 1:
                    message.id = reader.int64().toNumber();
                    break;
                case /* optional resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* int64 source_document_id */ 3:
                    message.sourceDocumentId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.DocumentShort source_document */ 4:
                    message.sourceDocument = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.sourceDocument);
                    break;
                case /* resources.documents.DocReference reference */ 5:
                    message.reference = reader.int32();
                    break;
                case /* int64 target_document_id */ 6:
                    message.targetDocumentId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.DocumentShort target_document */ 7:
                    message.targetDocument = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.targetDocument);
                    break;
                case /* optional int32 creator_id */ 8:
                    message.creatorId = reader.int32();
                    break;
                case /* optional resources.users.UserShort creator */ 9:
                    message.creator = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.creator);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentReference, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 id = 1; */
        if (message.id !== undefined)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* optional resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int64 source_document_id = 3; */
        if (message.sourceDocumentId !== 0)
            writer.tag(3, WireType.Varint).int64(message.sourceDocumentId);
        /* optional resources.documents.DocumentShort source_document = 4; */
        if (message.sourceDocument)
            DocumentShort.internalBinaryWrite(message.sourceDocument, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* resources.documents.DocReference reference = 5; */
        if (message.reference !== 0)
            writer.tag(5, WireType.Varint).int32(message.reference);
        /* int64 target_document_id = 6; */
        if (message.targetDocumentId !== 0)
            writer.tag(6, WireType.Varint).int64(message.targetDocumentId);
        /* optional resources.documents.DocumentShort target_document = 7; */
        if (message.targetDocument)
            DocumentShort.internalBinaryWrite(message.targetDocument, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 creator_id = 8; */
        if (message.creatorId !== undefined)
            writer.tag(8, WireType.Varint).int32(message.creatorId);
        /* optional resources.users.UserShort creator = 9; */
        if (message.creator)
            UserShort.internalBinaryWrite(message.creator, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentReference
 */
export const DocumentReference = new DocumentReference$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DocumentRelation$Type extends MessageType<DocumentRelation> {
    constructor() {
        super("resources.documents.DocumentRelation", [
            { no: 1, name: "id", kind: "scalar", opt: true, T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 4, name: "document", kind: "message", T: () => DocumentShort, options: { "tagger.tags": "alias:\"document\"" } },
            { no: 5, name: "source_user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } }, "tagger.tags": "alias:\"source_user_id\"" } },
            { no: 6, name: "source_user", kind: "message", T: () => UserShort, options: { "tagger.tags": "alias:\"source_user\"" } },
            { no: 7, name: "relation", kind: "enum", T: () => ["resources.documents.DocRelation", DocRelation, "DOC_RELATION_"], options: { "buf.validate.field": { enum: { definedOnly: true } }, "tagger.tags": "alias:\"relation\"" } },
            { no: 8, name: "target_user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } }, "tagger.tags": "alias:\"target_user_id\"" } },
            { no: 9, name: "target_user", kind: "message", T: () => UserShort, options: { "tagger.tags": "alias:\"target_user\"" } }
        ]);
    }
    create(value?: PartialMessage<DocumentRelation>): DocumentRelation {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentId = 0;
        message.sourceUserId = 0;
        message.relation = 0;
        message.targetUserId = 0;
        if (value !== undefined)
            reflectionMergePartial<DocumentRelation>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DocumentRelation): DocumentRelation {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int64 id */ 1:
                    message.id = reader.int64().toNumber();
                    break;
                case /* optional resources.timestamp.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* int64 document_id */ 3:
                    message.documentId = reader.int64().toNumber();
                    break;
                case /* optional resources.documents.DocumentShort document */ 4:
                    message.document = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.document);
                    break;
                case /* int32 source_user_id */ 5:
                    message.sourceUserId = reader.int32();
                    break;
                case /* optional resources.users.UserShort source_user */ 6:
                    message.sourceUser = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.sourceUser);
                    break;
                case /* resources.documents.DocRelation relation */ 7:
                    message.relation = reader.int32();
                    break;
                case /* int32 target_user_id */ 8:
                    message.targetUserId = reader.int32();
                    break;
                case /* optional resources.users.UserShort target_user */ 9:
                    message.targetUser = UserShort.internalBinaryRead(reader, reader.uint32(), options, message.targetUser);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DocumentRelation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int64 id = 1; */
        if (message.id !== undefined)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* optional resources.timestamp.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int64 document_id = 3; */
        if (message.documentId !== 0)
            writer.tag(3, WireType.Varint).int64(message.documentId);
        /* optional resources.documents.DocumentShort document = 4; */
        if (message.document)
            DocumentShort.internalBinaryWrite(message.document, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 source_user_id = 5; */
        if (message.sourceUserId !== 0)
            writer.tag(5, WireType.Varint).int32(message.sourceUserId);
        /* optional resources.users.UserShort source_user = 6; */
        if (message.sourceUser)
            UserShort.internalBinaryWrite(message.sourceUser, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* resources.documents.DocRelation relation = 7; */
        if (message.relation !== 0)
            writer.tag(7, WireType.Varint).int32(message.relation);
        /* int32 target_user_id = 8; */
        if (message.targetUserId !== 0)
            writer.tag(8, WireType.Varint).int32(message.targetUserId);
        /* optional resources.users.UserShort target_user = 9; */
        if (message.targetUser)
            UserShort.internalBinaryWrite(message.targetUser, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.DocumentRelation
 */
export const DocumentRelation = new DocumentRelation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorkflowState$Type extends MessageType<WorkflowState> {
    constructor() {
        super("resources.documents.WorkflowState", [
            { no: 1, name: "document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "next_reminder_time", kind: "message", T: () => Timestamp },
            { no: 3, name: "next_reminder_count", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "reminder_count", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { lte: 10, gte: 1 } } } },
            { no: 4, name: "auto_close_time", kind: "message", T: () => Timestamp },
            { no: 6, name: "workflow", kind: "message", T: () => Workflow, options: { "tagger.tags": "alias:\"workflow\"" } },
            { no: 7, name: "document", kind: "message", T: () => DocumentShort }
        ]);
    }
    create(value?: PartialMessage<WorkflowState>): WorkflowState {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentId = 0;
        message.reminderCount = 0;
        if (value !== undefined)
            reflectionMergePartial<WorkflowState>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorkflowState): WorkflowState {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 document_id */ 1:
                    message.documentId = reader.int64().toNumber();
                    break;
                case /* optional resources.timestamp.Timestamp next_reminder_time */ 2:
                    message.nextReminderTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.nextReminderTime);
                    break;
                case /* optional int32 next_reminder_count */ 3:
                    message.nextReminderCount = reader.int32();
                    break;
                case /* int32 reminder_count */ 5:
                    message.reminderCount = reader.int32();
                    break;
                case /* optional resources.timestamp.Timestamp auto_close_time */ 4:
                    message.autoCloseTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.autoCloseTime);
                    break;
                case /* optional resources.documents.Workflow workflow */ 6:
                    message.workflow = Workflow.internalBinaryRead(reader, reader.uint32(), options, message.workflow);
                    break;
                case /* optional resources.documents.DocumentShort document */ 7:
                    message.document = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.document);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorkflowState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 document_id = 1; */
        if (message.documentId !== 0)
            writer.tag(1, WireType.Varint).int64(message.documentId);
        /* optional resources.timestamp.Timestamp next_reminder_time = 2; */
        if (message.nextReminderTime)
            Timestamp.internalBinaryWrite(message.nextReminderTime, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 next_reminder_count = 3; */
        if (message.nextReminderCount !== undefined)
            writer.tag(3, WireType.Varint).int32(message.nextReminderCount);
        /* optional resources.timestamp.Timestamp auto_close_time = 4; */
        if (message.autoCloseTime)
            Timestamp.internalBinaryWrite(message.autoCloseTime, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 reminder_count = 5; */
        if (message.reminderCount !== 0)
            writer.tag(5, WireType.Varint).int32(message.reminderCount);
        /* optional resources.documents.Workflow workflow = 6; */
        if (message.workflow)
            Workflow.internalBinaryWrite(message.workflow, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.DocumentShort document = 7; */
        if (message.document)
            DocumentShort.internalBinaryWrite(message.document, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.WorkflowState
 */
export const WorkflowState = new WorkflowState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorkflowUserState$Type extends MessageType<WorkflowUserState> {
    constructor() {
        super("resources.documents.WorkflowUserState", [
            { no: 1, name: "document_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 2, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } } } },
            { no: 3, name: "manual_reminder_time", kind: "message", T: () => Timestamp },
            { no: 4, name: "manual_reminder_message", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "255" } } } },
            { no: 5, name: "reminder_count", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { lte: 10, gte: 1 } } } },
            { no: 6, name: "max_reminder_count", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { lte: 10, gte: 1 } } } },
            { no: 7, name: "workflow", kind: "message", T: () => Workflow, options: { "tagger.tags": "alias:\"workflow\"" } },
            { no: 8, name: "document", kind: "message", T: () => DocumentShort }
        ]);
    }
    create(value?: PartialMessage<WorkflowUserState>): WorkflowUserState {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.documentId = 0;
        message.userId = 0;
        message.reminderCount = 0;
        message.maxReminderCount = 0;
        if (value !== undefined)
            reflectionMergePartial<WorkflowUserState>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorkflowUserState): WorkflowUserState {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 document_id */ 1:
                    message.documentId = reader.int64().toNumber();
                    break;
                case /* int32 user_id */ 2:
                    message.userId = reader.int32();
                    break;
                case /* optional resources.timestamp.Timestamp manual_reminder_time */ 3:
                    message.manualReminderTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.manualReminderTime);
                    break;
                case /* optional string manual_reminder_message */ 4:
                    message.manualReminderMessage = reader.string();
                    break;
                case /* int32 reminder_count */ 5:
                    message.reminderCount = reader.int32();
                    break;
                case /* int32 max_reminder_count */ 6:
                    message.maxReminderCount = reader.int32();
                    break;
                case /* optional resources.documents.Workflow workflow */ 7:
                    message.workflow = Workflow.internalBinaryRead(reader, reader.uint32(), options, message.workflow);
                    break;
                case /* optional resources.documents.DocumentShort document */ 8:
                    message.document = DocumentShort.internalBinaryRead(reader, reader.uint32(), options, message.document);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorkflowUserState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 document_id = 1; */
        if (message.documentId !== 0)
            writer.tag(1, WireType.Varint).int64(message.documentId);
        /* int32 user_id = 2; */
        if (message.userId !== 0)
            writer.tag(2, WireType.Varint).int32(message.userId);
        /* optional resources.timestamp.Timestamp manual_reminder_time = 3; */
        if (message.manualReminderTime)
            Timestamp.internalBinaryWrite(message.manualReminderTime, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional string manual_reminder_message = 4; */
        if (message.manualReminderMessage !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.manualReminderMessage);
        /* int32 reminder_count = 5; */
        if (message.reminderCount !== 0)
            writer.tag(5, WireType.Varint).int32(message.reminderCount);
        /* int32 max_reminder_count = 6; */
        if (message.maxReminderCount !== 0)
            writer.tag(6, WireType.Varint).int32(message.maxReminderCount);
        /* optional resources.documents.Workflow workflow = 7; */
        if (message.workflow)
            Workflow.internalBinaryWrite(message.workflow, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.documents.DocumentShort document = 8; */
        if (message.document)
            DocumentShort.internalBinaryWrite(message.document, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.documents.WorkflowUserState
 */
export const WorkflowUserState = new WorkflowUserState$Type();
