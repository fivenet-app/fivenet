// @generated by protobuf-ts 2.11.1 with parameter force_server_none,long_type_number,optimize_speed,ts_nocheck
// @generated from protobuf file "resources/jobs/colleagues.proto" (package "resources.jobs", syntax proto3)
// tslint:disable
// @ts-nocheck
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Labels } from "./labels";
import { Timestamp } from "../timestamp/timestamp";
/**
 * @generated from protobuf message resources.jobs.Colleague
 */
export interface Colleague {
    /**
     * @generated from protobuf field: int32 user_id = 1
     */
    userId: number;
    /**
     * @generated from protobuf field: optional string identifier = 2
     */
    identifier?: string;
    /**
     * @generated from protobuf field: string job = 3
     */
    job: string;
    /**
     * @generated from protobuf field: optional string job_label = 4
     */
    jobLabel?: string;
    /**
     * @generated from protobuf field: int32 job_grade = 5
     */
    jobGrade: number;
    /**
     * @generated from protobuf field: optional string job_grade_label = 6
     */
    jobGradeLabel?: string;
    /**
     * @generated from protobuf field: string firstname = 7
     */
    firstname: string;
    /**
     * @generated from protobuf field: string lastname = 8
     */
    lastname: string;
    /**
     * @generated from protobuf field: string dateofbirth = 9
     */
    dateofbirth: string;
    /**
     * @generated from protobuf field: optional string phone_number = 12
     */
    phoneNumber?: string;
    /**
     * @generated from protobuf field: optional uint64 avatar_file_id = 17
     */
    avatarFileId?: number;
    /**
     * @generated from protobuf field: optional string avatar = 18
     */
    avatar?: string;
    /**
     * @generated from protobuf field: resources.jobs.ColleagueProps props = 19
     */
    props?: ColleagueProps;
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: optional string email = 20
     */
    email?: string;
}
/**
 * @generated from protobuf message resources.jobs.ColleagueProps
 */
export interface ColleagueProps {
    /**
     * @generated from protobuf field: int32 user_id = 1
     */
    userId: number;
    /**
     * @generated from protobuf field: string job = 2
     */
    job: string;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp deleted_at = 3
     */
    deletedAt?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp absence_begin = 4
     */
    absenceBegin?: Timestamp;
    /**
     * @generated from protobuf field: optional resources.timestamp.Timestamp absence_end = 5
     */
    absenceEnd?: Timestamp;
    /**
     * @sanitize: method=StripTags
     *
     * @generated from protobuf field: optional string note = 6
     */
    note?: string;
    /**
     * @generated from protobuf field: optional resources.jobs.Labels labels = 7
     */
    labels?: Labels;
    /**
     * @generated from protobuf field: optional string name_prefix = 8
     */
    namePrefix?: string;
    /**
     * @generated from protobuf field: optional string name_suffix = 9
     */
    nameSuffix?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class Colleague$Type extends MessageType<Colleague> {
    constructor() {
        super("resources.jobs.Colleague", [
            { no: 1, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } }, "tagger.tags": "alias:\"id\"" } },
            { no: 2, name: "identifier", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "64" } } } },
            { no: 3, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "20" } } } },
            { no: 4, name: "job_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "50" } } } },
            { no: 5, name: "job_grade", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: -1 } } } },
            { no: 6, name: "job_grade_label", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "50" } } } },
            { no: 7, name: "firstname", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { minLen: "1", maxLen: "50" } } } },
            { no: 8, name: "lastname", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { minLen: "1", maxLen: "50" } } } },
            { no: 9, name: "dateofbirth", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { len: "10" } } } },
            { no: 12, name: "phone_number", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "20" } } } },
            { no: 17, name: "avatar_file_id", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 18, name: "avatar", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "tagger.tags": "alias:\"avatar\"" } },
            { no: 19, name: "props", kind: "message", T: () => ColleagueProps, options: { "tagger.tags": "alias:\"colleague_props\"" } },
            { no: 20, name: "email", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { minLen: "6", maxLen: "80" } } } }
        ]);
    }
    create(value?: PartialMessage<Colleague>): Colleague {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userId = 0;
        message.job = "";
        message.jobGrade = 0;
        message.firstname = "";
        message.lastname = "";
        message.dateofbirth = "";
        if (value !== undefined)
            reflectionMergePartial<Colleague>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Colleague): Colleague {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 user_id */ 1:
                    message.userId = reader.int32();
                    break;
                case /* optional string identifier */ 2:
                    message.identifier = reader.string();
                    break;
                case /* string job */ 3:
                    message.job = reader.string();
                    break;
                case /* optional string job_label */ 4:
                    message.jobLabel = reader.string();
                    break;
                case /* int32 job_grade */ 5:
                    message.jobGrade = reader.int32();
                    break;
                case /* optional string job_grade_label */ 6:
                    message.jobGradeLabel = reader.string();
                    break;
                case /* string firstname */ 7:
                    message.firstname = reader.string();
                    break;
                case /* string lastname */ 8:
                    message.lastname = reader.string();
                    break;
                case /* string dateofbirth */ 9:
                    message.dateofbirth = reader.string();
                    break;
                case /* optional string phone_number */ 12:
                    message.phoneNumber = reader.string();
                    break;
                case /* optional uint64 avatar_file_id */ 17:
                    message.avatarFileId = reader.uint64().toNumber();
                    break;
                case /* optional string avatar */ 18:
                    message.avatar = reader.string();
                    break;
                case /* resources.jobs.ColleagueProps props */ 19:
                    message.props = ColleagueProps.internalBinaryRead(reader, reader.uint32(), options, message.props);
                    break;
                case /* optional string email */ 20:
                    message.email = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Colleague, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 user_id = 1; */
        if (message.userId !== 0)
            writer.tag(1, WireType.Varint).int32(message.userId);
        /* optional string identifier = 2; */
        if (message.identifier !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.identifier);
        /* string job = 3; */
        if (message.job !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.job);
        /* optional string job_label = 4; */
        if (message.jobLabel !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.jobLabel);
        /* int32 job_grade = 5; */
        if (message.jobGrade !== 0)
            writer.tag(5, WireType.Varint).int32(message.jobGrade);
        /* optional string job_grade_label = 6; */
        if (message.jobGradeLabel !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.jobGradeLabel);
        /* string firstname = 7; */
        if (message.firstname !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.firstname);
        /* string lastname = 8; */
        if (message.lastname !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.lastname);
        /* string dateofbirth = 9; */
        if (message.dateofbirth !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.dateofbirth);
        /* optional string phone_number = 12; */
        if (message.phoneNumber !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.phoneNumber);
        /* optional uint64 avatar_file_id = 17; */
        if (message.avatarFileId !== undefined)
            writer.tag(17, WireType.Varint).uint64(message.avatarFileId);
        /* optional string avatar = 18; */
        if (message.avatar !== undefined)
            writer.tag(18, WireType.LengthDelimited).string(message.avatar);
        /* resources.jobs.ColleagueProps props = 19; */
        if (message.props)
            ColleagueProps.internalBinaryWrite(message.props, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* optional string email = 20; */
        if (message.email !== undefined)
            writer.tag(20, WireType.LengthDelimited).string(message.email);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.jobs.Colleague
 */
export const Colleague = new Colleague$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ColleagueProps$Type extends MessageType<ColleagueProps> {
    constructor() {
        super("resources.jobs.ColleagueProps", [
            { no: 1, name: "user_id", kind: "scalar", T: 5 /*ScalarType.INT32*/, options: { "buf.validate.field": { int32: { gt: 0 } } } },
            { no: 2, name: "job", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "20" } } } },
            { no: 3, name: "deleted_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "absence_begin", kind: "message", T: () => Timestamp },
            { no: 5, name: "absence_end", kind: "message", T: () => Timestamp },
            { no: 6, name: "note", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "labels", kind: "message", T: () => Labels },
            { no: 8, name: "name_prefix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "12" } } } },
            { no: 9, name: "name_suffix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/, options: { "buf.validate.field": { string: { maxLen: "12" } } } }
        ]);
    }
    create(value?: PartialMessage<ColleagueProps>): ColleagueProps {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userId = 0;
        message.job = "";
        if (value !== undefined)
            reflectionMergePartial<ColleagueProps>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ColleagueProps): ColleagueProps {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 user_id */ 1:
                    message.userId = reader.int32();
                    break;
                case /* string job */ 2:
                    message.job = reader.string();
                    break;
                case /* optional resources.timestamp.Timestamp deleted_at */ 3:
                    message.deletedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.deletedAt);
                    break;
                case /* optional resources.timestamp.Timestamp absence_begin */ 4:
                    message.absenceBegin = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.absenceBegin);
                    break;
                case /* optional resources.timestamp.Timestamp absence_end */ 5:
                    message.absenceEnd = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.absenceEnd);
                    break;
                case /* optional string note */ 6:
                    message.note = reader.string();
                    break;
                case /* optional resources.jobs.Labels labels */ 7:
                    message.labels = Labels.internalBinaryRead(reader, reader.uint32(), options, message.labels);
                    break;
                case /* optional string name_prefix */ 8:
                    message.namePrefix = reader.string();
                    break;
                case /* optional string name_suffix */ 9:
                    message.nameSuffix = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ColleagueProps, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 user_id = 1; */
        if (message.userId !== 0)
            writer.tag(1, WireType.Varint).int32(message.userId);
        /* string job = 2; */
        if (message.job !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.job);
        /* optional resources.timestamp.Timestamp deleted_at = 3; */
        if (message.deletedAt)
            Timestamp.internalBinaryWrite(message.deletedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp absence_begin = 4; */
        if (message.absenceBegin)
            Timestamp.internalBinaryWrite(message.absenceBegin, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional resources.timestamp.Timestamp absence_end = 5; */
        if (message.absenceEnd)
            Timestamp.internalBinaryWrite(message.absenceEnd, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional string note = 6; */
        if (message.note !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.note);
        /* optional resources.jobs.Labels labels = 7; */
        if (message.labels)
            Labels.internalBinaryWrite(message.labels, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional string name_prefix = 8; */
        if (message.namePrefix !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.namePrefix);
        /* optional string name_suffix = 9; */
        if (message.nameSuffix !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.nameSuffix);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message resources.jobs.ColleagueProps
 */
export const ColleagueProps = new ColleagueProps$Type();
