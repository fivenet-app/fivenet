// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/userinfo/user_info.proto

package userinfo

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *PollReq) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *UserInfo) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Group
	m.Group = htmlsanitizer.Sanitize(m.Group)

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: License
	m.License = htmlsanitizer.Sanitize(m.License)

	// Field: OverrideJob
	if m.OverrideJob != nil {
		*m.OverrideJob = htmlsanitizer.Sanitize(*m.OverrideJob)
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *UserInfoChanged) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: ChangedAt
	if m.ChangedAt != nil {
		if v, ok := any(m.GetChangedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: NewJob
	if m.NewJob != nil {
		*m.NewJob = htmlsanitizer.Sanitize(*m.NewJob)
	}

	// Field: NewJobGradeLabel
	if m.NewJobGradeLabel != nil {
		*m.NewJobGradeLabel = htmlsanitizer.Sanitize(*m.NewJobGradeLabel)
	}

	// Field: NewJobLabel
	if m.NewJobLabel != nil {
		*m.NewJobLabel = htmlsanitizer.Sanitize(*m.NewJobLabel)
	}

	// Field: OldJob
	m.OldJob = htmlsanitizer.Sanitize(m.OldJob)

	return nil
}
