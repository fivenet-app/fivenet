// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/qualifications/access.proto

package qualifications

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *QualificationAccess) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Jobs
	for idx, item := range m.Jobs {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *QualificationJobAccess) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: CreatedAt
	if m.CreatedAt != nil {
		if v, ok := any(m.GetCreatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: JobGradeLabel
	if m.JobGradeLabel != nil {
		*m.JobGradeLabel = htmlsanitizer.Sanitize(*m.JobGradeLabel)
	}

	// Field: JobLabel
	if m.JobLabel != nil {
		*m.JobLabel = htmlsanitizer.Sanitize(*m.JobLabel)
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *QualificationUserAccess) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}
