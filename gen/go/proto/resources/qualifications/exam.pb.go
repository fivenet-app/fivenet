// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: resources/qualifications/exam.proto

package qualifications

import (
	file "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/file"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamQuestions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*ExamQuestion        `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestions) Reset() {
	*x = ExamQuestions{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestions) ProtoMessage() {}

func (x *ExamQuestions) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestions.ProtoReflect.Descriptor instead.
func (*ExamQuestions) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{0}
}

func (x *ExamQuestions) GetQuestions() []*ExamQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type ExamQuestion struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	QualificationId int64                  `protobuf:"varint,2,opt,name=qualification_id,json=qualificationId,proto3" json:"qualification_id,omitempty"`
	CreatedAt       *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt       *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	// @sanitize: method=StripTags
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// @sanitize: method=StripTags
	Description   *string                 `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Data          *ExamQuestionData       `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Answer        *ExamQuestionAnswerData `protobuf:"bytes,8,opt,name=answer,proto3,oneof" json:"answer,omitempty"`
	Points        *int32                  `protobuf:"varint,9,opt,name=points,proto3,oneof" json:"points,omitempty"`
	Order         int32                   `protobuf:"varint,10,opt,name=order,proto3" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestion) Reset() {
	*x = ExamQuestion{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestion) ProtoMessage() {}

func (x *ExamQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestion.ProtoReflect.Descriptor instead.
func (*ExamQuestion) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{1}
}

func (x *ExamQuestion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExamQuestion) GetQualificationId() int64 {
	if x != nil {
		return x.QualificationId
	}
	return 0
}

func (x *ExamQuestion) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamQuestion) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamQuestion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamQuestion) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ExamQuestion) GetData() *ExamQuestionData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExamQuestion) GetAnswer() *ExamQuestionAnswerData {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *ExamQuestion) GetPoints() int32 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *ExamQuestion) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

// @dbscanner: json
type ExamQuestionData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*ExamQuestionData_Separator
	//	*ExamQuestionData_Image
	//	*ExamQuestionData_Yesno
	//	*ExamQuestionData_FreeText
	//	*ExamQuestionData_SingleChoice
	//	*ExamQuestionData_MultipleChoice
	Data          isExamQuestionData_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionData) Reset() {
	*x = ExamQuestionData{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionData) ProtoMessage() {}

func (x *ExamQuestionData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionData.ProtoReflect.Descriptor instead.
func (*ExamQuestionData) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{2}
}

func (x *ExamQuestionData) GetData() isExamQuestionData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExamQuestionData) GetSeparator() *ExamQuestionSeparator {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_Separator); ok {
			return x.Separator
		}
	}
	return nil
}

func (x *ExamQuestionData) GetImage() *ExamQuestionImage {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *ExamQuestionData) GetYesno() *ExamQuestionYesNo {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_Yesno); ok {
			return x.Yesno
		}
	}
	return nil
}

func (x *ExamQuestionData) GetFreeText() *ExamQuestionText {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_FreeText); ok {
			return x.FreeText
		}
	}
	return nil
}

func (x *ExamQuestionData) GetSingleChoice() *ExamQuestionSingleChoice {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_SingleChoice); ok {
			return x.SingleChoice
		}
	}
	return nil
}

func (x *ExamQuestionData) GetMultipleChoice() *ExamQuestionMultipleChoice {
	if x != nil {
		if x, ok := x.Data.(*ExamQuestionData_MultipleChoice); ok {
			return x.MultipleChoice
		}
	}
	return nil
}

type isExamQuestionData_Data interface {
	isExamQuestionData_Data()
}

type ExamQuestionData_Separator struct {
	Separator *ExamQuestionSeparator `protobuf:"bytes,1,opt,name=separator,proto3,oneof"`
}

type ExamQuestionData_Image struct {
	Image *ExamQuestionImage `protobuf:"bytes,6,opt,name=image,proto3,oneof"`
}

type ExamQuestionData_Yesno struct {
	Yesno *ExamQuestionYesNo `protobuf:"bytes,2,opt,name=yesno,proto3,oneof"`
}

type ExamQuestionData_FreeText struct {
	FreeText *ExamQuestionText `protobuf:"bytes,3,opt,name=free_text,json=freeText,proto3,oneof"`
}

type ExamQuestionData_SingleChoice struct {
	SingleChoice *ExamQuestionSingleChoice `protobuf:"bytes,4,opt,name=single_choice,json=singleChoice,proto3,oneof"`
}

type ExamQuestionData_MultipleChoice struct {
	MultipleChoice *ExamQuestionMultipleChoice `protobuf:"bytes,5,opt,name=multiple_choice,json=multipleChoice,proto3,oneof"`
}

func (*ExamQuestionData_Separator) isExamQuestionData_Data() {}

func (*ExamQuestionData_Image) isExamQuestionData_Data() {}

func (*ExamQuestionData_Yesno) isExamQuestionData_Data() {}

func (*ExamQuestionData_FreeText) isExamQuestionData_Data() {}

func (*ExamQuestionData_SingleChoice) isExamQuestionData_Data() {}

func (*ExamQuestionData_MultipleChoice) isExamQuestionData_Data() {}

type ExamQuestionSeparator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionSeparator) Reset() {
	*x = ExamQuestionSeparator{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionSeparator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionSeparator) ProtoMessage() {}

func (x *ExamQuestionSeparator) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionSeparator.ProtoReflect.Descriptor instead.
func (*ExamQuestionSeparator) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{3}
}

type ExamQuestionImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *file.File             `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Alt           *string                `protobuf:"bytes,2,opt,name=alt,proto3,oneof" json:"alt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionImage) Reset() {
	*x = ExamQuestionImage{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionImage) ProtoMessage() {}

func (x *ExamQuestionImage) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionImage.ProtoReflect.Descriptor instead.
func (*ExamQuestionImage) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{4}
}

func (x *ExamQuestionImage) GetImage() *file.File {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ExamQuestionImage) GetAlt() string {
	if x != nil && x.Alt != nil {
		return *x.Alt
	}
	return ""
}

type ExamQuestionYesNo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionYesNo) Reset() {
	*x = ExamQuestionYesNo{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionYesNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionYesNo) ProtoMessage() {}

func (x *ExamQuestionYesNo) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionYesNo.ProtoReflect.Descriptor instead.
func (*ExamQuestionYesNo) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{5}
}

type ExamQuestionText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinLength     int32                  `protobuf:"varint,1,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength     int32                  `protobuf:"varint,2,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionText) Reset() {
	*x = ExamQuestionText{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionText) ProtoMessage() {}

func (x *ExamQuestionText) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionText.ProtoReflect.Descriptor instead.
func (*ExamQuestionText) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{6}
}

func (x *ExamQuestionText) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *ExamQuestionText) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type ExamQuestionSingleChoice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Choices       []string `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionSingleChoice) Reset() {
	*x = ExamQuestionSingleChoice{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionSingleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionSingleChoice) ProtoMessage() {}

func (x *ExamQuestionSingleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionSingleChoice.ProtoReflect.Descriptor instead.
func (*ExamQuestionSingleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{7}
}

func (x *ExamQuestionSingleChoice) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

type ExamQuestionMultipleChoice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Choices       []string `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	Limit         *int32   `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionMultipleChoice) Reset() {
	*x = ExamQuestionMultipleChoice{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionMultipleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionMultipleChoice) ProtoMessage() {}

func (x *ExamQuestionMultipleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionMultipleChoice.ProtoReflect.Descriptor instead.
func (*ExamQuestionMultipleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{8}
}

func (x *ExamQuestionMultipleChoice) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ExamQuestionMultipleChoice) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

// @dbscanner: json
type ExamQuestionAnswerData struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AnswerKey string                 `protobuf:"bytes,1,opt,name=answer_key,json=answerKey,proto3" json:"answer_key,omitempty"`
	// Types that are valid to be assigned to Answer:
	//
	//	*ExamQuestionAnswerData_Yesno
	//	*ExamQuestionAnswerData_FreeText
	//	*ExamQuestionAnswerData_SingleChoice
	//	*ExamQuestionAnswerData_MultipleChoice
	Answer        isExamQuestionAnswerData_Answer `protobuf_oneof:"answer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamQuestionAnswerData) Reset() {
	*x = ExamQuestionAnswerData{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamQuestionAnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionAnswerData) ProtoMessage() {}

func (x *ExamQuestionAnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionAnswerData.ProtoReflect.Descriptor instead.
func (*ExamQuestionAnswerData) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{9}
}

func (x *ExamQuestionAnswerData) GetAnswerKey() string {
	if x != nil {
		return x.AnswerKey
	}
	return ""
}

func (x *ExamQuestionAnswerData) GetAnswer() isExamQuestionAnswerData_Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *ExamQuestionAnswerData) GetYesno() *ExamResponseYesNo {
	if x != nil {
		if x, ok := x.Answer.(*ExamQuestionAnswerData_Yesno); ok {
			return x.Yesno
		}
	}
	return nil
}

func (x *ExamQuestionAnswerData) GetFreeText() *ExamResponseText {
	if x != nil {
		if x, ok := x.Answer.(*ExamQuestionAnswerData_FreeText); ok {
			return x.FreeText
		}
	}
	return nil
}

func (x *ExamQuestionAnswerData) GetSingleChoice() *ExamResponseSingleChoice {
	if x != nil {
		if x, ok := x.Answer.(*ExamQuestionAnswerData_SingleChoice); ok {
			return x.SingleChoice
		}
	}
	return nil
}

func (x *ExamQuestionAnswerData) GetMultipleChoice() *ExamResponseMultipleChoice {
	if x != nil {
		if x, ok := x.Answer.(*ExamQuestionAnswerData_MultipleChoice); ok {
			return x.MultipleChoice
		}
	}
	return nil
}

type isExamQuestionAnswerData_Answer interface {
	isExamQuestionAnswerData_Answer()
}

type ExamQuestionAnswerData_Yesno struct {
	Yesno *ExamResponseYesNo `protobuf:"bytes,4,opt,name=yesno,proto3,oneof"`
}

type ExamQuestionAnswerData_FreeText struct {
	FreeText *ExamResponseText `protobuf:"bytes,5,opt,name=free_text,json=freeText,proto3,oneof"`
}

type ExamQuestionAnswerData_SingleChoice struct {
	SingleChoice *ExamResponseSingleChoice `protobuf:"bytes,6,opt,name=single_choice,json=singleChoice,proto3,oneof"`
}

type ExamQuestionAnswerData_MultipleChoice struct {
	MultipleChoice *ExamResponseMultipleChoice `protobuf:"bytes,7,opt,name=multiple_choice,json=multipleChoice,proto3,oneof"`
}

func (*ExamQuestionAnswerData_Yesno) isExamQuestionAnswerData_Answer() {}

func (*ExamQuestionAnswerData_FreeText) isExamQuestionAnswerData_Answer() {}

func (*ExamQuestionAnswerData_SingleChoice) isExamQuestionAnswerData_Answer() {}

func (*ExamQuestionAnswerData_MultipleChoice) isExamQuestionAnswerData_Answer() {}

type ExamUser struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	QualificationId int64                  `protobuf:"varint,1,opt,name=qualification_id,json=qualificationId,proto3" json:"qualification_id,omitempty"`
	UserId          int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt       *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	StartedAt       *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3,oneof" json:"started_at,omitempty"`
	EndsAt          *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=ends_at,json=endsAt,proto3,oneof" json:"ends_at,omitempty"`
	EndedAt         *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=ended_at,json=endedAt,proto3,oneof" json:"ended_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExamUser) Reset() {
	*x = ExamUser{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamUser) ProtoMessage() {}

func (x *ExamUser) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamUser.ProtoReflect.Descriptor instead.
func (*ExamUser) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{10}
}

func (x *ExamUser) GetQualificationId() int64 {
	if x != nil {
		return x.QualificationId
	}
	return 0
}

func (x *ExamUser) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ExamUser) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamUser) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *ExamUser) GetEndsAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndsAt
	}
	return nil
}

func (x *ExamUser) GetEndedAt() *timestamp.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

// @dbscanner: json
type ExamResponses struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	QualificationId int64                  `protobuf:"varint,1,opt,name=qualification_id,json=qualificationId,proto3" json:"qualification_id,omitempty"`
	UserId          int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Responses       []*ExamResponse        `protobuf:"bytes,3,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExamResponses) Reset() {
	*x = ExamResponses{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponses) ProtoMessage() {}

func (x *ExamResponses) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponses.ProtoReflect.Descriptor instead.
func (*ExamResponses) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{11}
}

func (x *ExamResponses) GetQualificationId() int64 {
	if x != nil {
		return x.QualificationId
	}
	return 0
}

func (x *ExamResponses) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ExamResponses) GetResponses() []*ExamResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ExamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Question      *ExamQuestion          `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Response      *ExamResponseData      `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponse) Reset() {
	*x = ExamResponse{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponse) ProtoMessage() {}

func (x *ExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponse.ProtoReflect.Descriptor instead.
func (*ExamResponse) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{12}
}

func (x *ExamResponse) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *ExamResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ExamResponse) GetQuestion() *ExamQuestion {
	if x != nil {
		return x.Question
	}
	return nil
}

func (x *ExamResponse) GetResponse() *ExamResponseData {
	if x != nil {
		return x.Response
	}
	return nil
}

type ExamResponseData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ExamResponseData_Separator
	//	*ExamResponseData_Yesno
	//	*ExamResponseData_FreeText
	//	*ExamResponseData_SingleChoice
	//	*ExamResponseData_MultipleChoice
	Response      isExamResponseData_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseData) Reset() {
	*x = ExamResponseData{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseData) ProtoMessage() {}

func (x *ExamResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseData.ProtoReflect.Descriptor instead.
func (*ExamResponseData) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{13}
}

func (x *ExamResponseData) GetResponse() isExamResponseData_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ExamResponseData) GetSeparator() *ExamResponseSeparator {
	if x != nil {
		if x, ok := x.Response.(*ExamResponseData_Separator); ok {
			return x.Separator
		}
	}
	return nil
}

func (x *ExamResponseData) GetYesno() *ExamResponseYesNo {
	if x != nil {
		if x, ok := x.Response.(*ExamResponseData_Yesno); ok {
			return x.Yesno
		}
	}
	return nil
}

func (x *ExamResponseData) GetFreeText() *ExamResponseText {
	if x != nil {
		if x, ok := x.Response.(*ExamResponseData_FreeText); ok {
			return x.FreeText
		}
	}
	return nil
}

func (x *ExamResponseData) GetSingleChoice() *ExamResponseSingleChoice {
	if x != nil {
		if x, ok := x.Response.(*ExamResponseData_SingleChoice); ok {
			return x.SingleChoice
		}
	}
	return nil
}

func (x *ExamResponseData) GetMultipleChoice() *ExamResponseMultipleChoice {
	if x != nil {
		if x, ok := x.Response.(*ExamResponseData_MultipleChoice); ok {
			return x.MultipleChoice
		}
	}
	return nil
}

type isExamResponseData_Response interface {
	isExamResponseData_Response()
}

type ExamResponseData_Separator struct {
	Separator *ExamResponseSeparator `protobuf:"bytes,3,opt,name=separator,proto3,oneof"`
}

type ExamResponseData_Yesno struct {
	Yesno *ExamResponseYesNo `protobuf:"bytes,4,opt,name=yesno,proto3,oneof"`
}

type ExamResponseData_FreeText struct {
	FreeText *ExamResponseText `protobuf:"bytes,5,opt,name=free_text,json=freeText,proto3,oneof"`
}

type ExamResponseData_SingleChoice struct {
	SingleChoice *ExamResponseSingleChoice `protobuf:"bytes,6,opt,name=single_choice,json=singleChoice,proto3,oneof"`
}

type ExamResponseData_MultipleChoice struct {
	MultipleChoice *ExamResponseMultipleChoice `protobuf:"bytes,7,opt,name=multiple_choice,json=multipleChoice,proto3,oneof"`
}

func (*ExamResponseData_Separator) isExamResponseData_Response() {}

func (*ExamResponseData_Yesno) isExamResponseData_Response() {}

func (*ExamResponseData_FreeText) isExamResponseData_Response() {}

func (*ExamResponseData_SingleChoice) isExamResponseData_Response() {}

func (*ExamResponseData_MultipleChoice) isExamResponseData_Response() {}

type ExamResponseSeparator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseSeparator) Reset() {
	*x = ExamResponseSeparator{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseSeparator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseSeparator) ProtoMessage() {}

func (x *ExamResponseSeparator) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseSeparator.ProtoReflect.Descriptor instead.
func (*ExamResponseSeparator) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{14}
}

type ExamResponseYesNo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseYesNo) Reset() {
	*x = ExamResponseYesNo{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseYesNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseYesNo) ProtoMessage() {}

func (x *ExamResponseYesNo) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseYesNo.ProtoReflect.Descriptor instead.
func (*ExamResponseYesNo) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{15}
}

func (x *ExamResponseYesNo) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type ExamResponseText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Text          string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // 0.5 Megabyte
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseText) Reset() {
	*x = ExamResponseText{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseText) ProtoMessage() {}

func (x *ExamResponseText) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseText.ProtoReflect.Descriptor instead.
func (*ExamResponseText) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{16}
}

func (x *ExamResponseText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ExamResponseSingleChoice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Choice        string `protobuf:"bytes,1,opt,name=choice,proto3" json:"choice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseSingleChoice) Reset() {
	*x = ExamResponseSingleChoice{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseSingleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseSingleChoice) ProtoMessage() {}

func (x *ExamResponseSingleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseSingleChoice.ProtoReflect.Descriptor instead.
func (*ExamResponseSingleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{17}
}

func (x *ExamResponseSingleChoice) GetChoice() string {
	if x != nil {
		return x.Choice
	}
	return ""
}

type ExamResponseMultipleChoice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Choices       []string `protobuf:"bytes,1,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponseMultipleChoice) Reset() {
	*x = ExamResponseMultipleChoice{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponseMultipleChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponseMultipleChoice) ProtoMessage() {}

func (x *ExamResponseMultipleChoice) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponseMultipleChoice.ProtoReflect.Descriptor instead.
func (*ExamResponseMultipleChoice) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{18}
}

func (x *ExamResponseMultipleChoice) GetChoices() []string {
	if x != nil {
		return x.Choices
	}
	return nil
}

// @dbscanner: json
type ExamGrading struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*ExamGradingResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamGrading) Reset() {
	*x = ExamGrading{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamGrading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamGrading) ProtoMessage() {}

func (x *ExamGrading) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamGrading.ProtoReflect.Descriptor instead.
func (*ExamGrading) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{19}
}

func (x *ExamGrading) GetResponses() []*ExamGradingResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ExamGradingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestionId    int64                  `protobuf:"varint,1,opt,name=question_id,json=questionId,proto3" json:"question_id,omitempty"`
	Points        float32                `protobuf:"fixed32,2,opt,name=points,proto3" json:"points,omitempty"`
	Checked       *bool                  `protobuf:"varint,3,opt,name=checked,proto3,oneof" json:"checked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamGradingResponse) Reset() {
	*x = ExamGradingResponse{}
	mi := &file_resources_qualifications_exam_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamGradingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamGradingResponse) ProtoMessage() {}

func (x *ExamGradingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_qualifications_exam_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamGradingResponse.ProtoReflect.Descriptor instead.
func (*ExamGradingResponse) Descriptor() ([]byte, []int) {
	return file_resources_qualifications_exam_proto_rawDescGZIP(), []int{20}
}

func (x *ExamGradingResponse) GetQuestionId() int64 {
	if x != nil {
		return x.QuestionId
	}
	return 0
}

func (x *ExamGradingResponse) GetPoints() float32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *ExamGradingResponse) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

var File_resources_qualifications_exam_proto protoreflect.FileDescriptor

const file_resources_qualifications_exam_proto_rawDesc = "" +
	"\n" +
	"#resources/qualifications/exam.proto\x12\x18resources.qualifications\x1a\x19resources/file/file.proto\x1a#resources/timestamp/timestamp.proto\"_\n" +
	"\rExamQuestions\x12N\n" +
	"\tquestions\x18\x01 \x03(\v2&.resources.qualifications.ExamQuestionB\b\xbaH\x05\x92\x01\x02\x10dR\tquestions\"\xc5\x04\n" +
	"\fExamQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12)\n" +
	"\x10qualification_id\x18\x02 \x01(\x03R\x0fqualificationId\x12B\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\tcreatedAt\x88\x01\x01\x12B\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1e.resources.timestamp.TimestampH\x01R\tupdatedAt\x88\x01\x01\x12\x1e\n" +
	"\x05title\x18\x05 \x01(\tB\b\xbaH\x05r\x03\x18\x80\x04R\x05title\x12/\n" +
	"\vdescription\x18\x06 \x01(\tB\b\xbaH\x05r\x03\x18\x80\bH\x02R\vdescription\x88\x01\x01\x12F\n" +
	"\x04data\x18\a \x01(\v2*.resources.qualifications.ExamQuestionDataB\x06\xbaH\x03\xc8\x01\x01R\x04data\x12M\n" +
	"\x06answer\x18\b \x01(\v20.resources.qualifications.ExamQuestionAnswerDataH\x03R\x06answer\x88\x01\x01\x12$\n" +
	"\x06points\x18\t \x01(\x05B\a\xbaH\x04\x1a\x02(\x00H\x04R\x06points\x88\x01\x01\x12 \n" +
	"\x05order\x18\n" +
	" \x01(\x05B\n" +
	"\xbaH\a\x1a\x05\x18\xe8\a(\x00R\x05orderB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atB\x0e\n" +
	"\f_descriptionB\t\n" +
	"\a_answerB\t\n" +
	"\a_points\"\x83\x04\n" +
	"\x10ExamQuestionData\x12O\n" +
	"\tseparator\x18\x01 \x01(\v2/.resources.qualifications.ExamQuestionSeparatorH\x00R\tseparator\x12C\n" +
	"\x05image\x18\x06 \x01(\v2+.resources.qualifications.ExamQuestionImageH\x00R\x05image\x12C\n" +
	"\x05yesno\x18\x02 \x01(\v2+.resources.qualifications.ExamQuestionYesNoH\x00R\x05yesno\x12I\n" +
	"\tfree_text\x18\x03 \x01(\v2*.resources.qualifications.ExamQuestionTextH\x00R\bfreeText\x12Y\n" +
	"\rsingle_choice\x18\x04 \x01(\v22.resources.qualifications.ExamQuestionSingleChoiceH\x00R\fsingleChoice\x12_\n" +
	"\x0fmultiple_choice\x18\x05 \x01(\v24.resources.qualifications.ExamQuestionMultipleChoiceH\x00R\x0emultipleChoiceB\r\n" +
	"\x04data\x12\x05\xbaH\x02\b\x01\"\x17\n" +
	"\x15ExamQuestionSeparator\"h\n" +
	"\x11ExamQuestionImage\x12*\n" +
	"\x05image\x18\x01 \x01(\v2\x14.resources.file.FileR\x05image\x12\x1f\n" +
	"\x03alt\x18\x02 \x01(\tB\b\xbaH\x05r\x03\x18\x80\x01H\x00R\x03alt\x88\x01\x01B\x06\n" +
	"\x04_alt\"\x13\n" +
	"\x11ExamQuestionYesNo\"P\n" +
	"\x10ExamQuestionText\x12\x1d\n" +
	"\n" +
	"min_length\x18\x01 \x01(\x05R\tminLength\x12\x1d\n" +
	"\n" +
	"max_length\x18\x02 \x01(\x05R\tmaxLength\">\n" +
	"\x18ExamQuestionSingleChoice\x12\"\n" +
	"\achoices\x18\x01 \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\achoices\"p\n" +
	"\x1aExamQuestionMultipleChoice\x12\"\n" +
	"\achoices\x18\x01 \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\achoices\x12$\n" +
	"\x05limit\x18\x02 \x01(\x05B\t\xbaH\x06\x1a\x04\x18\n" +
	"(\x00H\x00R\x05limit\x88\x01\x01B\b\n" +
	"\x06_limit\"\x97\x03\n" +
	"\x16ExamQuestionAnswerData\x12'\n" +
	"\n" +
	"answer_key\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x18\x80\bR\tanswerKey\x12C\n" +
	"\x05yesno\x18\x04 \x01(\v2+.resources.qualifications.ExamResponseYesNoH\x00R\x05yesno\x12I\n" +
	"\tfree_text\x18\x05 \x01(\v2*.resources.qualifications.ExamResponseTextH\x00R\bfreeText\x12Y\n" +
	"\rsingle_choice\x18\x06 \x01(\v22.resources.qualifications.ExamResponseSingleChoiceH\x00R\fsingleChoice\x12_\n" +
	"\x0fmultiple_choice\x18\a \x01(\v24.resources.qualifications.ExamResponseMultipleChoiceH\x00R\x0emultipleChoiceB\b\n" +
	"\x06answer\"\x8b\x03\n" +
	"\bExamUser\x12)\n" +
	"\x10qualification_id\x18\x01 \x01(\x03R\x0fqualificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12B\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\tcreatedAt\x88\x01\x01\x12B\n" +
	"\n" +
	"started_at\x18\x04 \x01(\v2\x1e.resources.timestamp.TimestampH\x01R\tstartedAt\x88\x01\x01\x12<\n" +
	"\aends_at\x18\x05 \x01(\v2\x1e.resources.timestamp.TimestampH\x02R\x06endsAt\x88\x01\x01\x12>\n" +
	"\bended_at\x18\x06 \x01(\v2\x1e.resources.timestamp.TimestampH\x03R\aendedAt\x88\x01\x01B\r\n" +
	"\v_created_atB\r\n" +
	"\v_started_atB\n" +
	"\n" +
	"\b_ends_atB\v\n" +
	"\t_ended_at\"\xa3\x01\n" +
	"\rExamResponses\x12)\n" +
	"\x10qualification_id\x18\x01 \x01(\x03R\x0fqualificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12N\n" +
	"\tresponses\x18\x03 \x03(\v2&.resources.qualifications.ExamResponseB\b\xbaH\x05\x92\x01\x02\x10dR\tresponses\"\xd4\x01\n" +
	"\fExamResponse\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12B\n" +
	"\bquestion\x18\x03 \x01(\v2&.resources.qualifications.ExamQuestionR\bquestion\x12F\n" +
	"\bresponse\x18\x04 \x01(\v2*.resources.qualifications.ExamResponseDataR\bresponse\"\xc2\x03\n" +
	"\x10ExamResponseData\x12O\n" +
	"\tseparator\x18\x03 \x01(\v2/.resources.qualifications.ExamResponseSeparatorH\x00R\tseparator\x12C\n" +
	"\x05yesno\x18\x04 \x01(\v2+.resources.qualifications.ExamResponseYesNoH\x00R\x05yesno\x12I\n" +
	"\tfree_text\x18\x05 \x01(\v2*.resources.qualifications.ExamResponseTextH\x00R\bfreeText\x12Y\n" +
	"\rsingle_choice\x18\x06 \x01(\v22.resources.qualifications.ExamResponseSingleChoiceH\x00R\fsingleChoice\x12_\n" +
	"\x0fmultiple_choice\x18\a \x01(\v24.resources.qualifications.ExamResponseMultipleChoiceH\x00R\x0emultipleChoiceB\x11\n" +
	"\bresponse\x12\x05\xbaH\x02\b\x01\"\x17\n" +
	"\x15ExamResponseSeparator\")\n" +
	"\x11ExamResponseYesNo\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\"1\n" +
	"\x10ExamResponseText\x12\x1d\n" +
	"\x04text\x18\x01 \x01(\tB\t\xbaH\x06r\x04(\xa0\xc2\x1eR\x04text\"<\n" +
	"\x18ExamResponseSingleChoice\x12 \n" +
	"\x06choice\x18\x01 \x01(\tB\b\xbaH\x05r\x03\x18\x80\x04R\x06choice\"@\n" +
	"\x1aExamResponseMultipleChoice\x12\"\n" +
	"\achoices\x18\x01 \x03(\tB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\achoices\"d\n" +
	"\vExamGrading\x12U\n" +
	"\tresponses\x18\x01 \x03(\v2-.resources.qualifications.ExamGradingResponseB\b\xbaH\x05\x92\x01\x02\x10dR\tresponses\"\x8a\x01\n" +
	"\x13ExamGradingResponse\x12\x1f\n" +
	"\vquestion_id\x18\x01 \x01(\x03R\n" +
	"questionId\x12'\n" +
	"\x06points\x18\x02 \x01(\x02B\x0f\xbaH\f\n" +
	"\n" +
	"\x1d\x00\x00zD-\x00\x00\x00\x00R\x06points\x12\x1d\n" +
	"\achecked\x18\x03 \x01(\bH\x00R\achecked\x88\x01\x01B\n" +
	"\n" +
	"\b_checkedB[ZYgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/qualifications;qualificationsb\x06proto3"

var (
	file_resources_qualifications_exam_proto_rawDescOnce sync.Once
	file_resources_qualifications_exam_proto_rawDescData []byte
)

func file_resources_qualifications_exam_proto_rawDescGZIP() []byte {
	file_resources_qualifications_exam_proto_rawDescOnce.Do(func() {
		file_resources_qualifications_exam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resources_qualifications_exam_proto_rawDesc), len(file_resources_qualifications_exam_proto_rawDesc)))
	})
	return file_resources_qualifications_exam_proto_rawDescData
}

var file_resources_qualifications_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_resources_qualifications_exam_proto_goTypes = []any{
	(*ExamQuestions)(nil),              // 0: resources.qualifications.ExamQuestions
	(*ExamQuestion)(nil),               // 1: resources.qualifications.ExamQuestion
	(*ExamQuestionData)(nil),           // 2: resources.qualifications.ExamQuestionData
	(*ExamQuestionSeparator)(nil),      // 3: resources.qualifications.ExamQuestionSeparator
	(*ExamQuestionImage)(nil),          // 4: resources.qualifications.ExamQuestionImage
	(*ExamQuestionYesNo)(nil),          // 5: resources.qualifications.ExamQuestionYesNo
	(*ExamQuestionText)(nil),           // 6: resources.qualifications.ExamQuestionText
	(*ExamQuestionSingleChoice)(nil),   // 7: resources.qualifications.ExamQuestionSingleChoice
	(*ExamQuestionMultipleChoice)(nil), // 8: resources.qualifications.ExamQuestionMultipleChoice
	(*ExamQuestionAnswerData)(nil),     // 9: resources.qualifications.ExamQuestionAnswerData
	(*ExamUser)(nil),                   // 10: resources.qualifications.ExamUser
	(*ExamResponses)(nil),              // 11: resources.qualifications.ExamResponses
	(*ExamResponse)(nil),               // 12: resources.qualifications.ExamResponse
	(*ExamResponseData)(nil),           // 13: resources.qualifications.ExamResponseData
	(*ExamResponseSeparator)(nil),      // 14: resources.qualifications.ExamResponseSeparator
	(*ExamResponseYesNo)(nil),          // 15: resources.qualifications.ExamResponseYesNo
	(*ExamResponseText)(nil),           // 16: resources.qualifications.ExamResponseText
	(*ExamResponseSingleChoice)(nil),   // 17: resources.qualifications.ExamResponseSingleChoice
	(*ExamResponseMultipleChoice)(nil), // 18: resources.qualifications.ExamResponseMultipleChoice
	(*ExamGrading)(nil),                // 19: resources.qualifications.ExamGrading
	(*ExamGradingResponse)(nil),        // 20: resources.qualifications.ExamGradingResponse
	(*timestamp.Timestamp)(nil),        // 21: resources.timestamp.Timestamp
	(*file.File)(nil),                  // 22: resources.file.File
}
var file_resources_qualifications_exam_proto_depIdxs = []int32{
	1,  // 0: resources.qualifications.ExamQuestions.questions:type_name -> resources.qualifications.ExamQuestion
	21, // 1: resources.qualifications.ExamQuestion.created_at:type_name -> resources.timestamp.Timestamp
	21, // 2: resources.qualifications.ExamQuestion.updated_at:type_name -> resources.timestamp.Timestamp
	2,  // 3: resources.qualifications.ExamQuestion.data:type_name -> resources.qualifications.ExamQuestionData
	9,  // 4: resources.qualifications.ExamQuestion.answer:type_name -> resources.qualifications.ExamQuestionAnswerData
	3,  // 5: resources.qualifications.ExamQuestionData.separator:type_name -> resources.qualifications.ExamQuestionSeparator
	4,  // 6: resources.qualifications.ExamQuestionData.image:type_name -> resources.qualifications.ExamQuestionImage
	5,  // 7: resources.qualifications.ExamQuestionData.yesno:type_name -> resources.qualifications.ExamQuestionYesNo
	6,  // 8: resources.qualifications.ExamQuestionData.free_text:type_name -> resources.qualifications.ExamQuestionText
	7,  // 9: resources.qualifications.ExamQuestionData.single_choice:type_name -> resources.qualifications.ExamQuestionSingleChoice
	8,  // 10: resources.qualifications.ExamQuestionData.multiple_choice:type_name -> resources.qualifications.ExamQuestionMultipleChoice
	22, // 11: resources.qualifications.ExamQuestionImage.image:type_name -> resources.file.File
	15, // 12: resources.qualifications.ExamQuestionAnswerData.yesno:type_name -> resources.qualifications.ExamResponseYesNo
	16, // 13: resources.qualifications.ExamQuestionAnswerData.free_text:type_name -> resources.qualifications.ExamResponseText
	17, // 14: resources.qualifications.ExamQuestionAnswerData.single_choice:type_name -> resources.qualifications.ExamResponseSingleChoice
	18, // 15: resources.qualifications.ExamQuestionAnswerData.multiple_choice:type_name -> resources.qualifications.ExamResponseMultipleChoice
	21, // 16: resources.qualifications.ExamUser.created_at:type_name -> resources.timestamp.Timestamp
	21, // 17: resources.qualifications.ExamUser.started_at:type_name -> resources.timestamp.Timestamp
	21, // 18: resources.qualifications.ExamUser.ends_at:type_name -> resources.timestamp.Timestamp
	21, // 19: resources.qualifications.ExamUser.ended_at:type_name -> resources.timestamp.Timestamp
	12, // 20: resources.qualifications.ExamResponses.responses:type_name -> resources.qualifications.ExamResponse
	1,  // 21: resources.qualifications.ExamResponse.question:type_name -> resources.qualifications.ExamQuestion
	13, // 22: resources.qualifications.ExamResponse.response:type_name -> resources.qualifications.ExamResponseData
	14, // 23: resources.qualifications.ExamResponseData.separator:type_name -> resources.qualifications.ExamResponseSeparator
	15, // 24: resources.qualifications.ExamResponseData.yesno:type_name -> resources.qualifications.ExamResponseYesNo
	16, // 25: resources.qualifications.ExamResponseData.free_text:type_name -> resources.qualifications.ExamResponseText
	17, // 26: resources.qualifications.ExamResponseData.single_choice:type_name -> resources.qualifications.ExamResponseSingleChoice
	18, // 27: resources.qualifications.ExamResponseData.multiple_choice:type_name -> resources.qualifications.ExamResponseMultipleChoice
	20, // 28: resources.qualifications.ExamGrading.responses:type_name -> resources.qualifications.ExamGradingResponse
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_resources_qualifications_exam_proto_init() }
func file_resources_qualifications_exam_proto_init() {
	if File_resources_qualifications_exam_proto != nil {
		return
	}
	file_resources_qualifications_exam_proto_msgTypes[1].OneofWrappers = []any{}
	file_resources_qualifications_exam_proto_msgTypes[2].OneofWrappers = []any{
		(*ExamQuestionData_Separator)(nil),
		(*ExamQuestionData_Image)(nil),
		(*ExamQuestionData_Yesno)(nil),
		(*ExamQuestionData_FreeText)(nil),
		(*ExamQuestionData_SingleChoice)(nil),
		(*ExamQuestionData_MultipleChoice)(nil),
	}
	file_resources_qualifications_exam_proto_msgTypes[4].OneofWrappers = []any{}
	file_resources_qualifications_exam_proto_msgTypes[8].OneofWrappers = []any{}
	file_resources_qualifications_exam_proto_msgTypes[9].OneofWrappers = []any{
		(*ExamQuestionAnswerData_Yesno)(nil),
		(*ExamQuestionAnswerData_FreeText)(nil),
		(*ExamQuestionAnswerData_SingleChoice)(nil),
		(*ExamQuestionAnswerData_MultipleChoice)(nil),
	}
	file_resources_qualifications_exam_proto_msgTypes[10].OneofWrappers = []any{}
	file_resources_qualifications_exam_proto_msgTypes[13].OneofWrappers = []any{
		(*ExamResponseData_Separator)(nil),
		(*ExamResponseData_Yesno)(nil),
		(*ExamResponseData_FreeText)(nil),
		(*ExamResponseData_SingleChoice)(nil),
		(*ExamResponseData_MultipleChoice)(nil),
	}
	file_resources_qualifications_exam_proto_msgTypes[20].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resources_qualifications_exam_proto_rawDesc), len(file_resources_qualifications_exam_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_qualifications_exam_proto_goTypes,
		DependencyIndexes: file_resources_qualifications_exam_proto_depIdxs,
		MessageInfos:      file_resources_qualifications_exam_proto_msgTypes,
	}.Build()
	File_resources_qualifications_exam_proto = out.File
	file_resources_qualifications_exam_proto_goTypes = nil
	file_resources_qualifications_exam_proto_depIdxs = nil
}
