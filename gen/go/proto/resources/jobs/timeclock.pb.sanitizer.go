// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/jobs/timeclock.proto

package jobs

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *TimeclockEntry) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Date
	if m.Date != nil {
		if v, ok := any(m.GetDate()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: EndTime
	if m.EndTime != nil {
		if v, ok := any(m.GetEndTime()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: StartTime
	if m.StartTime != nil {
		if v, ok := any(m.GetStartTime()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: User
	if m.User != nil {
		if v, ok := any(m.GetUser()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *TimeclockStats) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *TimeclockWeeklyStats) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}
