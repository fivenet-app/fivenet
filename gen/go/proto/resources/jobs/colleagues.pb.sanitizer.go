// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/jobs/colleagues.proto

package jobs

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *Colleague) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Dateofbirth
	m.Dateofbirth = htmlsanitizer.Sanitize(m.Dateofbirth)

	// Field: Email
	if m.Email != nil {
		*m.Email = htmlsanitizer.StripTags(*m.Email)
	}

	// Field: Firstname
	m.Firstname = htmlsanitizer.Sanitize(m.Firstname)

	// Field: Identifier
	if m.Identifier != nil {
		*m.Identifier = htmlsanitizer.Sanitize(*m.Identifier)
	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: JobGradeLabel
	if m.JobGradeLabel != nil {
		*m.JobGradeLabel = htmlsanitizer.Sanitize(*m.JobGradeLabel)
	}

	// Field: JobLabel
	if m.JobLabel != nil {
		*m.JobLabel = htmlsanitizer.Sanitize(*m.JobLabel)
	}

	// Field: Lastname
	m.Lastname = htmlsanitizer.Sanitize(m.Lastname)

	// Field: PhoneNumber
	if m.PhoneNumber != nil {
		*m.PhoneNumber = htmlsanitizer.Sanitize(*m.PhoneNumber)
	}

	// Field: ProfilePicture
	if m.ProfilePicture != nil {
		*m.ProfilePicture = htmlsanitizer.Sanitize(*m.ProfilePicture)
	}

	// Field: Props
	if m.Props != nil {
		if v, ok := any(m.GetProps()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *ColleagueProps) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: AbsenceBegin
	if m.AbsenceBegin != nil {
		if v, ok := any(m.GetAbsenceBegin()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: AbsenceEnd
	if m.AbsenceEnd != nil {
		if v, ok := any(m.GetAbsenceEnd()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: DeletedAt
	if m.DeletedAt != nil {
		if v, ok := any(m.GetDeletedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: Labels
	if m.Labels != nil {
		if v, ok := any(m.GetLabels()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: NamePrefix
	if m.NamePrefix != nil {
		*m.NamePrefix = htmlsanitizer.Sanitize(*m.NamePrefix)
	}

	// Field: NameSuffix
	if m.NameSuffix != nil {
		*m.NameSuffix = htmlsanitizer.Sanitize(*m.NameSuffix)
	}

	// Field: Note
	if m.Note != nil {
		*m.Note = htmlsanitizer.StripTags(*m.Note)
	}

	return nil
}
