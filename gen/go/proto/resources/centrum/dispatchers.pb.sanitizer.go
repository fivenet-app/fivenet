// Code generated by protoc-gen-backend. DO NOT EDIT.
// source: resources/centrum/dispatchers.proto

package centrum

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *Dispatchers) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Dispatchers
	for idx, item := range m.Dispatchers {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Job
	m.Job = htmlsanitizer.Sanitize(m.Job)

	// Field: JobLabel
	if m.JobLabel != nil {
		*m.JobLabel = htmlsanitizer.Sanitize(*m.JobLabel)
	}

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *JobDispatchers) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Dispatchers
	for idx, item := range m.Dispatchers {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}
