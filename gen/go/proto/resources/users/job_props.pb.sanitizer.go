// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/users/job_props.proto

package users

func (m *JobProps) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: DeletedAt
	if m.DeletedAt != nil {
		if v, ok := any(m.GetDeletedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: DiscordLastSync
	if m.DiscordLastSync != nil {
		if v, ok := any(m.GetDiscordLastSync()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: DiscordSyncChanges
	if m.DiscordSyncChanges != nil {
		if v, ok := any(m.GetDiscordSyncChanges()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: DiscordSyncSettings
	if m.DiscordSyncSettings != nil {
		if v, ok := any(m.GetDiscordSyncSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: LogoUrl
	if m.LogoUrl != nil {
		if v, ok := any(m.GetLogoUrl()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: QuickButtons
	if m.QuickButtons != nil {
		if v, ok := any(m.GetQuickButtons()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Settings
	if m.Settings != nil {
		if v, ok := any(m.GetSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *QuickButtons) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}
