// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: resources/users/licenses.proto

package users

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type License struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_resources_users_licenses_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_resources_users_licenses_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_resources_users_licenses_proto_rawDescGZIP(), []int{0}
}

func (x *License) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *License) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type CitizensLicenses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Licenses      []*License             `protobuf:"bytes,2,rep,name=licenses,proto3" json:"licenses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CitizensLicenses) Reset() {
	*x = CitizensLicenses{}
	mi := &file_resources_users_licenses_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CitizensLicenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitizensLicenses) ProtoMessage() {}

func (x *CitizensLicenses) ProtoReflect() protoreflect.Message {
	mi := &file_resources_users_licenses_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitizensLicenses.ProtoReflect.Descriptor instead.
func (*CitizensLicenses) Descriptor() ([]byte, []int) {
	return file_resources_users_licenses_proto_rawDescGZIP(), []int{1}
}

func (x *CitizensLicenses) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CitizensLicenses) GetLicenses() []*License {
	if x != nil {
		return x.Licenses
	}
	return nil
}

var File_resources_users_licenses_proto protoreflect.FileDescriptor

const file_resources_users_licenses_proto_rawDesc = "" +
	"\n" +
	"\x1eresources/users/licenses.proto\x12\x0fresources.users\"G\n" +
	"\aLicense\x12\x1d\n" +
	"\x04type\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18<R\x04type\x12\x1d\n" +
	"\x05label\x18\x02 \x01(\tB\a\xbaH\x04r\x02\x18<R\x05label\"j\n" +
	"\x10CitizensLicenses\x12 \n" +
	"\auser_id\x18\x01 \x01(\x05B\a\xbaH\x04\x1a\x02(\x00R\x06userId\x124\n" +
	"\blicenses\x18\x02 \x03(\v2\x18.resources.users.LicenseR\blicensesBIZGgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/users;usersb\x06proto3"

var (
	file_resources_users_licenses_proto_rawDescOnce sync.Once
	file_resources_users_licenses_proto_rawDescData []byte
)

func file_resources_users_licenses_proto_rawDescGZIP() []byte {
	file_resources_users_licenses_proto_rawDescOnce.Do(func() {
		file_resources_users_licenses_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resources_users_licenses_proto_rawDesc), len(file_resources_users_licenses_proto_rawDesc)))
	})
	return file_resources_users_licenses_proto_rawDescData
}

var file_resources_users_licenses_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_resources_users_licenses_proto_goTypes = []any{
	(*License)(nil),          // 0: resources.users.License
	(*CitizensLicenses)(nil), // 1: resources.users.CitizensLicenses
}
var file_resources_users_licenses_proto_depIdxs = []int32{
	0, // 0: resources.users.CitizensLicenses.licenses:type_name -> resources.users.License
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_resources_users_licenses_proto_init() }
func file_resources_users_licenses_proto_init() {
	if File_resources_users_licenses_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resources_users_licenses_proto_rawDesc), len(file_resources_users_licenses_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_users_licenses_proto_goTypes,
		DependencyIndexes: file_resources_users_licenses_proto_depIdxs,
		MessageInfos:      file_resources_users_licenses_proto_msgTypes,
	}.Build()
	File_resources_users_licenses_proto = out.File
	file_resources_users_licenses_proto_goTypes = nil
	file_resources_users_licenses_proto_depIdxs = nil
}
