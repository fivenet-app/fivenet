// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: resources/livemap/user_marker.proto

package livemap

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	centrum "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/centrum"
	jobs "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/jobs"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserMarker struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserId    int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	X         float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y         float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	UpdatedAt *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	// @sanitize: method=StripTags
	Postal *string `protobuf:"bytes,5,opt,name=postal,proto3,oneof" json:"postal,omitempty"`
	// @sanitize: method=StripTags
	Color         *string         `protobuf:"bytes,6,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Job           string          `protobuf:"bytes,7,opt,name=job,proto3" json:"job,omitempty"`
	JobLabel      string          `protobuf:"bytes,8,opt,name=job_label,json=jobLabel,proto3" json:"job_label,omitempty"`
	JobGrade      *int32          `protobuf:"varint,13,opt,name=job_grade,json=jobGrade,proto3,oneof" json:"job_grade,omitempty"`
	User          *jobs.Colleague `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty" alias:"user"` // @gotags: alias:"user"
	UnitId        *uint64         `protobuf:"varint,10,opt,name=unit_id,json=unitId,proto3,oneof" json:"unit_id,omitempty"`
	Unit          *centrum.Unit   `protobuf:"bytes,11,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
	Hidden        bool            `protobuf:"varint,12,opt,name=hidden,proto3" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMarker) Reset() {
	*x = UserMarker{}
	mi := &file_resources_livemap_user_marker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarker) ProtoMessage() {}

func (x *UserMarker) ProtoReflect() protoreflect.Message {
	mi := &file_resources_livemap_user_marker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarker.ProtoReflect.Descriptor instead.
func (*UserMarker) Descriptor() ([]byte, []int) {
	return file_resources_livemap_user_marker_proto_rawDescGZIP(), []int{0}
}

func (x *UserMarker) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserMarker) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *UserMarker) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *UserMarker) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserMarker) GetPostal() string {
	if x != nil && x.Postal != nil {
		return *x.Postal
	}
	return ""
}

func (x *UserMarker) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UserMarker) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UserMarker) GetJobLabel() string {
	if x != nil {
		return x.JobLabel
	}
	return ""
}

func (x *UserMarker) GetJobGrade() int32 {
	if x != nil && x.JobGrade != nil {
		return *x.JobGrade
	}
	return 0
}

func (x *UserMarker) GetUser() *jobs.Colleague {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserMarker) GetUnitId() uint64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *UserMarker) GetUnit() *centrum.Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *UserMarker) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

var File_resources_livemap_user_marker_proto protoreflect.FileDescriptor

const file_resources_livemap_user_marker_proto_rawDesc = "" +
	"\n" +
	"#resources/livemap/user_marker.proto\x12\x11resources.livemap\x1a\x1dresources/centrum/units.proto\x1a\x1fresources/jobs/colleagues.proto\x1a#resources/timestamp/timestamp.proto\x1a\x17validate/validate.proto\"\xa4\x04\n" +
	"\n" +
	"UserMarker\x12 \n" +
	"\auser_id\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x06userId\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12B\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\tupdatedAt\x88\x01\x01\x12$\n" +
	"\x06postal\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x180H\x01R\x06postal\x88\x01\x01\x126\n" +
	"\x05color\x18\x06 \x01(\tB\x1b\xfaB\x18r\x162\x11^#[A-Fa-f0-9]{6}$\x98\x01\aH\x02R\x05color\x88\x01\x01\x12\x19\n" +
	"\x03job\x18\a \x01(\tB\a\xfaB\x04r\x02\x18\x14R\x03job\x12\x1b\n" +
	"\tjob_label\x18\b \x01(\tR\bjobLabel\x12 \n" +
	"\tjob_grade\x18\r \x01(\x05H\x03R\bjobGrade\x88\x01\x01\x12-\n" +
	"\x04user\x18\t \x01(\v2\x19.resources.jobs.ColleagueR\x04user\x12\x1c\n" +
	"\aunit_id\x18\n" +
	" \x01(\x04H\x04R\x06unitId\x88\x01\x01\x120\n" +
	"\x04unit\x18\v \x01(\v2\x17.resources.centrum.UnitH\x05R\x04unit\x88\x01\x01\x12\x16\n" +
	"\x06hidden\x18\f \x01(\bR\x06hiddenB\r\n" +
	"\v_updated_atB\t\n" +
	"\a_postalB\b\n" +
	"\x06_colorB\f\n" +
	"\n" +
	"_job_gradeB\n" +
	"\n" +
	"\b_unit_idB\a\n" +
	"\x05_unitBMZKgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/livemap;livemapb\x06proto3"

var (
	file_resources_livemap_user_marker_proto_rawDescOnce sync.Once
	file_resources_livemap_user_marker_proto_rawDescData []byte
)

func file_resources_livemap_user_marker_proto_rawDescGZIP() []byte {
	file_resources_livemap_user_marker_proto_rawDescOnce.Do(func() {
		file_resources_livemap_user_marker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resources_livemap_user_marker_proto_rawDesc), len(file_resources_livemap_user_marker_proto_rawDesc)))
	})
	return file_resources_livemap_user_marker_proto_rawDescData
}

var file_resources_livemap_user_marker_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_resources_livemap_user_marker_proto_goTypes = []any{
	(*UserMarker)(nil),          // 0: resources.livemap.UserMarker
	(*timestamp.Timestamp)(nil), // 1: resources.timestamp.Timestamp
	(*jobs.Colleague)(nil),      // 2: resources.jobs.Colleague
	(*centrum.Unit)(nil),        // 3: resources.centrum.Unit
}
var file_resources_livemap_user_marker_proto_depIdxs = []int32{
	1, // 0: resources.livemap.UserMarker.updated_at:type_name -> resources.timestamp.Timestamp
	2, // 1: resources.livemap.UserMarker.user:type_name -> resources.jobs.Colleague
	3, // 2: resources.livemap.UserMarker.unit:type_name -> resources.centrum.Unit
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_resources_livemap_user_marker_proto_init() }
func file_resources_livemap_user_marker_proto_init() {
	if File_resources_livemap_user_marker_proto != nil {
		return
	}
	file_resources_livemap_user_marker_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resources_livemap_user_marker_proto_rawDesc), len(file_resources_livemap_user_marker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_livemap_user_marker_proto_goTypes,
		DependencyIndexes: file_resources_livemap_user_marker_proto_depIdxs,
		MessageInfos:      file_resources_livemap_user_marker_proto_msgTypes,
	}.Build()
	File_resources_livemap_user_marker_proto = out.File
	file_resources_livemap_user_marker_proto_goTypes = nil
	file_resources_livemap_user_marker_proto_depIdxs = nil
}
