// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: resources/livemap/user_marker.proto

package livemap

import (
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/dbscanner"
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/sanitizer"
	centrum "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/centrum"
	jobs "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/jobs"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserMarker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	X             float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Postal        *string                `protobuf:"bytes,5,opt,name=postal,proto3,oneof" json:"postal,omitempty"`
	Color         *string                `protobuf:"bytes,6,opt,name=color,proto3,oneof" json:"color,omitempty"`
	Job           string                 `protobuf:"bytes,7,opt,name=job,proto3" json:"job,omitempty"`
	JobLabel      string                 `protobuf:"bytes,8,opt,name=job_label,json=jobLabel,proto3" json:"job_label,omitempty"`
	JobGrade      *int32                 `protobuf:"varint,13,opt,name=job_grade,json=jobGrade,proto3,oneof" json:"job_grade,omitempty"`
	User          *jobs.Colleague        `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty" alias:"user"`
	UnitId        *int64                 `protobuf:"varint,10,opt,name=unit_id,json=unitId,proto3,oneof" json:"unit_id,omitempty"`
	Unit          *centrum.Unit          `protobuf:"bytes,11,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
	Hidden        bool                   `protobuf:"varint,12,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Data          *UserMarkerData        `protobuf:"bytes,14,opt,name=data,proto3,oneof" json:"data,omitempty" alias:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMarker) Reset() {
	*x = UserMarker{}
	mi := &file_resources_livemap_user_marker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarker) ProtoMessage() {}

func (x *UserMarker) ProtoReflect() protoreflect.Message {
	mi := &file_resources_livemap_user_marker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarker.ProtoReflect.Descriptor instead.
func (*UserMarker) Descriptor() ([]byte, []int) {
	return file_resources_livemap_user_marker_proto_rawDescGZIP(), []int{0}
}

func (x *UserMarker) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserMarker) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *UserMarker) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *UserMarker) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserMarker) GetPostal() string {
	if x != nil && x.Postal != nil {
		return *x.Postal
	}
	return ""
}

func (x *UserMarker) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *UserMarker) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UserMarker) GetJobLabel() string {
	if x != nil {
		return x.JobLabel
	}
	return ""
}

func (x *UserMarker) GetJobGrade() int32 {
	if x != nil && x.JobGrade != nil {
		return *x.JobGrade
	}
	return 0
}

func (x *UserMarker) GetUser() *jobs.Colleague {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserMarker) GetUnitId() int64 {
	if x != nil && x.UnitId != nil {
		return *x.UnitId
	}
	return 0
}

func (x *UserMarker) GetUnit() *centrum.Unit {
	if x != nil {
		return x.Unit
	}
	return nil
}

func (x *UserMarker) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *UserMarker) GetData() *UserMarkerData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserMarkerData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IsInVehicle      bool                   `protobuf:"varint,1,opt,name=is_in_vehicle,json=isInVehicle,proto3" json:"is_in_vehicle,omitempty"`
	VehiclePlate     *string                `protobuf:"bytes,2,opt,name=vehicle_plate,json=vehiclePlate,proto3,oneof" json:"vehicle_plate,omitempty"`
	VehicleUpdatedAt *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=vehicle_updated_at,json=vehicleUpdatedAt,proto3,oneof" json:"vehicle_updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UserMarkerData) Reset() {
	*x = UserMarkerData{}
	mi := &file_resources_livemap_user_marker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMarkerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarkerData) ProtoMessage() {}

func (x *UserMarkerData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_livemap_user_marker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarkerData.ProtoReflect.Descriptor instead.
func (*UserMarkerData) Descriptor() ([]byte, []int) {
	return file_resources_livemap_user_marker_proto_rawDescGZIP(), []int{1}
}

func (x *UserMarkerData) GetIsInVehicle() bool {
	if x != nil {
		return x.IsInVehicle
	}
	return false
}

func (x *UserMarkerData) GetVehiclePlate() string {
	if x != nil && x.VehiclePlate != nil {
		return *x.VehiclePlate
	}
	return ""
}

func (x *UserMarkerData) GetVehicleUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.VehicleUpdatedAt
	}
	return nil
}

var File_resources_livemap_user_marker_proto protoreflect.FileDescriptor

const file_resources_livemap_user_marker_proto_rawDesc = "" +
	"\n" +
	"#resources/livemap/user_marker.proto\x12\x11resources.livemap\x1a!codegen/dbscanner/dbscanner.proto\x1a!codegen/sanitizer/sanitizer.proto\x1a\x1dresources/centrum/units.proto\x1a\x1fresources/jobs/colleagues.proto\x1a#resources/timestamp/timestamp.proto\x1a\x13tagger/tagger.proto\"\xfd\x04\n" +
	"\n" +
	"UserMarker\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12B\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\tupdatedAt\x88\x01\x01\x12.\n" +
	"\x06postal\x18\x05 \x01(\tB\x11\xda\xf3\x18\r\b\x01\x12\tStripTagsH\x01R\x06postal\x88\x01\x01\x12,\n" +
	"\x05color\x18\x06 \x01(\tB\x11\xda\xf3\x18\r\b\x01\x12\tStripTagsH\x02R\x05color\x88\x01\x01\x12\x10\n" +
	"\x03job\x18\a \x01(\tR\x03job\x12\x1b\n" +
	"\tjob_label\x18\b \x01(\tR\bjobLabel\x12 \n" +
	"\tjob_grade\x18\r \x01(\x05H\x03R\bjobGrade\x88\x01\x01\x12@\n" +
	"\x04user\x18\t \x01(\v2\x19.resources.jobs.ColleagueB\x11\x9a\x84\x9e\x03\falias:\"user\"R\x04user\x12\x1c\n" +
	"\aunit_id\x18\n" +
	" \x01(\x03H\x04R\x06unitId\x88\x01\x01\x120\n" +
	"\x04unit\x18\v \x01(\v2\x17.resources.centrum.UnitH\x05R\x04unit\x88\x01\x01\x12\x16\n" +
	"\x06hidden\x18\f \x01(\bR\x06hidden\x12M\n" +
	"\x04data\x18\x0e \x01(\v2!.resources.livemap.UserMarkerDataB\x11\x9a\x84\x9e\x03\falias:\"data\"H\x06R\x04data\x88\x01\x01B\r\n" +
	"\v_updated_atB\t\n" +
	"\a_postalB\b\n" +
	"\x06_colorB\f\n" +
	"\n" +
	"_job_gradeB\n" +
	"\n" +
	"\b_unit_idB\a\n" +
	"\x05_unitB\a\n" +
	"\x05_data\"\xe2\x01\n" +
	"\x0eUserMarkerData\x12\"\n" +
	"\ris_in_vehicle\x18\x01 \x01(\bR\visInVehicle\x12(\n" +
	"\rvehicle_plate\x18\x02 \x01(\tH\x00R\fvehiclePlate\x88\x01\x01\x12Q\n" +
	"\x12vehicle_updated_at\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampH\x01R\x10vehicleUpdatedAt\x88\x01\x01:\x06\xe2\xf3\x18\x02\b\x01B\x10\n" +
	"\x0e_vehicle_plateB\x15\n" +
	"\x13_vehicle_updated_atBMZKgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/livemap;livemapb\x06proto3"

var (
	file_resources_livemap_user_marker_proto_rawDescOnce sync.Once
	file_resources_livemap_user_marker_proto_rawDescData []byte
)

func file_resources_livemap_user_marker_proto_rawDescGZIP() []byte {
	file_resources_livemap_user_marker_proto_rawDescOnce.Do(func() {
		file_resources_livemap_user_marker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resources_livemap_user_marker_proto_rawDesc), len(file_resources_livemap_user_marker_proto_rawDesc)))
	})
	return file_resources_livemap_user_marker_proto_rawDescData
}

var file_resources_livemap_user_marker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_resources_livemap_user_marker_proto_goTypes = []any{
	(*UserMarker)(nil),          // 0: resources.livemap.UserMarker
	(*UserMarkerData)(nil),      // 1: resources.livemap.UserMarkerData
	(*timestamp.Timestamp)(nil), // 2: resources.timestamp.Timestamp
	(*jobs.Colleague)(nil),      // 3: resources.jobs.Colleague
	(*centrum.Unit)(nil),        // 4: resources.centrum.Unit
}
var file_resources_livemap_user_marker_proto_depIdxs = []int32{
	2, // 0: resources.livemap.UserMarker.updated_at:type_name -> resources.timestamp.Timestamp
	3, // 1: resources.livemap.UserMarker.user:type_name -> resources.jobs.Colleague
	4, // 2: resources.livemap.UserMarker.unit:type_name -> resources.centrum.Unit
	1, // 3: resources.livemap.UserMarker.data:type_name -> resources.livemap.UserMarkerData
	2, // 4: resources.livemap.UserMarkerData.vehicle_updated_at:type_name -> resources.timestamp.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_resources_livemap_user_marker_proto_init() }
func file_resources_livemap_user_marker_proto_init() {
	if File_resources_livemap_user_marker_proto != nil {
		return
	}
	file_resources_livemap_user_marker_proto_msgTypes[0].OneofWrappers = []any{}
	file_resources_livemap_user_marker_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resources_livemap_user_marker_proto_rawDesc), len(file_resources_livemap_user_marker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_livemap_user_marker_proto_goTypes,
		DependencyIndexes: file_resources_livemap_user_marker_proto_depIdxs,
		MessageInfos:      file_resources_livemap_user_marker_proto_msgTypes,
	}.Build()
	File_resources_livemap_user_marker_proto = out.File
	file_resources_livemap_user_marker_proto_goTypes = nil
	file_resources_livemap_user_marker_proto_depIdxs = nil
}
