// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/livemap/user_marker.proto

package livemap

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

func (m *UserMarker) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Color

	if m.Color != nil {
		*m.Color = htmlsanitizer.StripTags(*m.Color)
	}

	// Field: Data
	if m.Data != nil {
		if v, ok := any(m.GetData()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Postal

	if m.Postal != nil {
		*m.Postal = htmlsanitizer.StripTags(*m.Postal)
	}

	// Field: Unit
	if m.Unit != nil {
		if v, ok := any(m.GetUnit()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: UpdatedAt
	if m.UpdatedAt != nil {
		if v, ok := any(m.GetUpdatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: User
	if m.User != nil {
		if v, ok := any(m.GetUser()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *UserMarkerData) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: VehicleUpdatedAt
	if m.VehicleUpdatedAt != nil {
		if v, ok := any(m.GetVehicleUpdatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}
