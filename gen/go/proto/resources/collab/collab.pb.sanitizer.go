// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/collab/collab.proto

package collab

func (m *AwarenessPing) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Data

	return nil
}

func (m *ClientPacket) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Awareness
	switch v := m.Msg.(type) {

	case *ClientPacket_Awareness:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Hello
	case *ClientPacket_Hello:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: SyncStep
	case *ClientPacket_SyncStep:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: YjsUpdate
	case *ClientPacket_YjsUpdate:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *ClientUpdate) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *CollabHandshake) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *CollabInit) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *FirstPromote) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *ServerPacket) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Awareness
	switch v := m.Msg.(type) {

	case *ServerPacket_Awareness:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: ClientUpdate
	case *ServerPacket_ClientUpdate:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Handshake
	case *ServerPacket_Handshake:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: Promote
	case *ServerPacket_Promote:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: SyncStep
	case *ServerPacket_SyncStep:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: TargetSaved
	case *ServerPacket_TargetSaved:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

		// Field: YjsUpdate
	case *ServerPacket_YjsUpdate:
		if v, ok := any(v).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *SyncStep) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Data

	return nil
}

func (m *TargetSaved) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *YjsUpdate) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Data

	return nil
}
