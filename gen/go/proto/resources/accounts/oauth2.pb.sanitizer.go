// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/accounts/oauth2.proto

package accounts

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *OAuth2Account) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: CreatedAt
	if m.CreatedAt != nil {
		if v, ok := any(m.GetCreatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: ExternalId
	m.ExternalId = htmlsanitizer.Sanitize(m.ExternalId)

	// Field: ProfilePicture
	m.ProfilePicture = htmlsanitizer.Sanitize(m.ProfilePicture)

	// Field: Provider
	if m.Provider != nil {
		if v, ok := any(m.GetProvider()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: ProviderName
	m.ProviderName = htmlsanitizer.Sanitize(m.ProviderName)

	// Field: Username
	m.Username = htmlsanitizer.Sanitize(m.Username)

	return nil
}

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *OAuth2Provider) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Homepage
	m.Homepage = htmlsanitizer.Sanitize(m.Homepage)

	// Field: Icon
	if m.Icon != nil {
		*m.Icon = htmlsanitizer.Sanitize(*m.Icon)
	}

	// Field: Label
	m.Label = htmlsanitizer.Sanitize(m.Label)

	// Field: Name
	m.Name = htmlsanitizer.Sanitize(m.Name)

	return nil
}
