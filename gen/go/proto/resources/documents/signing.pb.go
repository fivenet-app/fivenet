// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: resources/documents/signing.proto

package documents

import (
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/dbscanner"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	users "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignatureBindingMode int32

const (
	SignatureBindingMode_SIGNATURE_BINDING_MODE_UNSPECIFIED SignatureBindingMode = 0
	// Invalidates on content edits
	SignatureBindingMode_SIGNATURE_BINDING_MODE_BINDING SignatureBindingMode = 1
	// Stays but marked 'signed on vX'
	SignatureBindingMode_SIGNATURE_BINDING_MODE_NONBINDING SignatureBindingMode = 2
)

// Enum value maps for SignatureBindingMode.
var (
	SignatureBindingMode_name = map[int32]string{
		0: "SIGNATURE_BINDING_MODE_UNSPECIFIED",
		1: "SIGNATURE_BINDING_MODE_BINDING",
		2: "SIGNATURE_BINDING_MODE_NONBINDING",
	}
	SignatureBindingMode_value = map[string]int32{
		"SIGNATURE_BINDING_MODE_UNSPECIFIED": 0,
		"SIGNATURE_BINDING_MODE_BINDING":     1,
		"SIGNATURE_BINDING_MODE_NONBINDING":  2,
	}
)

func (x SignatureBindingMode) Enum() *SignatureBindingMode {
	p := new(SignatureBindingMode)
	*p = x
	return p
}

func (x SignatureBindingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureBindingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_signing_proto_enumTypes[0].Descriptor()
}

func (SignatureBindingMode) Type() protoreflect.EnumType {
	return &file_resources_documents_signing_proto_enumTypes[0]
}

func (x SignatureBindingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureBindingMode.Descriptor instead.
func (SignatureBindingMode) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{0}
}

type SignatureType int32

const (
	SignatureType_SIGNATURE_TYPE_UNSPECIFIED SignatureType = 0
	SignatureType_SIGNATURE_TYPE_FREEHAND    SignatureType = 1
	SignatureType_SIGNATURE_TYPE_TYPED       SignatureType = 2
	SignatureType_SIGNATURE_TYPE_STAMP       SignatureType = 3
)

// Enum value maps for SignatureType.
var (
	SignatureType_name = map[int32]string{
		0: "SIGNATURE_TYPE_UNSPECIFIED",
		1: "SIGNATURE_TYPE_FREEHAND",
		2: "SIGNATURE_TYPE_TYPED",
		3: "SIGNATURE_TYPE_STAMP",
	}
	SignatureType_value = map[string]int32{
		"SIGNATURE_TYPE_UNSPECIFIED": 0,
		"SIGNATURE_TYPE_FREEHAND":    1,
		"SIGNATURE_TYPE_TYPED":       2,
		"SIGNATURE_TYPE_STAMP":       3,
	}
)

func (x SignatureType) Enum() *SignatureType {
	p := new(SignatureType)
	*p = x
	return p
}

func (x SignatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_signing_proto_enumTypes[1].Descriptor()
}

func (SignatureType) Type() protoreflect.EnumType {
	return &file_resources_documents_signing_proto_enumTypes[1]
}

func (x SignatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureType.Descriptor instead.
func (SignatureType) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{1}
}

type SignatureAssigneeKind int32

const (
	SignatureAssigneeKind_SIGNATURE_ASSIGNEE_KIND_UNSPECIFIED SignatureAssigneeKind = 0
	SignatureAssigneeKind_SIGNATURE_ASSIGNEE_KIND_USER        SignatureAssigneeKind = 1
	SignatureAssigneeKind_SIGNATURE_ASSIGNEE_KIND_JOB_GRADE   SignatureAssigneeKind = 2
)

// Enum value maps for SignatureAssigneeKind.
var (
	SignatureAssigneeKind_name = map[int32]string{
		0: "SIGNATURE_ASSIGNEE_KIND_UNSPECIFIED",
		1: "SIGNATURE_ASSIGNEE_KIND_USER",
		2: "SIGNATURE_ASSIGNEE_KIND_JOB_GRADE",
	}
	SignatureAssigneeKind_value = map[string]int32{
		"SIGNATURE_ASSIGNEE_KIND_UNSPECIFIED": 0,
		"SIGNATURE_ASSIGNEE_KIND_USER":        1,
		"SIGNATURE_ASSIGNEE_KIND_JOB_GRADE":   2,
	}
)

func (x SignatureAssigneeKind) Enum() *SignatureAssigneeKind {
	p := new(SignatureAssigneeKind)
	*p = x
	return p
}

func (x SignatureAssigneeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureAssigneeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_signing_proto_enumTypes[2].Descriptor()
}

func (SignatureAssigneeKind) Type() protoreflect.EnumType {
	return &file_resources_documents_signing_proto_enumTypes[2]
}

func (x SignatureAssigneeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureAssigneeKind.Descriptor instead.
func (SignatureAssigneeKind) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{2}
}

type SignatureTaskStatus int32

const (
	SignatureTaskStatus_SIGNATURE_TASK_STATUS_UNSPECIFIED SignatureTaskStatus = 0
	SignatureTaskStatus_SIGNATURE_TASK_STATUS_PENDING     SignatureTaskStatus = 1
	SignatureTaskStatus_SIGNATURE_TASK_STATUS_COMPLETED   SignatureTaskStatus = 2
	SignatureTaskStatus_SIGNATURE_TASK_STATUS_EXPIRED     SignatureTaskStatus = 3
)

// Enum value maps for SignatureTaskStatus.
var (
	SignatureTaskStatus_name = map[int32]string{
		0: "SIGNATURE_TASK_STATUS_UNSPECIFIED",
		1: "SIGNATURE_TASK_STATUS_PENDING",
		2: "SIGNATURE_TASK_STATUS_COMPLETED",
		3: "SIGNATURE_TASK_STATUS_EXPIRED",
	}
	SignatureTaskStatus_value = map[string]int32{
		"SIGNATURE_TASK_STATUS_UNSPECIFIED": 0,
		"SIGNATURE_TASK_STATUS_PENDING":     1,
		"SIGNATURE_TASK_STATUS_COMPLETED":   2,
		"SIGNATURE_TASK_STATUS_EXPIRED":     3,
	}
)

func (x SignatureTaskStatus) Enum() *SignatureTaskStatus {
	p := new(SignatureTaskStatus)
	*p = x
	return p
}

func (x SignatureTaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureTaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_signing_proto_enumTypes[3].Descriptor()
}

func (SignatureTaskStatus) Type() protoreflect.EnumType {
	return &file_resources_documents_signing_proto_enumTypes[3]
}

func (x SignatureTaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureTaskStatus.Descriptor instead.
func (SignatureTaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{3}
}

type SignatureStatus int32

const (
	SignatureStatus_SIGNATURE_STATUS_UNSPECIFIED SignatureStatus = 0
	SignatureStatus_SIGNATURE_STATUS_VALID       SignatureStatus = 1
	SignatureStatus_SIGNATURE_STATUS_REVOKED     SignatureStatus = 2
	SignatureStatus_SIGNATURE_STATUS_INVALID     SignatureStatus = 3
)

// Enum value maps for SignatureStatus.
var (
	SignatureStatus_name = map[int32]string{
		0: "SIGNATURE_STATUS_UNSPECIFIED",
		1: "SIGNATURE_STATUS_VALID",
		2: "SIGNATURE_STATUS_REVOKED",
		3: "SIGNATURE_STATUS_INVALID",
	}
	SignatureStatus_value = map[string]int32{
		"SIGNATURE_STATUS_UNSPECIFIED": 0,
		"SIGNATURE_STATUS_VALID":       1,
		"SIGNATURE_STATUS_REVOKED":     2,
		"SIGNATURE_STATUS_INVALID":     3,
	}
)

func (x SignatureStatus) Enum() *SignatureStatus {
	p := new(SignatureStatus)
	*p = x
	return p
}

func (x SignatureStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_documents_signing_proto_enumTypes[4].Descriptor()
}

func (SignatureStatus) Type() protoreflect.EnumType {
	return &file_resources_documents_signing_proto_enumTypes[4]
}

func (x SignatureStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureStatus.Descriptor instead.
func (SignatureStatus) EnumDescriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{4}
}

type SignatureTypes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         []SignatureType        `protobuf:"varint,1,rep,packed,name=types,proto3,enum=resources.documents.SignatureType" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureTypes) Reset() {
	*x = SignatureTypes{}
	mi := &file_resources_documents_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureTypes) ProtoMessage() {}

func (x *SignatureTypes) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureTypes.ProtoReflect.Descriptor instead.
func (*SignatureTypes) Descriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureTypes) GetTypes() []SignatureType {
	if x != nil {
		return x.Types
	}
	return nil
}

type SignaturePolicy struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocumentId   int64                  `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	SnapshotDate *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	// "Leader", "Counterparty Rep"
	Label         string               `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Required      bool                 `protobuf:"varint,5,opt,name=required,proto3" json:"required,omitempty"`
	BindingMode   SignatureBindingMode `protobuf:"varint,6,opt,name=binding_mode,json=bindingMode,proto3,enum=resources.documents.SignatureBindingMode" json:"binding_mode,omitempty"`
	AllowedTypes  *SignatureTypes      `protobuf:"bytes,7,opt,name=allowed_types,json=allowedTypes,proto3" json:"allowed_types,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignaturePolicy) Reset() {
	*x = SignaturePolicy{}
	mi := &file_resources_documents_signing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignaturePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignaturePolicy) ProtoMessage() {}

func (x *SignaturePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_signing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignaturePolicy.ProtoReflect.Descriptor instead.
func (*SignaturePolicy) Descriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{1}
}

func (x *SignaturePolicy) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SignaturePolicy) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *SignaturePolicy) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

func (x *SignaturePolicy) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SignaturePolicy) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *SignaturePolicy) GetBindingMode() SignatureBindingMode {
	if x != nil {
		return x.BindingMode
	}
	return SignatureBindingMode_SIGNATURE_BINDING_MODE_UNSPECIFIED
}

func (x *SignaturePolicy) GetAllowedTypes() *SignatureTypes {
	if x != nil {
		return x.AllowedTypes
	}
	return nil
}

func (x *SignaturePolicy) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SignaturePolicy) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SignatureTask struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PolicyId     int64                  `protobuf:"varint,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	DocumentId   int64                  `protobuf:"varint,3,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	SnapshotDate *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	// Who is the task for? 1=USER, 2=JOB
	AssigneeKind SignatureAssigneeKind `protobuf:"varint,5,opt,name=assignee_kind,json=assigneeKind,proto3,enum=resources.documents.SignatureAssigneeKind" json:"assignee_kind,omitempty"`
	// USER assignment
	UserId *int32           `protobuf:"varint,6,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	User   *users.UserShort `protobuf:"bytes,7,opt,name=user,proto3,oneof" json:"user,omitempty"`
	// JOB assignment (claimable by any eligible user)
	Job           *string `protobuf:"bytes,8,opt,name=job,proto3,oneof" json:"job,omitempty"`
	JobLabel      *string `protobuf:"bytes,9,opt,name=job_label,json=jobLabel,proto3,oneof" json:"job_label,omitempty"`
	MinimumGrade  *int32  `protobuf:"varint,10,opt,name=minimum_grade,json=minimumGrade,proto3,oneof" json:"minimum_grade,omitempty"`
	JobGradeLabel *string `protobuf:"bytes,11,opt,name=job_grade_label,json=jobGradeLabel,proto3,oneof" json:"job_grade_label,omitempty"`
	// >=1; meaningful only for Job tasks; always 1 for User
	SlotNo        int32                `protobuf:"varint,12,opt,name=slot_no,json=slotNo,proto3" json:"slot_no,omitempty"`
	Status        SignatureTaskStatus  `protobuf:"varint,13,opt,name=status,proto3,enum=resources.documents.SignatureTaskStatus" json:"status,omitempty"`
	Reason        *string              `protobuf:"bytes,14,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CompletedAt   *timestamp.Timestamp `protobuf:"bytes,16,opt,name=completed_at,json=completedAt,proto3,oneof" json:"completed_at,omitempty"`
	SignatureId   *int64               `protobuf:"varint,17,opt,name=signature_id,json=signatureId,proto3,oneof" json:"signature_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureTask) Reset() {
	*x = SignatureTask{}
	mi := &file_resources_documents_signing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureTask) ProtoMessage() {}

func (x *SignatureTask) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_signing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureTask.ProtoReflect.Descriptor instead.
func (*SignatureTask) Descriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{2}
}

func (x *SignatureTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SignatureTask) GetPolicyId() int64 {
	if x != nil {
		return x.PolicyId
	}
	return 0
}

func (x *SignatureTask) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *SignatureTask) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

func (x *SignatureTask) GetAssigneeKind() SignatureAssigneeKind {
	if x != nil {
		return x.AssigneeKind
	}
	return SignatureAssigneeKind_SIGNATURE_ASSIGNEE_KIND_UNSPECIFIED
}

func (x *SignatureTask) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *SignatureTask) GetUser() *users.UserShort {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SignatureTask) GetJob() string {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return ""
}

func (x *SignatureTask) GetJobLabel() string {
	if x != nil && x.JobLabel != nil {
		return *x.JobLabel
	}
	return ""
}

func (x *SignatureTask) GetMinimumGrade() int32 {
	if x != nil && x.MinimumGrade != nil {
		return *x.MinimumGrade
	}
	return 0
}

func (x *SignatureTask) GetJobGradeLabel() string {
	if x != nil && x.JobGradeLabel != nil {
		return *x.JobGradeLabel
	}
	return ""
}

func (x *SignatureTask) GetSlotNo() int32 {
	if x != nil {
		return x.SlotNo
	}
	return 0
}

func (x *SignatureTask) GetStatus() SignatureTaskStatus {
	if x != nil {
		return x.Status
	}
	return SignatureTaskStatus_SIGNATURE_TASK_STATUS_UNSPECIFIED
}

func (x *SignatureTask) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *SignatureTask) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SignatureTask) GetCompletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *SignatureTask) GetSignatureId() int64 {
	if x != nil && x.SignatureId != nil {
		return *x.SignatureId
	}
	return 0
}

type Signature struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocumentId int64                  `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// version_id whose hash was shown
	SnapshotDate *timestamp.Timestamp `protobuf:"bytes,3,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	// Null/Empty for optional acknowledgements
	RequirementId *int64           `protobuf:"varint,4,opt,name=requirement_id,json=requirementId,proto3,oneof" json:"requirement_id,omitempty"`
	UserId        int32            `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	User          *users.UserShort `protobuf:"bytes,6,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Job           string           `protobuf:"bytes,7,opt,name=job,proto3" json:"job,omitempty"`
	JobLabel      *string          `protobuf:"bytes,8,opt,name=job_label,json=jobLabel,proto3,oneof" json:"job_label,omitempty"`
	Type          SignatureType    `protobuf:"varint,9,opt,name=type,proto3,enum=resources.documents.SignatureType" json:"type,omitempty"`
	// SVG path, typed preview, stamp fill, etc.
	PayloadSvg string `protobuf:"bytes,10,opt,name=payload_svg,json=payloadSvg,proto3" json:"payload_svg,omitempty"`
	// if type == STAMP
	StampId *int64          `protobuf:"varint,11,opt,name=stamp_id,json=stampId,proto3,oneof" json:"stamp_id,omitempty"`
	Status  SignatureStatus `protobuf:"varint,12,opt,name=status,proto3,enum=resources.documents.SignatureStatus" json:"status,omitempty"`
	// Revoke/Invalid reason
	Reason        *string              `protobuf:"bytes,13,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RevokedAt     *timestamp.Timestamp `protobuf:"bytes,15,opt,name=revoked_at,json=revokedAt,proto3,oneof" json:"revoked_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_resources_documents_signing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_resources_documents_signing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_resources_documents_signing_proto_rawDescGZIP(), []int{3}
}

func (x *Signature) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Signature) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *Signature) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

func (x *Signature) GetRequirementId() int64 {
	if x != nil && x.RequirementId != nil {
		return *x.RequirementId
	}
	return 0
}

func (x *Signature) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Signature) GetUser() *users.UserShort {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Signature) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *Signature) GetJobLabel() string {
	if x != nil && x.JobLabel != nil {
		return *x.JobLabel
	}
	return ""
}

func (x *Signature) GetType() SignatureType {
	if x != nil {
		return x.Type
	}
	return SignatureType_SIGNATURE_TYPE_UNSPECIFIED
}

func (x *Signature) GetPayloadSvg() string {
	if x != nil {
		return x.PayloadSvg
	}
	return ""
}

func (x *Signature) GetStampId() int64 {
	if x != nil && x.StampId != nil {
		return *x.StampId
	}
	return 0
}

func (x *Signature) GetStatus() SignatureStatus {
	if x != nil {
		return x.Status
	}
	return SignatureStatus_SIGNATURE_STATUS_UNSPECIFIED
}

func (x *Signature) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *Signature) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Signature) GetRevokedAt() *timestamp.Timestamp {
	if x != nil {
		return x.RevokedAt
	}
	return nil
}

var File_resources_documents_signing_proto protoreflect.FileDescriptor

const file_resources_documents_signing_proto_rawDesc = "" +
	"\n" +
	"!resources/documents/signing.proto\x12\x13resources.documents\x1a!codegen/dbscanner/dbscanner.proto\x1a#resources/timestamp/timestamp.proto\x1a\x1bresources/users/users.proto\"R\n" +
	"\x0eSignatureTypes\x128\n" +
	"\x05types\x18\x01 \x03(\x0e2\".resources.documents.SignatureTypeR\x05types:\x06\xe2\xf3\x18\x02\b\x01\"\xcf\x03\n" +
	"\x0fSignaturePolicy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\x03R\n" +
	"documentId\x12C\n" +
	"\rsnapshot_date\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampR\fsnapshotDate\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\x12\x1a\n" +
	"\brequired\x18\x05 \x01(\bR\brequired\x12L\n" +
	"\fbinding_mode\x18\x06 \x01(\x0e2).resources.documents.SignatureBindingModeR\vbindingMode\x12H\n" +
	"\rallowed_types\x18\a \x01(\v2#.resources.documents.SignatureTypesR\fallowedTypes\x12=\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1e.resources.timestamp.TimestampR\tcreatedAt\x12=\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1e.resources.timestamp.TimestampR\tupdatedAt\"\xfb\x06\n" +
	"\rSignatureTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tpolicy_id\x18\x02 \x01(\x03R\bpolicyId\x12\x1f\n" +
	"\vdocument_id\x18\x03 \x01(\x03R\n" +
	"documentId\x12C\n" +
	"\rsnapshot_date\x18\x04 \x01(\v2\x1e.resources.timestamp.TimestampR\fsnapshotDate\x12O\n" +
	"\rassignee_kind\x18\x05 \x01(\x0e2*.resources.documents.SignatureAssigneeKindR\fassigneeKind\x12\x1c\n" +
	"\auser_id\x18\x06 \x01(\x05H\x00R\x06userId\x88\x01\x01\x123\n" +
	"\x04user\x18\a \x01(\v2\x1a.resources.users.UserShortH\x01R\x04user\x88\x01\x01\x12\x15\n" +
	"\x03job\x18\b \x01(\tH\x02R\x03job\x88\x01\x01\x12 \n" +
	"\tjob_label\x18\t \x01(\tH\x03R\bjobLabel\x88\x01\x01\x12(\n" +
	"\rminimum_grade\x18\n" +
	" \x01(\x05H\x04R\fminimumGrade\x88\x01\x01\x12+\n" +
	"\x0fjob_grade_label\x18\v \x01(\tH\x05R\rjobGradeLabel\x88\x01\x01\x12\x17\n" +
	"\aslot_no\x18\f \x01(\x05R\x06slotNo\x12@\n" +
	"\x06status\x18\r \x01(\x0e2(.resources.documents.SignatureTaskStatusR\x06status\x12\x1b\n" +
	"\x06reason\x18\x0e \x01(\tH\x06R\x06reason\x88\x01\x01\x12=\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1e.resources.timestamp.TimestampR\tcreatedAt\x12F\n" +
	"\fcompleted_at\x18\x10 \x01(\v2\x1e.resources.timestamp.TimestampH\aR\vcompletedAt\x88\x01\x01\x12&\n" +
	"\fsignature_id\x18\x11 \x01(\x03H\bR\vsignatureId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\a\n" +
	"\x05_userB\x06\n" +
	"\x04_jobB\f\n" +
	"\n" +
	"_job_labelB\x10\n" +
	"\x0e_minimum_gradeB\x12\n" +
	"\x10_job_grade_labelB\t\n" +
	"\a_reasonB\x0f\n" +
	"\r_completed_atB\x0f\n" +
	"\r_signature_id\"\xd7\x05\n" +
	"\tSignature\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\x03R\n" +
	"documentId\x12C\n" +
	"\rsnapshot_date\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampR\fsnapshotDate\x12*\n" +
	"\x0erequirement_id\x18\x04 \x01(\x03H\x00R\rrequirementId\x88\x01\x01\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x05R\x06userId\x123\n" +
	"\x04user\x18\x06 \x01(\v2\x1a.resources.users.UserShortH\x01R\x04user\x88\x01\x01\x12\x10\n" +
	"\x03job\x18\a \x01(\tR\x03job\x12 \n" +
	"\tjob_label\x18\b \x01(\tH\x02R\bjobLabel\x88\x01\x01\x126\n" +
	"\x04type\x18\t \x01(\x0e2\".resources.documents.SignatureTypeR\x04type\x12\x1f\n" +
	"\vpayload_svg\x18\n" +
	" \x01(\tR\n" +
	"payloadSvg\x12\x1e\n" +
	"\bstamp_id\x18\v \x01(\x03H\x03R\astampId\x88\x01\x01\x12<\n" +
	"\x06status\x18\f \x01(\x0e2$.resources.documents.SignatureStatusR\x06status\x12\x1b\n" +
	"\x06reason\x18\r \x01(\tH\x04R\x06reason\x88\x01\x01\x12=\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1e.resources.timestamp.TimestampR\tcreatedAt\x12B\n" +
	"\n" +
	"revoked_at\x18\x0f \x01(\v2\x1e.resources.timestamp.TimestampH\x05R\trevokedAt\x88\x01\x01B\x11\n" +
	"\x0f_requirement_idB\a\n" +
	"\x05_userB\f\n" +
	"\n" +
	"_job_labelB\v\n" +
	"\t_stamp_idB\t\n" +
	"\a_reasonB\r\n" +
	"\v_revoked_at*\x89\x01\n" +
	"\x14SignatureBindingMode\x12&\n" +
	"\"SIGNATURE_BINDING_MODE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eSIGNATURE_BINDING_MODE_BINDING\x10\x01\x12%\n" +
	"!SIGNATURE_BINDING_MODE_NONBINDING\x10\x02*\x80\x01\n" +
	"\rSignatureType\x12\x1e\n" +
	"\x1aSIGNATURE_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17SIGNATURE_TYPE_FREEHAND\x10\x01\x12\x18\n" +
	"\x14SIGNATURE_TYPE_TYPED\x10\x02\x12\x18\n" +
	"\x14SIGNATURE_TYPE_STAMP\x10\x03*\x89\x01\n" +
	"\x15SignatureAssigneeKind\x12'\n" +
	"#SIGNATURE_ASSIGNEE_KIND_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cSIGNATURE_ASSIGNEE_KIND_USER\x10\x01\x12%\n" +
	"!SIGNATURE_ASSIGNEE_KIND_JOB_GRADE\x10\x02*\xa7\x01\n" +
	"\x13SignatureTaskStatus\x12%\n" +
	"!SIGNATURE_TASK_STATUS_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dSIGNATURE_TASK_STATUS_PENDING\x10\x01\x12#\n" +
	"\x1fSIGNATURE_TASK_STATUS_COMPLETED\x10\x02\x12!\n" +
	"\x1dSIGNATURE_TASK_STATUS_EXPIRED\x10\x03*\x8b\x01\n" +
	"\x0fSignatureStatus\x12 \n" +
	"\x1cSIGNATURE_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SIGNATURE_STATUS_VALID\x10\x01\x12\x1c\n" +
	"\x18SIGNATURE_STATUS_REVOKED\x10\x02\x12\x1c\n" +
	"\x18SIGNATURE_STATUS_INVALID\x10\x03BQZOgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents;documentsb\x06proto3"

var (
	file_resources_documents_signing_proto_rawDescOnce sync.Once
	file_resources_documents_signing_proto_rawDescData []byte
)

func file_resources_documents_signing_proto_rawDescGZIP() []byte {
	file_resources_documents_signing_proto_rawDescOnce.Do(func() {
		file_resources_documents_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resources_documents_signing_proto_rawDesc), len(file_resources_documents_signing_proto_rawDesc)))
	})
	return file_resources_documents_signing_proto_rawDescData
}

var file_resources_documents_signing_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_resources_documents_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_resources_documents_signing_proto_goTypes = []any{
	(SignatureBindingMode)(0),   // 0: resources.documents.SignatureBindingMode
	(SignatureType)(0),          // 1: resources.documents.SignatureType
	(SignatureAssigneeKind)(0),  // 2: resources.documents.SignatureAssigneeKind
	(SignatureTaskStatus)(0),    // 3: resources.documents.SignatureTaskStatus
	(SignatureStatus)(0),        // 4: resources.documents.SignatureStatus
	(*SignatureTypes)(nil),      // 5: resources.documents.SignatureTypes
	(*SignaturePolicy)(nil),     // 6: resources.documents.SignaturePolicy
	(*SignatureTask)(nil),       // 7: resources.documents.SignatureTask
	(*Signature)(nil),           // 8: resources.documents.Signature
	(*timestamp.Timestamp)(nil), // 9: resources.timestamp.Timestamp
	(*users.UserShort)(nil),     // 10: resources.users.UserShort
}
var file_resources_documents_signing_proto_depIdxs = []int32{
	1,  // 0: resources.documents.SignatureTypes.types:type_name -> resources.documents.SignatureType
	9,  // 1: resources.documents.SignaturePolicy.snapshot_date:type_name -> resources.timestamp.Timestamp
	0,  // 2: resources.documents.SignaturePolicy.binding_mode:type_name -> resources.documents.SignatureBindingMode
	5,  // 3: resources.documents.SignaturePolicy.allowed_types:type_name -> resources.documents.SignatureTypes
	9,  // 4: resources.documents.SignaturePolicy.created_at:type_name -> resources.timestamp.Timestamp
	9,  // 5: resources.documents.SignaturePolicy.updated_at:type_name -> resources.timestamp.Timestamp
	9,  // 6: resources.documents.SignatureTask.snapshot_date:type_name -> resources.timestamp.Timestamp
	2,  // 7: resources.documents.SignatureTask.assignee_kind:type_name -> resources.documents.SignatureAssigneeKind
	10, // 8: resources.documents.SignatureTask.user:type_name -> resources.users.UserShort
	3,  // 9: resources.documents.SignatureTask.status:type_name -> resources.documents.SignatureTaskStatus
	9,  // 10: resources.documents.SignatureTask.created_at:type_name -> resources.timestamp.Timestamp
	9,  // 11: resources.documents.SignatureTask.completed_at:type_name -> resources.timestamp.Timestamp
	9,  // 12: resources.documents.Signature.snapshot_date:type_name -> resources.timestamp.Timestamp
	10, // 13: resources.documents.Signature.user:type_name -> resources.users.UserShort
	1,  // 14: resources.documents.Signature.type:type_name -> resources.documents.SignatureType
	4,  // 15: resources.documents.Signature.status:type_name -> resources.documents.SignatureStatus
	9,  // 16: resources.documents.Signature.created_at:type_name -> resources.timestamp.Timestamp
	9,  // 17: resources.documents.Signature.revoked_at:type_name -> resources.timestamp.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_resources_documents_signing_proto_init() }
func file_resources_documents_signing_proto_init() {
	if File_resources_documents_signing_proto != nil {
		return
	}
	file_resources_documents_signing_proto_msgTypes[2].OneofWrappers = []any{}
	file_resources_documents_signing_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resources_documents_signing_proto_rawDesc), len(file_resources_documents_signing_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_documents_signing_proto_goTypes,
		DependencyIndexes: file_resources_documents_signing_proto_depIdxs,
		EnumInfos:         file_resources_documents_signing_proto_enumTypes,
		MessageInfos:      file_resources_documents_signing_proto_msgTypes,
	}.Build()
	File_resources_documents_signing_proto = out.File
	file_resources_documents_signing_proto_goTypes = nil
	file_resources_documents_signing_proto_depIdxs = nil
}
