// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: resources/documents/workflow.proto

package documents

func (m *AutoCloseSettings) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Duration
	if m.Duration != nil {
		if v, ok := any(m.GetDuration()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *Reminder) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Duration
	if m.Duration != nil {
		if v, ok := any(m.GetDuration()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ReminderSettings) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Reminders
	for idx, item := range m.Reminders {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *Workflow) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: AutoCloseSettings
	if m.AutoCloseSettings != nil {
		if v, ok := any(m.GetAutoCloseSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: ReminderSettings
	if m.ReminderSettings != nil {
		if v, ok := any(m.GetReminderSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *WorkflowCronData) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}
