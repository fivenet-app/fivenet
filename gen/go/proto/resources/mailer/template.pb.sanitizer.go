// Code generated by protoc-gen-backend. DO NOT EDIT.
// source: resources/mailer/template.proto

package mailer

import (
	"github.com/fivenet-app/fivenet/v2025/pkg/html/htmlsanitizer"
)

// Sanitize sanitizes the message's fields, in case of complex types it calls
// their Sanitize() method recursively.
func (m *Template) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Content
	m.Content = htmlsanitizer.Sanitize(m.Content)

	// Field: CreatedAt
	if m.CreatedAt != nil {
		if v, ok := any(m.GetCreatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: CreatorJob
	if m.CreatorJob != nil {
		*m.CreatorJob = htmlsanitizer.Sanitize(*m.CreatorJob)
	}

	// Field: DeletedAt
	if m.DeletedAt != nil {
		if v, ok := any(m.GetDeletedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Title
	m.Title = htmlsanitizer.StripTags(m.Title)

	// Field: UpdatedAt
	if m.UpdatedAt != nil {
		if v, ok := any(m.GetUpdatedAt()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}
