// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: services/documents/signing.proto

package documents

import (
	database "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/common/database"
	documents "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignaturePanelSnapshot struct {
	state        protoimpl.MessageState            `protogen:"open.v1"`
	DocumentId   int64                             `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Requirements []*documents.SignatureRequirement `protobuf:"bytes,2,rep,name=requirements,proto3" json:"requirements,omitempty"`
	// Includes optional acknowledgements
	Collected            []*documents.Signature `protobuf:"bytes,3,rep,name=collected,proto3" json:"collected,omitempty"`
	AllRequiredCollected bool                   `protobuf:"varint,4,opt,name=all_required_collected,json=allRequiredCollected,proto3" json:"all_required_collected,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SignaturePanelSnapshot) Reset() {
	*x = SignaturePanelSnapshot{}
	mi := &file_services_documents_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignaturePanelSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignaturePanelSnapshot) ProtoMessage() {}

func (x *SignaturePanelSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignaturePanelSnapshot.ProtoReflect.Descriptor instead.
func (*SignaturePanelSnapshot) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{0}
}

func (x *SignaturePanelSnapshot) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *SignaturePanelSnapshot) GetRequirements() []*documents.SignatureRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *SignaturePanelSnapshot) GetCollected() []*documents.Signature {
	if x != nil {
		return x.Collected
	}
	return nil
}

func (x *SignaturePanelSnapshot) GetAllRequiredCollected() bool {
	if x != nil {
		return x.AllRequiredCollected
	}
	return false
}

type PrepareSignatureRequirementsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareSignatureRequirementsRequest) Reset() {
	*x = PrepareSignatureRequirementsRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSignatureRequirementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSignatureRequirementsRequest) ProtoMessage() {}

func (x *PrepareSignatureRequirementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSignatureRequirementsRequest.ProtoReflect.Descriptor instead.
func (*PrepareSignatureRequirementsRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareSignatureRequirementsRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type PrepareSignatureRequirementsResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Requirements  []*documents.SignatureRequirement `protobuf:"bytes,1,rep,name=requirements,proto3" json:"requirements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareSignatureRequirementsResponse) Reset() {
	*x = PrepareSignatureRequirementsResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareSignatureRequirementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareSignatureRequirementsResponse) ProtoMessage() {}

func (x *PrepareSignatureRequirementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareSignatureRequirementsResponse.ProtoReflect.Descriptor instead.
func (*PrepareSignatureRequirementsResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{2}
}

func (x *PrepareSignatureRequirementsResponse) GetRequirements() []*documents.SignatureRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

type GetSignaturePanelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignaturePanelRequest) Reset() {
	*x = GetSignaturePanelRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignaturePanelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignaturePanelRequest) ProtoMessage() {}

func (x *GetSignaturePanelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignaturePanelRequest.ProtoReflect.Descriptor instead.
func (*GetSignaturePanelRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{3}
}

func (x *GetSignaturePanelRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type GetSignaturePanelResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Panel         *SignaturePanelSnapshot `protobuf:"bytes,1,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignaturePanelResponse) Reset() {
	*x = GetSignaturePanelResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignaturePanelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignaturePanelResponse) ProtoMessage() {}

func (x *GetSignaturePanelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignaturePanelResponse.ProtoReflect.Descriptor instead.
func (*GetSignaturePanelResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{4}
}

func (x *GetSignaturePanelResponse) GetPanel() *SignaturePanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type ApplySignatureRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// empty => optional/ack
	RequirementId int64                   `protobuf:"varint,2,opt,name=requirement_id,json=requirementId,proto3" json:"requirement_id,omitempty"`
	Type          documents.SignatureType `protobuf:"varint,3,opt,name=type,proto3,enum=resources.documents.SignatureType" json:"type,omitempty"`
	PayloadJson   string                  `protobuf:"bytes,4,opt,name=payload_json,json=payloadJson,proto3" json:"payload_json,omitempty"`
	// If STAMP
	StampId int64 `protobuf:"varint,5,opt,name=stamp_id,json=stampId,proto3" json:"stamp_id,omitempty"`
	// Client-computed from snapshot_json
	SnapshotHash  string `protobuf:"bytes,6,opt,name=snapshot_hash,json=snapshotHash,proto3" json:"snapshot_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplySignatureRequest) Reset() {
	*x = ApplySignatureRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplySignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySignatureRequest) ProtoMessage() {}

func (x *ApplySignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySignatureRequest.ProtoReflect.Descriptor instead.
func (*ApplySignatureRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{5}
}

func (x *ApplySignatureRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ApplySignatureRequest) GetRequirementId() int64 {
	if x != nil {
		return x.RequirementId
	}
	return 0
}

func (x *ApplySignatureRequest) GetType() documents.SignatureType {
	if x != nil {
		return x.Type
	}
	return documents.SignatureType(0)
}

func (x *ApplySignatureRequest) GetPayloadJson() string {
	if x != nil {
		return x.PayloadJson
	}
	return ""
}

func (x *ApplySignatureRequest) GetStampId() int64 {
	if x != nil {
		return x.StampId
	}
	return 0
}

func (x *ApplySignatureRequest) GetSnapshotHash() string {
	if x != nil {
		return x.SnapshotHash
	}
	return ""
}

type ApplySignatureResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Signature     *documents.Signature    `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Panel         *SignaturePanelSnapshot `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplySignatureResponse) Reset() {
	*x = ApplySignatureResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplySignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplySignatureResponse) ProtoMessage() {}

func (x *ApplySignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplySignatureResponse.ProtoReflect.Descriptor instead.
func (*ApplySignatureResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{6}
}

func (x *ApplySignatureResponse) GetSignature() *documents.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ApplySignatureResponse) GetPanel() *SignaturePanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type RevokeSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignatureId   int64                  `protobuf:"varint,1,opt,name=signature_id,json=signatureId,proto3" json:"signature_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeSignatureRequest) Reset() {
	*x = RevokeSignatureRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSignatureRequest) ProtoMessage() {}

func (x *RevokeSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSignatureRequest.ProtoReflect.Descriptor instead.
func (*RevokeSignatureRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{7}
}

func (x *RevokeSignatureRequest) GetSignatureId() int64 {
	if x != nil {
		return x.SignatureId
	}
	return 0
}

func (x *RevokeSignatureRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RevokeSignatureResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Signature     *documents.Signature    `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Panel         *SignaturePanelSnapshot `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeSignatureResponse) Reset() {
	*x = RevokeSignatureResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSignatureResponse) ProtoMessage() {}

func (x *RevokeSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSignatureResponse.ProtoReflect.Descriptor instead.
func (*RevokeSignatureResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{8}
}

func (x *RevokeSignatureResponse) GetSignature() *documents.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *RevokeSignatureResponse) GetPanel() *SignaturePanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type RequestSignaturesRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Who to ask
	Selector *documents.PartySelector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
	// Signature is required
	Required bool `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	// For created requirements
	BindingMode  documents.BindingMode     `protobuf:"varint,4,opt,name=binding_mode,json=bindingMode,proto3,enum=resources.documents.BindingMode" json:"binding_mode,omitempty"`
	AllowedTypes []documents.SignatureType `protobuf:"varint,5,rep,packed,name=allowed_types,json=allowedTypes,proto3,enum=resources.documents.SignatureType" json:"allowed_types,omitempty"`
	// Optional ordering
	SequenceOrder int32 `protobuf:"varint,6,opt,name=sequence_order,json=sequenceOrder,proto3" json:"sequence_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestSignaturesRequest) Reset() {
	*x = RequestSignaturesRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSignaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSignaturesRequest) ProtoMessage() {}

func (x *RequestSignaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSignaturesRequest.ProtoReflect.Descriptor instead.
func (*RequestSignaturesRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{9}
}

func (x *RequestSignaturesRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *RequestSignaturesRequest) GetSelector() *documents.PartySelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *RequestSignaturesRequest) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *RequestSignaturesRequest) GetBindingMode() documents.BindingMode {
	if x != nil {
		return x.BindingMode
	}
	return documents.BindingMode(0)
}

func (x *RequestSignaturesRequest) GetAllowedTypes() []documents.SignatureType {
	if x != nil {
		return x.AllowedTypes
	}
	return nil
}

func (x *RequestSignaturesRequest) GetSequenceOrder() int32 {
	if x != nil {
		return x.SequenceOrder
	}
	return 0
}

type RequestSignaturesResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Requirements  []*documents.SignatureRequirement `protobuf:"bytes,1,rep,name=requirements,proto3" json:"requirements,omitempty"`
	Panel         *SignaturePanelSnapshot           `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestSignaturesResponse) Reset() {
	*x = RequestSignaturesResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSignaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSignaturesResponse) ProtoMessage() {}

func (x *RequestSignaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSignaturesResponse.ProtoReflect.Descriptor instead.
func (*RequestSignaturesResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{10}
}

func (x *RequestSignaturesResponse) GetRequirements() []*documents.SignatureRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *RequestSignaturesResponse) GetPanel() *SignaturePanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type ListUsableStampsRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Pagination    *database.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	DocumentId    int64                       `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsableStampsRequest) Reset() {
	*x = ListUsableStampsRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsableStampsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsableStampsRequest) ProtoMessage() {}

func (x *ListUsableStampsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsableStampsRequest.ProtoReflect.Descriptor instead.
func (*ListUsableStampsRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{11}
}

func (x *ListUsableStampsRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUsableStampsRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type ListUsableStampsResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Stamps        []*documents.Stamp           `protobuf:"bytes,2,rep,name=stamps,proto3" json:"stamps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsableStampsResponse) Reset() {
	*x = ListUsableStampsResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsableStampsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsableStampsResponse) ProtoMessage() {}

func (x *ListUsableStampsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsableStampsResponse.ProtoReflect.Descriptor instead.
func (*ListUsableStampsResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{12}
}

func (x *ListUsableStampsResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUsableStampsResponse) GetStamps() []*documents.Stamp {
	if x != nil {
		return x.Stamps
	}
	return nil
}

var File_services_documents_signing_proto protoreflect.FileDescriptor

const file_services_documents_signing_proto_rawDesc = "" +
	"\n" +
	" services/documents/signing.proto\x12\x12services.documents\x1a(resources/common/database/database.proto\x1a\"resources/documents/approval.proto\x1a!resources/documents/signing.proto\"\xfc\x01\n" +
	"\x16SignaturePanelSnapshot\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12M\n" +
	"\frequirements\x18\x02 \x03(\v2).resources.documents.SignatureRequirementR\frequirements\x12<\n" +
	"\tcollected\x18\x03 \x03(\v2\x1e.resources.documents.SignatureR\tcollected\x124\n" +
	"\x16all_required_collected\x18\x04 \x01(\bR\x14allRequiredCollected\"F\n" +
	"#PrepareSignatureRequirementsRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\"u\n" +
	"$PrepareSignatureRequirementsResponse\x12M\n" +
	"\frequirements\x18\x01 \x03(\v2).resources.documents.SignatureRequirementR\frequirements\";\n" +
	"\x18GetSignaturePanelRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\"]\n" +
	"\x19GetSignaturePanelResponse\x12@\n" +
	"\x05panel\x18\x01 \x01(\v2*.services.documents.SignaturePanelSnapshotR\x05panel\"\xfa\x01\n" +
	"\x15ApplySignatureRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12%\n" +
	"\x0erequirement_id\x18\x02 \x01(\x03R\rrequirementId\x126\n" +
	"\x04type\x18\x03 \x01(\x0e2\".resources.documents.SignatureTypeR\x04type\x12!\n" +
	"\fpayload_json\x18\x04 \x01(\tR\vpayloadJson\x12\x19\n" +
	"\bstamp_id\x18\x05 \x01(\x03R\astampId\x12#\n" +
	"\rsnapshot_hash\x18\x06 \x01(\tR\fsnapshotHash\"\x98\x01\n" +
	"\x16ApplySignatureResponse\x12<\n" +
	"\tsignature\x18\x01 \x01(\v2\x1e.resources.documents.SignatureR\tsignature\x12@\n" +
	"\x05panel\x18\x02 \x01(\v2*.services.documents.SignaturePanelSnapshotR\x05panel\"S\n" +
	"\x16RevokeSignatureRequest\x12!\n" +
	"\fsignature_id\x18\x01 \x01(\x03R\vsignatureId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x99\x01\n" +
	"\x17RevokeSignatureResponse\x12<\n" +
	"\tsignature\x18\x01 \x01(\v2\x1e.resources.documents.SignatureR\tsignature\x12@\n" +
	"\x05panel\x18\x02 \x01(\v2*.services.documents.SignaturePanelSnapshotR\x05panel\"\xcc\x02\n" +
	"\x18RequestSignaturesRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12>\n" +
	"\bselector\x18\x02 \x01(\v2\".resources.documents.PartySelectorR\bselector\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\x12C\n" +
	"\fbinding_mode\x18\x04 \x01(\x0e2 .resources.documents.BindingModeR\vbindingMode\x12G\n" +
	"\rallowed_types\x18\x05 \x03(\x0e2\".resources.documents.SignatureTypeR\fallowedTypes\x12%\n" +
	"\x0esequence_order\x18\x06 \x01(\x05R\rsequenceOrder\"\xac\x01\n" +
	"\x19RequestSignaturesResponse\x12M\n" +
	"\frequirements\x18\x01 \x03(\v2).resources.documents.SignatureRequirementR\frequirements\x12@\n" +
	"\x05panel\x18\x02 \x01(\v2*.services.documents.SignaturePanelSnapshotR\x05panel\"\x88\x01\n" +
	"\x17ListUsableStampsRequest\x12L\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2,.resources.common.database.PaginationRequestR\n" +
	"pagination\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\x03R\n" +
	"documentId\"\x9d\x01\n" +
	"\x18ListUsableStampsResponse\x12M\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2-.resources.common.database.PaginationResponseR\n" +
	"pagination\x122\n" +
	"\x06stamps\x18\x02 \x03(\v2\x1a.resources.documents.StampR\x06stamps2\xcc\x05\n" +
	"\x0eSigningService\x12\x91\x01\n" +
	"\x1cPrepareSignatureRequirements\x127.services.documents.PrepareSignatureRequirementsRequest\x1a8.services.documents.PrepareSignatureRequirementsResponse\x12p\n" +
	"\x11GetSignaturePanel\x12,.services.documents.GetSignaturePanelRequest\x1a-.services.documents.GetSignaturePanelResponse\x12g\n" +
	"\x0eApplySignature\x12).services.documents.ApplySignatureRequest\x1a*.services.documents.ApplySignatureResponse\x12j\n" +
	"\x0fRevokeSignature\x12*.services.documents.RevokeSignatureRequest\x1a+.services.documents.RevokeSignatureResponse\x12p\n" +
	"\x11RequestSignatures\x12,.services.documents.RequestSignaturesRequest\x1a-.services.documents.RequestSignaturesResponse\x12m\n" +
	"\x10ListUsableStamps\x12+.services.documents.ListUsableStampsRequest\x1a,.services.documents.ListUsableStampsResponseBPZNgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/documents;documentsb\x06proto3"

var (
	file_services_documents_signing_proto_rawDescOnce sync.Once
	file_services_documents_signing_proto_rawDescData []byte
)

func file_services_documents_signing_proto_rawDescGZIP() []byte {
	file_services_documents_signing_proto_rawDescOnce.Do(func() {
		file_services_documents_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_documents_signing_proto_rawDesc), len(file_services_documents_signing_proto_rawDesc)))
	})
	return file_services_documents_signing_proto_rawDescData
}

var file_services_documents_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_services_documents_signing_proto_goTypes = []any{
	(*SignaturePanelSnapshot)(nil),               // 0: services.documents.SignaturePanelSnapshot
	(*PrepareSignatureRequirementsRequest)(nil),  // 1: services.documents.PrepareSignatureRequirementsRequest
	(*PrepareSignatureRequirementsResponse)(nil), // 2: services.documents.PrepareSignatureRequirementsResponse
	(*GetSignaturePanelRequest)(nil),             // 3: services.documents.GetSignaturePanelRequest
	(*GetSignaturePanelResponse)(nil),            // 4: services.documents.GetSignaturePanelResponse
	(*ApplySignatureRequest)(nil),                // 5: services.documents.ApplySignatureRequest
	(*ApplySignatureResponse)(nil),               // 6: services.documents.ApplySignatureResponse
	(*RevokeSignatureRequest)(nil),               // 7: services.documents.RevokeSignatureRequest
	(*RevokeSignatureResponse)(nil),              // 8: services.documents.RevokeSignatureResponse
	(*RequestSignaturesRequest)(nil),             // 9: services.documents.RequestSignaturesRequest
	(*RequestSignaturesResponse)(nil),            // 10: services.documents.RequestSignaturesResponse
	(*ListUsableStampsRequest)(nil),              // 11: services.documents.ListUsableStampsRequest
	(*ListUsableStampsResponse)(nil),             // 12: services.documents.ListUsableStampsResponse
	(*documents.SignatureRequirement)(nil),       // 13: resources.documents.SignatureRequirement
	(*documents.Signature)(nil),                  // 14: resources.documents.Signature
	(documents.SignatureType)(0),                 // 15: resources.documents.SignatureType
	(*documents.PartySelector)(nil),              // 16: resources.documents.PartySelector
	(documents.BindingMode)(0),                   // 17: resources.documents.BindingMode
	(*database.PaginationRequest)(nil),           // 18: resources.common.database.PaginationRequest
	(*database.PaginationResponse)(nil),          // 19: resources.common.database.PaginationResponse
	(*documents.Stamp)(nil),                      // 20: resources.documents.Stamp
}
var file_services_documents_signing_proto_depIdxs = []int32{
	13, // 0: services.documents.SignaturePanelSnapshot.requirements:type_name -> resources.documents.SignatureRequirement
	14, // 1: services.documents.SignaturePanelSnapshot.collected:type_name -> resources.documents.Signature
	13, // 2: services.documents.PrepareSignatureRequirementsResponse.requirements:type_name -> resources.documents.SignatureRequirement
	0,  // 3: services.documents.GetSignaturePanelResponse.panel:type_name -> services.documents.SignaturePanelSnapshot
	15, // 4: services.documents.ApplySignatureRequest.type:type_name -> resources.documents.SignatureType
	14, // 5: services.documents.ApplySignatureResponse.signature:type_name -> resources.documents.Signature
	0,  // 6: services.documents.ApplySignatureResponse.panel:type_name -> services.documents.SignaturePanelSnapshot
	14, // 7: services.documents.RevokeSignatureResponse.signature:type_name -> resources.documents.Signature
	0,  // 8: services.documents.RevokeSignatureResponse.panel:type_name -> services.documents.SignaturePanelSnapshot
	16, // 9: services.documents.RequestSignaturesRequest.selector:type_name -> resources.documents.PartySelector
	17, // 10: services.documents.RequestSignaturesRequest.binding_mode:type_name -> resources.documents.BindingMode
	15, // 11: services.documents.RequestSignaturesRequest.allowed_types:type_name -> resources.documents.SignatureType
	13, // 12: services.documents.RequestSignaturesResponse.requirements:type_name -> resources.documents.SignatureRequirement
	0,  // 13: services.documents.RequestSignaturesResponse.panel:type_name -> services.documents.SignaturePanelSnapshot
	18, // 14: services.documents.ListUsableStampsRequest.pagination:type_name -> resources.common.database.PaginationRequest
	19, // 15: services.documents.ListUsableStampsResponse.pagination:type_name -> resources.common.database.PaginationResponse
	20, // 16: services.documents.ListUsableStampsResponse.stamps:type_name -> resources.documents.Stamp
	1,  // 17: services.documents.SigningService.PrepareSignatureRequirements:input_type -> services.documents.PrepareSignatureRequirementsRequest
	3,  // 18: services.documents.SigningService.GetSignaturePanel:input_type -> services.documents.GetSignaturePanelRequest
	5,  // 19: services.documents.SigningService.ApplySignature:input_type -> services.documents.ApplySignatureRequest
	7,  // 20: services.documents.SigningService.RevokeSignature:input_type -> services.documents.RevokeSignatureRequest
	9,  // 21: services.documents.SigningService.RequestSignatures:input_type -> services.documents.RequestSignaturesRequest
	11, // 22: services.documents.SigningService.ListUsableStamps:input_type -> services.documents.ListUsableStampsRequest
	2,  // 23: services.documents.SigningService.PrepareSignatureRequirements:output_type -> services.documents.PrepareSignatureRequirementsResponse
	4,  // 24: services.documents.SigningService.GetSignaturePanel:output_type -> services.documents.GetSignaturePanelResponse
	6,  // 25: services.documents.SigningService.ApplySignature:output_type -> services.documents.ApplySignatureResponse
	8,  // 26: services.documents.SigningService.RevokeSignature:output_type -> services.documents.RevokeSignatureResponse
	10, // 27: services.documents.SigningService.RequestSignatures:output_type -> services.documents.RequestSignaturesResponse
	12, // 28: services.documents.SigningService.ListUsableStamps:output_type -> services.documents.ListUsableStampsResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_services_documents_signing_proto_init() }
func file_services_documents_signing_proto_init() {
	if File_services_documents_signing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_documents_signing_proto_rawDesc), len(file_services_documents_signing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_documents_signing_proto_goTypes,
		DependencyIndexes: file_services_documents_signing_proto_depIdxs,
		MessageInfos:      file_services_documents_signing_proto_msgTypes,
	}.Build()
	File_services_documents_signing_proto = out.File
	file_services_documents_signing_proto_goTypes = nil
	file_services_documents_signing_proto_depIdxs = nil
}
