// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: services/documents/signing.proto

package documents

import (
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/itemslen"
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/perms"
	database "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/common/database"
	documents "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListSignatureTasksInboxRequest struct {
	state      protoimpl.MessageState          `protogen:"open.v1"`
	Pagination *database.PaginationRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Statuses   []documents.SignatureTaskStatus `protobuf:"varint,2,rep,packed,name=statuses,proto3,enum=resources.documents.SignatureTaskStatus" json:"statuses,omitempty"`
	// Controls inclusion of drafts in the result:
	// - unset/null: include all documents (drafts and non-drafts)
	// - false: only non-draft documents
	// - true: only draft documents
	OnlyDrafts    *bool `protobuf:"varint,3,opt,name=only_drafts,json=onlyDrafts,proto3,oneof" json:"only_drafts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignatureTasksInboxRequest) Reset() {
	*x = ListSignatureTasksInboxRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignatureTasksInboxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignatureTasksInboxRequest) ProtoMessage() {}

func (x *ListSignatureTasksInboxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignatureTasksInboxRequest.ProtoReflect.Descriptor instead.
func (*ListSignatureTasksInboxRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{0}
}

func (x *ListSignatureTasksInboxRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListSignatureTasksInboxRequest) GetStatuses() []documents.SignatureTaskStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListSignatureTasksInboxRequest) GetOnlyDrafts() bool {
	if x != nil && x.OnlyDrafts != nil {
		return *x.OnlyDrafts
	}
	return false
}

type ListSignatureTasksInboxResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Tasks         []*documents.SignatureTask   `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignatureTasksInboxResponse) Reset() {
	*x = ListSignatureTasksInboxResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignatureTasksInboxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignatureTasksInboxResponse) ProtoMessage() {}

func (x *ListSignatureTasksInboxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignatureTasksInboxResponse.ProtoReflect.Descriptor instead.
func (*ListSignatureTasksInboxResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{1}
}

func (x *ListSignatureTasksInboxResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListSignatureTasksInboxResponse) GetTasks() []*documents.SignatureTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ListSignaturePoliciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	SnapshotDate  *timestamp.Timestamp   `protobuf:"bytes,2,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignaturePoliciesRequest) Reset() {
	*x = ListSignaturePoliciesRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignaturePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturePoliciesRequest) ProtoMessage() {}

func (x *ListSignaturePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturePoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListSignaturePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{2}
}

func (x *ListSignaturePoliciesRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ListSignaturePoliciesRequest) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

type ListSignaturePoliciesResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignaturePoliciesResponse) Reset() {
	*x = ListSignaturePoliciesResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignaturePoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturePoliciesResponse) ProtoMessage() {}

func (x *ListSignaturePoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturePoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListSignaturePoliciesResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{3}
}

func (x *ListSignaturePoliciesResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpsertSignaturePolicyRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertSignaturePolicyRequest) Reset() {
	*x = UpsertSignaturePolicyRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertSignaturePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSignaturePolicyRequest) ProtoMessage() {}

func (x *UpsertSignaturePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSignaturePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpsertSignaturePolicyRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertSignaturePolicyRequest) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpsertSignaturePolicyResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertSignaturePolicyResponse) Reset() {
	*x = UpsertSignaturePolicyResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertSignaturePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSignaturePolicyResponse) ProtoMessage() {}

func (x *UpsertSignaturePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSignaturePolicyResponse.ProtoReflect.Descriptor instead.
func (*UpsertSignaturePolicyResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertSignaturePolicyResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type DeleteSignaturePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSignaturePolicyRequest) Reset() {
	*x = DeleteSignaturePolicyRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSignaturePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignaturePolicyRequest) ProtoMessage() {}

func (x *DeleteSignaturePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignaturePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteSignaturePolicyRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSignaturePolicyRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type DeleteSignaturePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSignaturePolicyResponse) Reset() {
	*x = DeleteSignaturePolicyResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSignaturePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignaturePolicyResponse) ProtoMessage() {}

func (x *DeleteSignaturePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignaturePolicyResponse.ProtoReflect.Descriptor instead.
func (*DeleteSignaturePolicyResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{7}
}

type ListSignatureTasksRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	DocumentId    int64                           `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Statuses      []documents.SignatureTaskStatus `protobuf:"varint,2,rep,packed,name=statuses,proto3,enum=resources.documents.SignatureTaskStatus" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignatureTasksRequest) Reset() {
	*x = ListSignatureTasksRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignatureTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignatureTasksRequest) ProtoMessage() {}

func (x *ListSignatureTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignatureTasksRequest.ProtoReflect.Descriptor instead.
func (*ListSignatureTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{8}
}

func (x *ListSignatureTasksRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ListSignatureTasksRequest) GetStatuses() []documents.SignatureTaskStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ListSignatureTasksResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Tasks         []*documents.SignatureTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignatureTasksResponse) Reset() {
	*x = ListSignatureTasksResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignatureTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignatureTasksResponse) ProtoMessage() {}

func (x *ListSignatureTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignatureTasksResponse.ProtoReflect.Descriptor instead.
func (*ListSignatureTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{9}
}

func (x *ListSignatureTasksResponse) GetTasks() []*documents.SignatureTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// A declarative "ensure" for tasks under one policy/snapshot.
// Exactly one target must be set: user_id OR (job + minimum_grade).
type SignatureTaskSeed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set -> USER task; slots is forced to 1
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// If user_id == 0 -> JOB task
	Job          string `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	MinimumGrade int32  `protobuf:"varint,3,opt,name=minimum_grade,json=minimumGrade,proto3" json:"minimum_grade,omitempty"`
	// Label of task
	Label *string `protobuf:"bytes,4,opt,name=label,proto3,oneof" json:"label,omitempty"`
	// Only for JOB tasks; number of PENDING slots to ensure (>=1)
	Slots int32 `protobuf:"varint,5,opt,name=slots,proto3" json:"slots,omitempty"`
	// Optional default due date for created slots
	DueAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=due_at,json=dueAt,proto3,oneof" json:"due_at,omitempty"`
	// Optional note set on created tasks
	Comment       *string `protobuf:"bytes,7,opt,name=comment,proto3,oneof" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureTaskSeed) Reset() {
	*x = SignatureTaskSeed{}
	mi := &file_services_documents_signing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureTaskSeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureTaskSeed) ProtoMessage() {}

func (x *SignatureTaskSeed) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureTaskSeed.ProtoReflect.Descriptor instead.
func (*SignatureTaskSeed) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{10}
}

func (x *SignatureTaskSeed) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SignatureTaskSeed) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *SignatureTaskSeed) GetMinimumGrade() int32 {
	if x != nil {
		return x.MinimumGrade
	}
	return 0
}

func (x *SignatureTaskSeed) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *SignatureTaskSeed) GetSlots() int32 {
	if x != nil {
		return x.Slots
	}
	return 0
}

func (x *SignatureTaskSeed) GetDueAt() *timestamp.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *SignatureTaskSeed) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

// Upsert = insert missing PENDING tasks/slots; will NOT delete existing tasks.
// Identity rules (server-side):
//   - USER task: unique by (document_id, snapshot_date, assignee_kind=USER, user_id)
//   - JOB task: unique by (document_id, snapshot_date, assignee_kind=JOB, job, minimum_grade, slot_no)
//
// For JOB seeds with slots=N, the server ensures there are at least N PENDING slots (slot_no 1..N).
type UpsertSignatureTasksRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// If empty, use policy.snapshot_date
	SnapshotDate  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=snapshot_date,json=snapshotDate,proto3,oneof" json:"snapshot_date,omitempty"`
	Seeds         []*SignatureTaskSeed `protobuf:"bytes,3,rep,name=seeds,proto3" json:"seeds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertSignatureTasksRequest) Reset() {
	*x = UpsertSignatureTasksRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertSignatureTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSignatureTasksRequest) ProtoMessage() {}

func (x *UpsertSignatureTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSignatureTasksRequest.ProtoReflect.Descriptor instead.
func (*UpsertSignatureTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertSignatureTasksRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *UpsertSignatureTasksRequest) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

func (x *UpsertSignatureTasksRequest) GetSeeds() []*SignatureTaskSeed {
	if x != nil {
		return x.Seeds
	}
	return nil
}

type UpsertSignatureTasksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of new task rows inserted
	TasksCreated int32 `protobuf:"varint,1,opt,name=tasks_created,json=tasksCreated,proto3" json:"tasks_created,omitempty"`
	// Number of requested targets already satisfied (no-op)
	TasksEnsured int32 `protobuf:"varint,2,opt,name=tasks_ensured,json=tasksEnsured,proto3" json:"tasks_ensured,omitempty"`
	// Echo (optional convenience)
	Policy        *documents.SignaturePolicy `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertSignatureTasksResponse) Reset() {
	*x = UpsertSignatureTasksResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertSignatureTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSignatureTasksResponse) ProtoMessage() {}

func (x *UpsertSignatureTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSignatureTasksResponse.ProtoReflect.Descriptor instead.
func (*UpsertSignatureTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{12}
}

func (x *UpsertSignatureTasksResponse) GetTasksCreated() int32 {
	if x != nil {
		return x.TasksCreated
	}
	return 0
}

func (x *UpsertSignatureTasksResponse) GetTasksEnsured() int32 {
	if x != nil {
		return x.TasksEnsured
	}
	return 0
}

func (x *UpsertSignatureTasksResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type DeleteSignatureTasksRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TaskIds    []int64                `protobuf:"varint,2,rep,packed,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	// If true, ignore task_ids and delete all PENDING tasks under this policy
	DeleteAllPending bool `protobuf:"varint,3,opt,name=delete_all_pending,json=deleteAllPending,proto3" json:"delete_all_pending,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteSignatureTasksRequest) Reset() {
	*x = DeleteSignatureTasksRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSignatureTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignatureTasksRequest) ProtoMessage() {}

func (x *DeleteSignatureTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignatureTasksRequest.ProtoReflect.Descriptor instead.
func (*DeleteSignatureTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSignatureTasksRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *DeleteSignatureTasksRequest) GetTaskIds() []int64 {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *DeleteSignatureTasksRequest) GetDeleteAllPending() bool {
	if x != nil {
		return x.DeleteAllPending
	}
	return false
}

type DeleteSignatureTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSignatureTasksResponse) Reset() {
	*x = DeleteSignatureTasksResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSignatureTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSignatureTasksResponse) ProtoMessage() {}

func (x *DeleteSignatureTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSignatureTasksResponse.ProtoReflect.Descriptor instead.
func (*DeleteSignatureTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{14}
}

// List signatures (artifacts) for a policy/snapshot.
// If snapshot_date is unset, server defaults to policy.snapshot_date.
type ListSignaturesRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	DocumentId   int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TaskId       *int64                 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
	SnapshotDate *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=snapshot_date,json=snapshotDate,proto3,oneof" json:"snapshot_date,omitempty"`
	// Optional filters
	Status *documents.SignatureStatus `protobuf:"varint,4,opt,name=status,proto3,enum=resources.documents.SignatureStatus,oneof" json:"status,omitempty"`
	// Filter by signer
	UserId        *int32 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignaturesRequest) Reset() {
	*x = ListSignaturesRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturesRequest) ProtoMessage() {}

func (x *ListSignaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturesRequest.ProtoReflect.Descriptor instead.
func (*ListSignaturesRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{15}
}

func (x *ListSignaturesRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ListSignaturesRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *ListSignaturesRequest) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

func (x *ListSignaturesRequest) GetStatus() documents.SignatureStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return documents.SignatureStatus(0)
}

func (x *ListSignaturesRequest) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

type ListSignaturesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signatures    []*documents.Signature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSignaturesResponse) Reset() {
	*x = ListSignaturesResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSignaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSignaturesResponse) ProtoMessage() {}

func (x *ListSignaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSignaturesResponse.ProtoReflect.Descriptor instead.
func (*ListSignaturesResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{16}
}

func (x *ListSignaturesResponse) GetSignatures() []*documents.Signature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// Revoke a signature artifact by id (sets status=REVOKED, revoked_at=now, comment=...).
type RevokeSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignatureId   int64                  `protobuf:"varint,1,opt,name=signature_id,json=signatureId,proto3" json:"signature_id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeSignatureRequest) Reset() {
	*x = RevokeSignatureRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSignatureRequest) ProtoMessage() {}

func (x *RevokeSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSignatureRequest.ProtoReflect.Descriptor instead.
func (*RevokeSignatureRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{17}
}

func (x *RevokeSignatureRequest) GetSignatureId() int64 {
	if x != nil {
		return x.SignatureId
	}
	return 0
}

func (x *RevokeSignatureRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type RevokeSignatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     *documents.Signature   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeSignatureResponse) Reset() {
	*x = RevokeSignatureResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeSignatureResponse) ProtoMessage() {}

func (x *RevokeSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeSignatureResponse.ProtoReflect.Descriptor instead.
func (*RevokeSignatureResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{18}
}

func (x *RevokeSignatureResponse) GetSignature() *documents.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

type DecideSignatureRequest struct {
	state      protoimpl.MessageState        `protogen:"open.v1"`
	DocumentId int64                         `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TaskId     *int64                        `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
	NewStatus  documents.SignatureTaskStatus `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=resources.documents.SignatureTaskStatus" json:"new_status,omitempty"` // VALID or DECLINED
	Comment    string                        `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Type       documents.SignatureType       `protobuf:"varint,5,opt,name=type,proto3,enum=resources.documents.SignatureType" json:"type,omitempty"`
	PayloadSvg *string                       `protobuf:"bytes,6,opt,name=payload_svg,json=payloadSvg,proto3,oneof" json:"payload_svg,omitempty"`
	// When type=STAMP
	StampId       *int64 `protobuf:"varint,7,opt,name=stamp_id,json=stampId,proto3,oneof" json:"stamp_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideSignatureRequest) Reset() {
	*x = DecideSignatureRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideSignatureRequest) ProtoMessage() {}

func (x *DecideSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideSignatureRequest.ProtoReflect.Descriptor instead.
func (*DecideSignatureRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{19}
}

func (x *DecideSignatureRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *DecideSignatureRequest) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *DecideSignatureRequest) GetNewStatus() documents.SignatureTaskStatus {
	if x != nil {
		return x.NewStatus
	}
	return documents.SignatureTaskStatus(0)
}

func (x *DecideSignatureRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *DecideSignatureRequest) GetType() documents.SignatureType {
	if x != nil {
		return x.Type
	}
	return documents.SignatureType(0)
}

func (x *DecideSignatureRequest) GetPayloadSvg() string {
	if x != nil && x.PayloadSvg != nil {
		return *x.PayloadSvg
	}
	return ""
}

func (x *DecideSignatureRequest) GetStampId() int64 {
	if x != nil && x.StampId != nil {
		return *x.StampId
	}
	return 0
}

type DecideSignatureResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Signature     *documents.Signature       `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Task          *documents.SignatureTask   `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideSignatureResponse) Reset() {
	*x = DecideSignatureResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideSignatureResponse) ProtoMessage() {}

func (x *DecideSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideSignatureResponse.ProtoReflect.Descriptor instead.
func (*DecideSignatureResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{20}
}

func (x *DecideSignatureResponse) GetSignature() *documents.Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *DecideSignatureResponse) GetTask() *documents.SignatureTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *DecideSignatureResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ReopenSignatureTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int64                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReopenSignatureTaskRequest) Reset() {
	*x = ReopenSignatureTaskRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReopenSignatureTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReopenSignatureTaskRequest) ProtoMessage() {}

func (x *ReopenSignatureTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReopenSignatureTaskRequest.ProtoReflect.Descriptor instead.
func (*ReopenSignatureTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{21}
}

func (x *ReopenSignatureTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ReopenSignatureTaskRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ReopenSignatureTaskResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Task          *documents.SignatureTask   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReopenSignatureTaskResponse) Reset() {
	*x = ReopenSignatureTaskResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReopenSignatureTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReopenSignatureTaskResponse) ProtoMessage() {}

func (x *ReopenSignatureTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReopenSignatureTaskResponse.ProtoReflect.Descriptor instead.
func (*ReopenSignatureTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{22}
}

func (x *ReopenSignatureTaskResponse) GetTask() *documents.SignatureTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *ReopenSignatureTaskResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type RecomputeSignatureStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeSignatureStatusRequest) Reset() {
	*x = RecomputeSignatureStatusRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeSignatureStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeSignatureStatusRequest) ProtoMessage() {}

func (x *RecomputeSignatureStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeSignatureStatusRequest.ProtoReflect.Descriptor instead.
func (*RecomputeSignatureStatusRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{23}
}

func (x *RecomputeSignatureStatusRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type RecomputeSignatureStatusResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Policy        *documents.SignaturePolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeSignatureStatusResponse) Reset() {
	*x = RecomputeSignatureStatusResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeSignatureStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeSignatureStatusResponse) ProtoMessage() {}

func (x *RecomputeSignatureStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeSignatureStatusResponse.ProtoReflect.Descriptor instead.
func (*RecomputeSignatureStatusResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{24}
}

func (x *RecomputeSignatureStatusResponse) GetPolicy() *documents.SignaturePolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListUsableStampsRequest struct {
	state      protoimpl.MessageState      `protogen:"open.v1"`
	Pagination *database.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// If set, only stamps usable for signing this document are returned
	DocumentId    *int64 `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3,oneof" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsableStampsRequest) Reset() {
	*x = ListUsableStampsRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsableStampsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsableStampsRequest) ProtoMessage() {}

func (x *ListUsableStampsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsableStampsRequest.ProtoReflect.Descriptor instead.
func (*ListUsableStampsRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{25}
}

func (x *ListUsableStampsRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUsableStampsRequest) GetDocumentId() int64 {
	if x != nil && x.DocumentId != nil {
		return *x.DocumentId
	}
	return 0
}

type ListUsableStampsResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Stamps        []*documents.Stamp           `protobuf:"bytes,2,rep,name=stamps,proto3" json:"stamps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsableStampsResponse) Reset() {
	*x = ListUsableStampsResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsableStampsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsableStampsResponse) ProtoMessage() {}

func (x *ListUsableStampsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsableStampsResponse.ProtoReflect.Descriptor instead.
func (*ListUsableStampsResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{26}
}

func (x *ListUsableStampsResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListUsableStampsResponse) GetStamps() []*documents.Stamp {
	if x != nil {
		return x.Stamps
	}
	return nil
}

type UpsertStampRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stamp         *documents.Stamp       `protobuf:"bytes,1,opt,name=stamp,proto3" json:"stamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertStampRequest) Reset() {
	*x = UpsertStampRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertStampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStampRequest) ProtoMessage() {}

func (x *UpsertStampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStampRequest.ProtoReflect.Descriptor instead.
func (*UpsertStampRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{27}
}

func (x *UpsertStampRequest) GetStamp() *documents.Stamp {
	if x != nil {
		return x.Stamp
	}
	return nil
}

type UpsertStampResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stamp         *documents.Stamp       `protobuf:"bytes,1,opt,name=stamp,proto3" json:"stamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertStampResponse) Reset() {
	*x = UpsertStampResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertStampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertStampResponse) ProtoMessage() {}

func (x *UpsertStampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertStampResponse.ProtoReflect.Descriptor instead.
func (*UpsertStampResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{28}
}

func (x *UpsertStampResponse) GetStamp() *documents.Stamp {
	if x != nil {
		return x.Stamp
	}
	return nil
}

type DeleteStampRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StampId       int64                  `protobuf:"varint,1,opt,name=stamp_id,json=stampId,proto3" json:"stamp_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStampRequest) Reset() {
	*x = DeleteStampRequest{}
	mi := &file_services_documents_signing_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStampRequest) ProtoMessage() {}

func (x *DeleteStampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStampRequest.ProtoReflect.Descriptor instead.
func (*DeleteStampRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteStampRequest) GetStampId() int64 {
	if x != nil {
		return x.StampId
	}
	return 0
}

type DeleteStampResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStampResponse) Reset() {
	*x = DeleteStampResponse{}
	mi := &file_services_documents_signing_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStampResponse) ProtoMessage() {}

func (x *DeleteStampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_signing_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStampResponse.ProtoReflect.Descriptor instead.
func (*DeleteStampResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_signing_proto_rawDescGZIP(), []int{30}
}

var File_services_documents_signing_proto protoreflect.FileDescriptor

const file_services_documents_signing_proto_rawDesc = "" +
	"\n" +
	" services/documents/signing.proto\x12\x12services.documents\x1a\x1fcodegen/itemslen/itemslen.proto\x1a\x19codegen/perms/perms.proto\x1a(resources/common/database/database.proto\x1a!resources/documents/signing.proto\x1a\x1fresources/documents/stamp.proto\x1a#resources/timestamp/timestamp.proto\"\xfc\x01\n" +
	"\x1eListSignatureTasksInboxRequest\x12T\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2,.resources.common.database.PaginationRequestB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"pagination\x12N\n" +
	"\bstatuses\x18\x02 \x03(\x0e2(.resources.documents.SignatureTaskStatusB\b\xbaH\x05\x92\x01\x02\x10\x04R\bstatuses\x12$\n" +
	"\vonly_drafts\x18\x03 \x01(\bH\x00R\n" +
	"onlyDrafts\x88\x01\x01B\x0e\n" +
	"\f_only_drafts\"\xb8\x01\n" +
	"\x1fListSignatureTasksInboxResponse\x12U\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2-.resources.common.database.PaginationResponseB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"pagination\x12>\n" +
	"\x05tasks\x18\x02 \x03(\v2\".resources.documents.SignatureTaskB\x04\xc8\xf3\x18\x01R\x05tasks\"\x95\x01\n" +
	"\x1cListSignaturePoliciesRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12K\n" +
	"\rsnapshot_date\x18\x02 \x01(\v2\x1e.resources.timestamp.TimestampB\x06\xbaH\x03\xc8\x01\x01R\fsnapshotDate\"c\n" +
	"\x1dListSignaturePoliciesResponse\x12B\n" +
	"\x06policy\x18\x01 \x01(\v2$.resources.documents.SignaturePolicyB\x04\xc8\xf3\x18\x01R\x06policy\"d\n" +
	"\x1cUpsertSignaturePolicyRequest\x12D\n" +
	"\x06policy\x18\x01 \x01(\v2$.resources.documents.SignaturePolicyB\x06\xbaH\x03\xc8\x01\x01R\x06policy\"]\n" +
	"\x1dUpsertSignaturePolicyResponse\x12<\n" +
	"\x06policy\x18\x01 \x01(\v2$.resources.documents.SignaturePolicyR\x06policy\"H\n" +
	"\x1cDeleteSignaturePolicyRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\"\x1f\n" +
	"\x1dDeleteSignaturePolicyResponse\"\x95\x01\n" +
	"\x19ListSignatureTasksRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12N\n" +
	"\bstatuses\x18\x02 \x03(\x0e2(.resources.documents.SignatureTaskStatusB\b\xbaH\x05\x92\x01\x02\x10\x04R\bstatuses\"\\\n" +
	"\x1aListSignatureTasksResponse\x12>\n" +
	"\x05tasks\x18\x01 \x03(\v2\".resources.documents.SignatureTaskB\x04\xc8\xf3\x18\x01R\x05tasks\"\xa4\x02\n" +
	"\x11SignatureTaskSeed\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x10\n" +
	"\x03job\x18\x02 \x01(\tR\x03job\x12#\n" +
	"\rminimum_grade\x18\x03 \x01(\x05R\fminimumGrade\x12\"\n" +
	"\x05label\x18\x04 \x01(\tB\a\xbaH\x04r\x02\x18xH\x00R\x05label\x88\x01\x01\x12\x1f\n" +
	"\x05slots\x18\x05 \x01(\x05B\t\xbaH\x06\x1a\x04\x18\x05(\x01R\x05slots\x12:\n" +
	"\x06due_at\x18\x06 \x01(\v2\x1e.resources.timestamp.TimestampH\x01R\x05dueAt\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\a \x01(\tH\x02R\acomment\x88\x01\x01B\b\n" +
	"\x06_labelB\t\n" +
	"\a_due_atB\n" +
	"\n" +
	"\b_comment\"\xe0\x01\n" +
	"\x1bUpsertSignatureTasksRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12H\n" +
	"\rsnapshot_date\x18\x02 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\fsnapshotDate\x88\x01\x01\x12;\n" +
	"\x05seeds\x18\x03 \x03(\v2%.services.documents.SignatureTaskSeedR\x05seedsB\x10\n" +
	"\x0e_snapshot_date\"\xa6\x01\n" +
	"\x1cUpsertSignatureTasksResponse\x12#\n" +
	"\rtasks_created\x18\x01 \x01(\x05R\ftasksCreated\x12#\n" +
	"\rtasks_ensured\x18\x02 \x01(\x05R\ftasksEnsured\x12<\n" +
	"\x06policy\x18\x03 \x01(\v2$.resources.documents.SignaturePolicyR\x06policy\"\x9a\x01\n" +
	"\x1bDeleteSignatureTasksRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12#\n" +
	"\btask_ids\x18\x02 \x03(\x03B\b\xbaH\x05\x92\x01\x02\b\x01R\ataskIds\x12,\n" +
	"\x12delete_all_pending\x18\x03 \x01(\bR\x10deleteAllPending\"\x1e\n" +
	"\x1cDeleteSignatureTasksResponse\"\xc8\x02\n" +
	"\x15ListSignaturesRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12%\n" +
	"\atask_id\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00H\x00R\x06taskId\x88\x01\x01\x12H\n" +
	"\rsnapshot_date\x18\x03 \x01(\v2\x1e.resources.timestamp.TimestampH\x01R\fsnapshotDate\x88\x01\x01\x12A\n" +
	"\x06status\x18\x04 \x01(\x0e2$.resources.documents.SignatureStatusH\x02R\x06status\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x05 \x01(\x05H\x03R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_task_idB\x10\n" +
	"\x0e_snapshot_dateB\t\n" +
	"\a_statusB\n" +
	"\n" +
	"\b_user_id\"X\n" +
	"\x16ListSignaturesResponse\x12>\n" +
	"\n" +
	"signatures\x18\x01 \x03(\v2\x1e.resources.documents.SignatureR\n" +
	"signatures\"h\n" +
	"\x16RevokeSignatureRequest\x12*\n" +
	"\fsignature_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\vsignatureId\x12\"\n" +
	"\acomment\x18\x02 \x01(\tB\b\xbaH\x05r\x03\x18\xff\x01R\acomment\"W\n" +
	"\x17RevokeSignatureResponse\x12<\n" +
	"\tsignature\x18\x01 \x01(\v2\x1e.resources.documents.SignatureR\tsignature\"\x9a\x03\n" +
	"\x16DecideSignatureRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\x12%\n" +
	"\atask_id\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00H\x00R\x06taskId\x88\x01\x01\x12Q\n" +
	"\n" +
	"new_status\x18\x03 \x01(\x0e2(.resources.documents.SignatureTaskStatusB\b\xbaH\x05\x82\x01\x02\x10\x01R\tnewStatus\x12\"\n" +
	"\acomment\x18\x04 \x01(\tB\b\xbaH\x05r\x03\x18\xf4\x03R\acomment\x12@\n" +
	"\x04type\x18\x05 \x01(\x0e2\".resources.documents.SignatureTypeB\b\xbaH\x05\x82\x01\x02\x10\x01R\x04type\x12-\n" +
	"\vpayload_svg\x18\x06 \x01(\tB\a\xbaH\x04r\x02\x10\x01H\x01R\n" +
	"payloadSvg\x88\x01\x01\x12\x1e\n" +
	"\bstamp_id\x18\a \x01(\x03H\x02R\astampId\x88\x01\x01B\n" +
	"\n" +
	"\b_task_idB\x0e\n" +
	"\f_payload_svgB\v\n" +
	"\t_stamp_id\"\xcd\x01\n" +
	"\x17DecideSignatureResponse\x12<\n" +
	"\tsignature\x18\x01 \x01(\v2\x1e.resources.documents.SignatureR\tsignature\x126\n" +
	"\x04task\x18\x02 \x01(\v2\".resources.documents.SignatureTaskR\x04task\x12<\n" +
	"\x06policy\x18\x03 \x01(\v2$.resources.documents.SignaturePolicyR\x06policy\"b\n" +
	"\x1aReopenSignatureTaskRequest\x12 \n" +
	"\atask_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x06taskId\x12\"\n" +
	"\acomment\x18\x02 \x01(\tB\b\xbaH\x05r\x03\x18\xff\x01R\acomment\"\x93\x01\n" +
	"\x1bReopenSignatureTaskResponse\x126\n" +
	"\x04task\x18\x01 \x01(\v2\".resources.documents.SignatureTaskR\x04task\x12<\n" +
	"\x06policy\x18\x02 \x01(\v2$.resources.documents.SignaturePolicyR\x06policy\"K\n" +
	"\x1fRecomputeSignatureStatusRequest\x12(\n" +
	"\vdocument_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\n" +
	"documentId\"`\n" +
	" RecomputeSignatureStatusResponse\x12<\n" +
	"\x06policy\x18\x01 \x01(\v2$.resources.documents.SignaturePolicyR\x06policy\"\xa5\x01\n" +
	"\x17ListUsableStampsRequest\x12T\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2,.resources.common.database.PaginationRequestB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"pagination\x12$\n" +
	"\vdocument_id\x18\x02 \x01(\x03H\x00R\n" +
	"documentId\x88\x01\x01B\x0e\n" +
	"\f_document_id\"\xab\x01\n" +
	"\x18ListUsableStampsResponse\x12U\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2-.resources.common.database.PaginationResponseB\x06\xbaH\x03\xc8\x01\x01R\n" +
	"pagination\x128\n" +
	"\x06stamps\x18\x02 \x03(\v2\x1a.resources.documents.StampB\x04\xc8\xf3\x18\x01R\x06stamps\"N\n" +
	"\x12UpsertStampRequest\x128\n" +
	"\x05stamp\x18\x01 \x01(\v2\x1a.resources.documents.StampB\x06\xbaH\x03\xc8\x01\x01R\x05stamp\"G\n" +
	"\x13UpsertStampResponse\x120\n" +
	"\x05stamp\x18\x01 \x01(\v2\x1a.resources.documents.StampR\x05stamp\"8\n" +
	"\x12DeleteStampRequest\x12\"\n" +
	"\bstamp_id\x18\x01 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\astampId\"\x15\n" +
	"\x13DeleteStampResponse2\x83\x11\n" +
	"\x0eSigningService\x12\xb5\x01\n" +
	"\x17ListSignatureTasksInbox\x122.services.documents.ListSignatureTasksInboxRequest\x1a3.services.documents.ListSignatureTasksInboxResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\xaf\x01\n" +
	"\x15ListSignaturePolicies\x120.services.documents.ListSignaturePoliciesRequest\x1a1.services.documents.ListSignaturePoliciesResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\x84\x01\n" +
	"\x15UpsertSignaturePolicy\x120.services.documents.UpsertSignaturePolicyRequest\x1a1.services.documents.UpsertSignaturePolicyResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\x84\x01\n" +
	"\x15DeleteSignaturePolicy\x120.services.documents.DeleteSignaturePolicyRequest\x1a1.services.documents.DeleteSignaturePolicyResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\xa6\x01\n" +
	"\x12ListSignatureTasks\x12-.services.documents.ListSignatureTasksRequest\x1a..services.documents.ListSignatureTasksResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\x81\x01\n" +
	"\x14UpsertSignatureTasks\x12/.services.documents.UpsertSignatureTasksRequest\x1a0.services.documents.UpsertSignatureTasksResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\x81\x01\n" +
	"\x14DeleteSignatureTasks\x12/.services.documents.DeleteSignatureTasksRequest\x1a0.services.documents.DeleteSignatureTasksResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\x9a\x01\n" +
	"\x0eListSignatures\x12).services.documents.ListSignaturesRequest\x1a*.services.documents.ListSignaturesResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12r\n" +
	"\x0fRevokeSignature\x12*.services.documents.RevokeSignatureRequest\x1a+.services.documents.RevokeSignatureResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\x9d\x01\n" +
	"\x0fDecideSignature\x12*.services.documents.DecideSignatureRequest\x1a+.services.documents.DecideSignatureResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\x8f\x01\n" +
	"\x13ReopenSignatureTask\x12..services.documents.ReopenSignatureTaskRequest\x1a/.services.documents.ReopenSignatureTaskResponse\"\x17\xd2\xf3\x18\x13\b\x01\x1a\x0fRevokeSignature\x12\xa4\x01\n" +
	"\x18RecomputeSignatureStatus\x123.services.documents.RecomputeSignatureStatusRequest\x1a4.services.documents.RecomputeSignatureStatusResponse\"\x1d\xd2\xf3\x18\x19\b\x01\x1a\x15DeleteSignaturePolicy\x12u\n" +
	"\x10ListUsableStamps\x12+.services.documents.ListUsableStampsRequest\x1a,.services.documents.ListUsableStampsResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12f\n" +
	"\vUpsertStamp\x12&.services.documents.UpsertStampRequest\x1a'.services.documents.UpsertStampResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12f\n" +
	"\vDeleteStamp\x12&.services.documents.DeleteStampRequest\x1a'.services.documents.DeleteStampResponse\"\x06\xd2\xf3\x18\x02\b\x01\x1a\x17\xea\xf3\x18\x13\b9\x12\x0fi-mdi-signatureBPZNgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/documents;documentsb\x06proto3"

var (
	file_services_documents_signing_proto_rawDescOnce sync.Once
	file_services_documents_signing_proto_rawDescData []byte
)

func file_services_documents_signing_proto_rawDescGZIP() []byte {
	file_services_documents_signing_proto_rawDescOnce.Do(func() {
		file_services_documents_signing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_documents_signing_proto_rawDesc), len(file_services_documents_signing_proto_rawDesc)))
	})
	return file_services_documents_signing_proto_rawDescData
}

var file_services_documents_signing_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_services_documents_signing_proto_goTypes = []any{
	(*ListSignatureTasksInboxRequest)(nil),   // 0: services.documents.ListSignatureTasksInboxRequest
	(*ListSignatureTasksInboxResponse)(nil),  // 1: services.documents.ListSignatureTasksInboxResponse
	(*ListSignaturePoliciesRequest)(nil),     // 2: services.documents.ListSignaturePoliciesRequest
	(*ListSignaturePoliciesResponse)(nil),    // 3: services.documents.ListSignaturePoliciesResponse
	(*UpsertSignaturePolicyRequest)(nil),     // 4: services.documents.UpsertSignaturePolicyRequest
	(*UpsertSignaturePolicyResponse)(nil),    // 5: services.documents.UpsertSignaturePolicyResponse
	(*DeleteSignaturePolicyRequest)(nil),     // 6: services.documents.DeleteSignaturePolicyRequest
	(*DeleteSignaturePolicyResponse)(nil),    // 7: services.documents.DeleteSignaturePolicyResponse
	(*ListSignatureTasksRequest)(nil),        // 8: services.documents.ListSignatureTasksRequest
	(*ListSignatureTasksResponse)(nil),       // 9: services.documents.ListSignatureTasksResponse
	(*SignatureTaskSeed)(nil),                // 10: services.documents.SignatureTaskSeed
	(*UpsertSignatureTasksRequest)(nil),      // 11: services.documents.UpsertSignatureTasksRequest
	(*UpsertSignatureTasksResponse)(nil),     // 12: services.documents.UpsertSignatureTasksResponse
	(*DeleteSignatureTasksRequest)(nil),      // 13: services.documents.DeleteSignatureTasksRequest
	(*DeleteSignatureTasksResponse)(nil),     // 14: services.documents.DeleteSignatureTasksResponse
	(*ListSignaturesRequest)(nil),            // 15: services.documents.ListSignaturesRequest
	(*ListSignaturesResponse)(nil),           // 16: services.documents.ListSignaturesResponse
	(*RevokeSignatureRequest)(nil),           // 17: services.documents.RevokeSignatureRequest
	(*RevokeSignatureResponse)(nil),          // 18: services.documents.RevokeSignatureResponse
	(*DecideSignatureRequest)(nil),           // 19: services.documents.DecideSignatureRequest
	(*DecideSignatureResponse)(nil),          // 20: services.documents.DecideSignatureResponse
	(*ReopenSignatureTaskRequest)(nil),       // 21: services.documents.ReopenSignatureTaskRequest
	(*ReopenSignatureTaskResponse)(nil),      // 22: services.documents.ReopenSignatureTaskResponse
	(*RecomputeSignatureStatusRequest)(nil),  // 23: services.documents.RecomputeSignatureStatusRequest
	(*RecomputeSignatureStatusResponse)(nil), // 24: services.documents.RecomputeSignatureStatusResponse
	(*ListUsableStampsRequest)(nil),          // 25: services.documents.ListUsableStampsRequest
	(*ListUsableStampsResponse)(nil),         // 26: services.documents.ListUsableStampsResponse
	(*UpsertStampRequest)(nil),               // 27: services.documents.UpsertStampRequest
	(*UpsertStampResponse)(nil),              // 28: services.documents.UpsertStampResponse
	(*DeleteStampRequest)(nil),               // 29: services.documents.DeleteStampRequest
	(*DeleteStampResponse)(nil),              // 30: services.documents.DeleteStampResponse
	(*database.PaginationRequest)(nil),       // 31: resources.common.database.PaginationRequest
	(documents.SignatureTaskStatus)(0),       // 32: resources.documents.SignatureTaskStatus
	(*database.PaginationResponse)(nil),      // 33: resources.common.database.PaginationResponse
	(*documents.SignatureTask)(nil),          // 34: resources.documents.SignatureTask
	(*timestamp.Timestamp)(nil),              // 35: resources.timestamp.Timestamp
	(*documents.SignaturePolicy)(nil),        // 36: resources.documents.SignaturePolicy
	(documents.SignatureStatus)(0),           // 37: resources.documents.SignatureStatus
	(*documents.Signature)(nil),              // 38: resources.documents.Signature
	(documents.SignatureType)(0),             // 39: resources.documents.SignatureType
	(*documents.Stamp)(nil),                  // 40: resources.documents.Stamp
}
var file_services_documents_signing_proto_depIdxs = []int32{
	31, // 0: services.documents.ListSignatureTasksInboxRequest.pagination:type_name -> resources.common.database.PaginationRequest
	32, // 1: services.documents.ListSignatureTasksInboxRequest.statuses:type_name -> resources.documents.SignatureTaskStatus
	33, // 2: services.documents.ListSignatureTasksInboxResponse.pagination:type_name -> resources.common.database.PaginationResponse
	34, // 3: services.documents.ListSignatureTasksInboxResponse.tasks:type_name -> resources.documents.SignatureTask
	35, // 4: services.documents.ListSignaturePoliciesRequest.snapshot_date:type_name -> resources.timestamp.Timestamp
	36, // 5: services.documents.ListSignaturePoliciesResponse.policy:type_name -> resources.documents.SignaturePolicy
	36, // 6: services.documents.UpsertSignaturePolicyRequest.policy:type_name -> resources.documents.SignaturePolicy
	36, // 7: services.documents.UpsertSignaturePolicyResponse.policy:type_name -> resources.documents.SignaturePolicy
	32, // 8: services.documents.ListSignatureTasksRequest.statuses:type_name -> resources.documents.SignatureTaskStatus
	34, // 9: services.documents.ListSignatureTasksResponse.tasks:type_name -> resources.documents.SignatureTask
	35, // 10: services.documents.SignatureTaskSeed.due_at:type_name -> resources.timestamp.Timestamp
	35, // 11: services.documents.UpsertSignatureTasksRequest.snapshot_date:type_name -> resources.timestamp.Timestamp
	10, // 12: services.documents.UpsertSignatureTasksRequest.seeds:type_name -> services.documents.SignatureTaskSeed
	36, // 13: services.documents.UpsertSignatureTasksResponse.policy:type_name -> resources.documents.SignaturePolicy
	35, // 14: services.documents.ListSignaturesRequest.snapshot_date:type_name -> resources.timestamp.Timestamp
	37, // 15: services.documents.ListSignaturesRequest.status:type_name -> resources.documents.SignatureStatus
	38, // 16: services.documents.ListSignaturesResponse.signatures:type_name -> resources.documents.Signature
	38, // 17: services.documents.RevokeSignatureResponse.signature:type_name -> resources.documents.Signature
	32, // 18: services.documents.DecideSignatureRequest.new_status:type_name -> resources.documents.SignatureTaskStatus
	39, // 19: services.documents.DecideSignatureRequest.type:type_name -> resources.documents.SignatureType
	38, // 20: services.documents.DecideSignatureResponse.signature:type_name -> resources.documents.Signature
	34, // 21: services.documents.DecideSignatureResponse.task:type_name -> resources.documents.SignatureTask
	36, // 22: services.documents.DecideSignatureResponse.policy:type_name -> resources.documents.SignaturePolicy
	34, // 23: services.documents.ReopenSignatureTaskResponse.task:type_name -> resources.documents.SignatureTask
	36, // 24: services.documents.ReopenSignatureTaskResponse.policy:type_name -> resources.documents.SignaturePolicy
	36, // 25: services.documents.RecomputeSignatureStatusResponse.policy:type_name -> resources.documents.SignaturePolicy
	31, // 26: services.documents.ListUsableStampsRequest.pagination:type_name -> resources.common.database.PaginationRequest
	33, // 27: services.documents.ListUsableStampsResponse.pagination:type_name -> resources.common.database.PaginationResponse
	40, // 28: services.documents.ListUsableStampsResponse.stamps:type_name -> resources.documents.Stamp
	40, // 29: services.documents.UpsertStampRequest.stamp:type_name -> resources.documents.Stamp
	40, // 30: services.documents.UpsertStampResponse.stamp:type_name -> resources.documents.Stamp
	0,  // 31: services.documents.SigningService.ListSignatureTasksInbox:input_type -> services.documents.ListSignatureTasksInboxRequest
	2,  // 32: services.documents.SigningService.ListSignaturePolicies:input_type -> services.documents.ListSignaturePoliciesRequest
	4,  // 33: services.documents.SigningService.UpsertSignaturePolicy:input_type -> services.documents.UpsertSignaturePolicyRequest
	6,  // 34: services.documents.SigningService.DeleteSignaturePolicy:input_type -> services.documents.DeleteSignaturePolicyRequest
	8,  // 35: services.documents.SigningService.ListSignatureTasks:input_type -> services.documents.ListSignatureTasksRequest
	11, // 36: services.documents.SigningService.UpsertSignatureTasks:input_type -> services.documents.UpsertSignatureTasksRequest
	13, // 37: services.documents.SigningService.DeleteSignatureTasks:input_type -> services.documents.DeleteSignatureTasksRequest
	15, // 38: services.documents.SigningService.ListSignatures:input_type -> services.documents.ListSignaturesRequest
	17, // 39: services.documents.SigningService.RevokeSignature:input_type -> services.documents.RevokeSignatureRequest
	19, // 40: services.documents.SigningService.DecideSignature:input_type -> services.documents.DecideSignatureRequest
	21, // 41: services.documents.SigningService.ReopenSignatureTask:input_type -> services.documents.ReopenSignatureTaskRequest
	23, // 42: services.documents.SigningService.RecomputeSignatureStatus:input_type -> services.documents.RecomputeSignatureStatusRequest
	25, // 43: services.documents.SigningService.ListUsableStamps:input_type -> services.documents.ListUsableStampsRequest
	27, // 44: services.documents.SigningService.UpsertStamp:input_type -> services.documents.UpsertStampRequest
	29, // 45: services.documents.SigningService.DeleteStamp:input_type -> services.documents.DeleteStampRequest
	1,  // 46: services.documents.SigningService.ListSignatureTasksInbox:output_type -> services.documents.ListSignatureTasksInboxResponse
	3,  // 47: services.documents.SigningService.ListSignaturePolicies:output_type -> services.documents.ListSignaturePoliciesResponse
	5,  // 48: services.documents.SigningService.UpsertSignaturePolicy:output_type -> services.documents.UpsertSignaturePolicyResponse
	7,  // 49: services.documents.SigningService.DeleteSignaturePolicy:output_type -> services.documents.DeleteSignaturePolicyResponse
	9,  // 50: services.documents.SigningService.ListSignatureTasks:output_type -> services.documents.ListSignatureTasksResponse
	12, // 51: services.documents.SigningService.UpsertSignatureTasks:output_type -> services.documents.UpsertSignatureTasksResponse
	14, // 52: services.documents.SigningService.DeleteSignatureTasks:output_type -> services.documents.DeleteSignatureTasksResponse
	16, // 53: services.documents.SigningService.ListSignatures:output_type -> services.documents.ListSignaturesResponse
	18, // 54: services.documents.SigningService.RevokeSignature:output_type -> services.documents.RevokeSignatureResponse
	20, // 55: services.documents.SigningService.DecideSignature:output_type -> services.documents.DecideSignatureResponse
	22, // 56: services.documents.SigningService.ReopenSignatureTask:output_type -> services.documents.ReopenSignatureTaskResponse
	24, // 57: services.documents.SigningService.RecomputeSignatureStatus:output_type -> services.documents.RecomputeSignatureStatusResponse
	26, // 58: services.documents.SigningService.ListUsableStamps:output_type -> services.documents.ListUsableStampsResponse
	28, // 59: services.documents.SigningService.UpsertStamp:output_type -> services.documents.UpsertStampResponse
	30, // 60: services.documents.SigningService.DeleteStamp:output_type -> services.documents.DeleteStampResponse
	46, // [46:61] is the sub-list for method output_type
	31, // [31:46] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_services_documents_signing_proto_init() }
func file_services_documents_signing_proto_init() {
	if File_services_documents_signing_proto != nil {
		return
	}
	file_services_documents_signing_proto_msgTypes[0].OneofWrappers = []any{}
	file_services_documents_signing_proto_msgTypes[10].OneofWrappers = []any{}
	file_services_documents_signing_proto_msgTypes[11].OneofWrappers = []any{}
	file_services_documents_signing_proto_msgTypes[15].OneofWrappers = []any{}
	file_services_documents_signing_proto_msgTypes[19].OneofWrappers = []any{}
	file_services_documents_signing_proto_msgTypes[25].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_documents_signing_proto_rawDesc), len(file_services_documents_signing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_documents_signing_proto_goTypes,
		DependencyIndexes: file_services_documents_signing_proto_depIdxs,
		MessageInfos:      file_services_documents_signing_proto_msgTypes,
	}.Build()
	File_services_documents_signing_proto = out.File
	file_services_documents_signing_proto_goTypes = nil
	file_services_documents_signing_proto_depIdxs = nil
}
