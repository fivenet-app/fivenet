// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: services/documents/approval.proto

package documents

import (
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/itemslen"
	_ "github.com/fivenet-app/fivenet/v2025/gen/go/proto/codegen/perms"
	documents "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents"
	timestamp "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetApprovalPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovalPolicyRequest) Reset() {
	*x = GetApprovalPolicyRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovalPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovalPolicyRequest) ProtoMessage() {}

func (x *GetApprovalPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovalPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetApprovalPolicyRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{0}
}

func (x *GetApprovalPolicyRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type GetApprovalPolicyResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovalPolicyResponse) Reset() {
	*x = GetApprovalPolicyResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovalPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovalPolicyResponse) ProtoMessage() {}

func (x *GetApprovalPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovalPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetApprovalPolicyResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{1}
}

func (x *GetApprovalPolicyResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpsertApprovalPolicyRequest struct {
	state      protoimpl.MessageState     `protogen:"open.v1"`
	DocumentId int64                      `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	RuleKind   documents.ApprovalRuleKind `protobuf:"varint,2,opt,name=rule_kind,json=ruleKind,proto3,enum=resources.documents.ApprovalRuleKind" json:"rule_kind,omitempty"`
	// Used if rule_kind=QUORUM_ANY
	RequiredCount  int32                    `protobuf:"varint,3,opt,name=required_count,json=requiredCount,proto3" json:"required_count,omitempty"`
	OnEditBehavior documents.OnEditBehavior `protobuf:"varint,4,opt,name=on_edit_behavior,json=onEditBehavior,proto3,enum=resources.documents.OnEditBehavior" json:"on_edit_behavior,omitempty"`
	DueAt          *timestamp.Timestamp     `protobuf:"bytes,5,opt,name=due_at,json=dueAt,proto3,oneof" json:"due_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpsertApprovalPolicyRequest) Reset() {
	*x = UpsertApprovalPolicyRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertApprovalPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertApprovalPolicyRequest) ProtoMessage() {}

func (x *UpsertApprovalPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertApprovalPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpsertApprovalPolicyRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertApprovalPolicyRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *UpsertApprovalPolicyRequest) GetRuleKind() documents.ApprovalRuleKind {
	if x != nil {
		return x.RuleKind
	}
	return documents.ApprovalRuleKind(0)
}

func (x *UpsertApprovalPolicyRequest) GetRequiredCount() int32 {
	if x != nil {
		return x.RequiredCount
	}
	return 0
}

func (x *UpsertApprovalPolicyRequest) GetOnEditBehavior() documents.OnEditBehavior {
	if x != nil {
		return x.OnEditBehavior
	}
	return documents.OnEditBehavior(0)
}

func (x *UpsertApprovalPolicyRequest) GetDueAt() *timestamp.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

type UpsertApprovalPolicyResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertApprovalPolicyResponse) Reset() {
	*x = UpsertApprovalPolicyResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertApprovalPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertApprovalPolicyResponse) ProtoMessage() {}

func (x *UpsertApprovalPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertApprovalPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpsertApprovalPolicyResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertApprovalPolicyResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type StartApprovalRoundRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// If omitted, server uses now
	SnapshotDate  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=snapshot_date,json=snapshotDate,proto3" json:"snapshot_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartApprovalRoundRequest) Reset() {
	*x = StartApprovalRoundRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartApprovalRoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartApprovalRoundRequest) ProtoMessage() {}

func (x *StartApprovalRoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartApprovalRoundRequest.ProtoReflect.Descriptor instead.
func (*StartApprovalRoundRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{4}
}

func (x *StartApprovalRoundRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *StartApprovalRoundRequest) GetSnapshotDate() *timestamp.Timestamp {
	if x != nil {
		return x.SnapshotDate
	}
	return nil
}

type StartApprovalRoundResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	Tasks         []*documents.ApprovalTask `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartApprovalRoundResponse) Reset() {
	*x = StartApprovalRoundResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartApprovalRoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartApprovalRoundResponse) ProtoMessage() {}

func (x *StartApprovalRoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartApprovalRoundResponse.ProtoReflect.Descriptor instead.
func (*StartApprovalRoundResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{5}
}

func (x *StartApprovalRoundResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *StartApprovalRoundResponse) GetTasks() []*documents.ApprovalTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CompleteApprovalRoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteApprovalRoundRequest) Reset() {
	*x = CompleteApprovalRoundRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteApprovalRoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteApprovalRoundRequest) ProtoMessage() {}

func (x *CompleteApprovalRoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteApprovalRoundRequest.ProtoReflect.Descriptor instead.
func (*CompleteApprovalRoundRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteApprovalRoundRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type CompleteApprovalRoundResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteApprovalRoundResponse) Reset() {
	*x = CompleteApprovalRoundResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteApprovalRoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteApprovalRoundResponse) ProtoMessage() {}

func (x *CompleteApprovalRoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteApprovalRoundResponse.ProtoReflect.Descriptor instead.
func (*CompleteApprovalRoundResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{7}
}

func (x *CompleteApprovalRoundResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListApprovalTasksRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Search
	Statuses      []documents.ApprovalTaskStatus `protobuf:"varint,2,rep,packed,name=statuses,proto3,enum=resources.documents.ApprovalTaskStatus" json:"statuses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApprovalTasksRequest) Reset() {
	*x = ListApprovalTasksRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApprovalTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApprovalTasksRequest) ProtoMessage() {}

func (x *ListApprovalTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApprovalTasksRequest.ProtoReflect.Descriptor instead.
func (*ListApprovalTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{8}
}

func (x *ListApprovalTasksRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ListApprovalTasksRequest) GetStatuses() []documents.ApprovalTaskStatus {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type ListApprovalTasksResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Tasks         []*documents.ApprovalTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListApprovalTasksResponse) Reset() {
	*x = ListApprovalTasksResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApprovalTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApprovalTasksResponse) ProtoMessage() {}

func (x *ListApprovalTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApprovalTasksResponse.ProtoReflect.Descriptor instead.
func (*ListApprovalTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{9}
}

func (x *ListApprovalTasksResponse) GetTasks() []*documents.ApprovalTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DecideApprovalTaskRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	DocumentId    int64                        `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TaskId        int64                        `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	NewStatus     documents.ApprovalTaskStatus `protobuf:"varint,3,opt,name=new_status,json=newStatus,proto3,enum=resources.documents.ApprovalTaskStatus" json:"new_status,omitempty"` // APPROVED or DECLINED
	Comment       string                       `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideApprovalTaskRequest) Reset() {
	*x = DecideApprovalTaskRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideApprovalTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideApprovalTaskRequest) ProtoMessage() {}

func (x *DecideApprovalTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideApprovalTaskRequest.ProtoReflect.Descriptor instead.
func (*DecideApprovalTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{10}
}

func (x *DecideApprovalTaskRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *DecideApprovalTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *DecideApprovalTaskRequest) GetNewStatus() documents.ApprovalTaskStatus {
	if x != nil {
		return x.NewStatus
	}
	return documents.ApprovalTaskStatus(0)
}

func (x *DecideApprovalTaskRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DecideApprovalTaskResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Task          *documents.ApprovalTask   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"` // Counters updated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideApprovalTaskResponse) Reset() {
	*x = DecideApprovalTaskResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideApprovalTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideApprovalTaskResponse) ProtoMessage() {}

func (x *DecideApprovalTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideApprovalTaskResponse.ProtoReflect.Descriptor instead.
func (*DecideApprovalTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{11}
}

func (x *DecideApprovalTaskResponse) GetTask() *documents.ApprovalTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *DecideApprovalTaskResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ReopenApprovalTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int64                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReopenApprovalTaskRequest) Reset() {
	*x = ReopenApprovalTaskRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReopenApprovalTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReopenApprovalTaskRequest) ProtoMessage() {}

func (x *ReopenApprovalTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReopenApprovalTaskRequest.ProtoReflect.Descriptor instead.
func (*ReopenApprovalTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{12}
}

func (x *ReopenApprovalTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ReopenApprovalTaskRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ReopenApprovalTaskResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Task          *documents.ApprovalTask   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReopenApprovalTaskResponse) Reset() {
	*x = ReopenApprovalTaskResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReopenApprovalTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReopenApprovalTaskResponse) ProtoMessage() {}

func (x *ReopenApprovalTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReopenApprovalTaskResponse.ProtoReflect.Descriptor instead.
func (*ReopenApprovalTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{13}
}

func (x *ReopenApprovalTaskResponse) GetTask() *documents.ApprovalTask {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *ReopenApprovalTaskResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type RecomputeApprovalPolicyCountersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeApprovalPolicyCountersRequest) Reset() {
	*x = RecomputeApprovalPolicyCountersRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeApprovalPolicyCountersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeApprovalPolicyCountersRequest) ProtoMessage() {}

func (x *RecomputeApprovalPolicyCountersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeApprovalPolicyCountersRequest.ProtoReflect.Descriptor instead.
func (*RecomputeApprovalPolicyCountersRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{14}
}

func (x *RecomputeApprovalPolicyCountersRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

type RecomputeApprovalPolicyCountersResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Policy        *documents.ApprovalPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecomputeApprovalPolicyCountersResponse) Reset() {
	*x = RecomputeApprovalPolicyCountersResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecomputeApprovalPolicyCountersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecomputeApprovalPolicyCountersResponse) ProtoMessage() {}

func (x *RecomputeApprovalPolicyCountersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecomputeApprovalPolicyCountersResponse.ProtoReflect.Descriptor instead.
func (*RecomputeApprovalPolicyCountersResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{15}
}

func (x *RecomputeApprovalPolicyCountersResponse) GetPolicy() *documents.ApprovalPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

var File_services_documents_approval_proto protoreflect.FileDescriptor

const file_services_documents_approval_proto_rawDesc = "" +
	"\n" +
	"!services/documents/approval.proto\x12\x12services.documents\x1a\x1fcodegen/itemslen/itemslen.proto\x1a\x19codegen/perms/perms.proto\x1a\"resources/documents/approval.proto\x1a#resources/timestamp/timestamp.proto\";\n" +
	"\x18GetApprovalPolicyRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\"X\n" +
	"\x19GetApprovalPolicyResponse\x12;\n" +
	"\x06policy\x18\x01 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\"\xbf\x02\n" +
	"\x1bUpsertApprovalPolicyRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12B\n" +
	"\trule_kind\x18\x02 \x01(\x0e2%.resources.documents.ApprovalRuleKindR\bruleKind\x12%\n" +
	"\x0erequired_count\x18\x03 \x01(\x05R\rrequiredCount\x12M\n" +
	"\x10on_edit_behavior\x18\x04 \x01(\x0e2#.resources.documents.OnEditBehaviorR\x0eonEditBehavior\x12:\n" +
	"\x06due_at\x18\x05 \x01(\v2\x1e.resources.timestamp.TimestampH\x00R\x05dueAt\x88\x01\x01B\t\n" +
	"\a_due_at\"[\n" +
	"\x1cUpsertApprovalPolicyResponse\x12;\n" +
	"\x06policy\x18\x01 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\"\x81\x01\n" +
	"\x19StartApprovalRoundRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12C\n" +
	"\rsnapshot_date\x18\x02 \x01(\v2\x1e.resources.timestamp.TimestampR\fsnapshotDate\"\x98\x01\n" +
	"\x1aStartApprovalRoundResponse\x12;\n" +
	"\x06policy\x18\x01 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\x12=\n" +
	"\x05tasks\x18\x02 \x03(\v2!.resources.documents.ApprovalTaskB\x04\xc8\xf3\x18\x01R\x05tasks\"?\n" +
	"\x1cCompleteApprovalRoundRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\"\\\n" +
	"\x1dCompleteApprovalRoundResponse\x12;\n" +
	"\x06policy\x18\x01 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\"\x80\x01\n" +
	"\x18ListApprovalTasksRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12C\n" +
	"\bstatuses\x18\x02 \x03(\x0e2'.resources.documents.ApprovalTaskStatusR\bstatuses\"Z\n" +
	"\x19ListApprovalTasksResponse\x12=\n" +
	"\x05tasks\x18\x01 \x03(\v2!.resources.documents.ApprovalTaskB\x04\xc8\xf3\x18\x01R\x05tasks\"\xb7\x01\n" +
	"\x19DecideApprovalTaskRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x03R\x06taskId\x12F\n" +
	"\n" +
	"new_status\x18\x03 \x01(\x0e2'.resources.documents.ApprovalTaskStatusR\tnewStatus\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\"\x90\x01\n" +
	"\x1aDecideApprovalTaskResponse\x125\n" +
	"\x04task\x18\x01 \x01(\v2!.resources.documents.ApprovalTaskR\x04task\x12;\n" +
	"\x06policy\x18\x02 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\"L\n" +
	"\x19ReopenApprovalTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x03R\x06taskId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x90\x01\n" +
	"\x1aReopenApprovalTaskResponse\x125\n" +
	"\x04task\x18\x01 \x01(\v2!.resources.documents.ApprovalTaskR\x04task\x12;\n" +
	"\x06policy\x18\x02 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy\"I\n" +
	"&RecomputeApprovalPolicyCountersRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\"f\n" +
	"'RecomputeApprovalPolicyCountersResponse\x12;\n" +
	"\x06policy\x18\x01 \x01(\v2#.resources.documents.ApprovalPolicyR\x06policy2\xb5\n" +
	"\n" +
	"\x0fApprovalService\x12\xa3\x01\n" +
	"\x11GetApprovalPolicy\x12,.services.documents.GetApprovalPolicyRequest\x1a-.services.documents.GetApprovalPolicyResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\x81\x01\n" +
	"\x14UpsertApprovalPolicy\x12/.services.documents.UpsertApprovalPolicyRequest\x1a0.services.documents.UpsertApprovalPolicyResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\xa6\x01\n" +
	"\x12StartApprovalRound\x12-.services.documents.StartApprovalRoundRequest\x1a..services.documents.StartApprovalRoundResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\xaf\x01\n" +
	"\x15CompleteApprovalRound\x120.services.documents.CompleteApprovalRoundRequest\x1a1.services.documents.CompleteApprovalRoundResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\xa3\x01\n" +
	"\x11ListApprovalTasks\x12,.services.documents.ListApprovalTasksRequest\x1a-.services.documents.ListApprovalTasksResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12\xa6\x01\n" +
	"\x12DecideApprovalTask\x12-.services.documents.DecideApprovalTaskRequest\x1a..services.documents.DecideApprovalTaskResponse\"1\xd2\xf3\x18-\b\x01\x12\x1adocuments.DocumentsService\x1a\rListDocuments\x12{\n" +
	"\x12ReopenApprovalTask\x12-.services.documents.ReopenApprovalTaskRequest\x1a..services.documents.ReopenApprovalTaskResponse\"\x06\xd2\xf3\x18\x02\b\x01\x12\xb8\x01\n" +
	"\x1fRecomputeApprovalPolicyCounters\x12:.services.documents.RecomputeApprovalPolicyCountersRequest\x1a;.services.documents.RecomputeApprovalPolicyCountersResponse\"\x1c\xd2\xf3\x18\x18\b\x01\x1a\x14UpsertApprovalPolicy\x1a\x16\xea\xf3\x18\x12\b4\x12\x0ei-mdi-approvalBPZNgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/documents;documentsb\x06proto3"

var (
	file_services_documents_approval_proto_rawDescOnce sync.Once
	file_services_documents_approval_proto_rawDescData []byte
)

func file_services_documents_approval_proto_rawDescGZIP() []byte {
	file_services_documents_approval_proto_rawDescOnce.Do(func() {
		file_services_documents_approval_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_documents_approval_proto_rawDesc), len(file_services_documents_approval_proto_rawDesc)))
	})
	return file_services_documents_approval_proto_rawDescData
}

var file_services_documents_approval_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_services_documents_approval_proto_goTypes = []any{
	(*GetApprovalPolicyRequest)(nil),                // 0: services.documents.GetApprovalPolicyRequest
	(*GetApprovalPolicyResponse)(nil),               // 1: services.documents.GetApprovalPolicyResponse
	(*UpsertApprovalPolicyRequest)(nil),             // 2: services.documents.UpsertApprovalPolicyRequest
	(*UpsertApprovalPolicyResponse)(nil),            // 3: services.documents.UpsertApprovalPolicyResponse
	(*StartApprovalRoundRequest)(nil),               // 4: services.documents.StartApprovalRoundRequest
	(*StartApprovalRoundResponse)(nil),              // 5: services.documents.StartApprovalRoundResponse
	(*CompleteApprovalRoundRequest)(nil),            // 6: services.documents.CompleteApprovalRoundRequest
	(*CompleteApprovalRoundResponse)(nil),           // 7: services.documents.CompleteApprovalRoundResponse
	(*ListApprovalTasksRequest)(nil),                // 8: services.documents.ListApprovalTasksRequest
	(*ListApprovalTasksResponse)(nil),               // 9: services.documents.ListApprovalTasksResponse
	(*DecideApprovalTaskRequest)(nil),               // 10: services.documents.DecideApprovalTaskRequest
	(*DecideApprovalTaskResponse)(nil),              // 11: services.documents.DecideApprovalTaskResponse
	(*ReopenApprovalTaskRequest)(nil),               // 12: services.documents.ReopenApprovalTaskRequest
	(*ReopenApprovalTaskResponse)(nil),              // 13: services.documents.ReopenApprovalTaskResponse
	(*RecomputeApprovalPolicyCountersRequest)(nil),  // 14: services.documents.RecomputeApprovalPolicyCountersRequest
	(*RecomputeApprovalPolicyCountersResponse)(nil), // 15: services.documents.RecomputeApprovalPolicyCountersResponse
	(*documents.ApprovalPolicy)(nil),                // 16: resources.documents.ApprovalPolicy
	(documents.ApprovalRuleKind)(0),                 // 17: resources.documents.ApprovalRuleKind
	(documents.OnEditBehavior)(0),                   // 18: resources.documents.OnEditBehavior
	(*timestamp.Timestamp)(nil),                     // 19: resources.timestamp.Timestamp
	(*documents.ApprovalTask)(nil),                  // 20: resources.documents.ApprovalTask
	(documents.ApprovalTaskStatus)(0),               // 21: resources.documents.ApprovalTaskStatus
}
var file_services_documents_approval_proto_depIdxs = []int32{
	16, // 0: services.documents.GetApprovalPolicyResponse.policy:type_name -> resources.documents.ApprovalPolicy
	17, // 1: services.documents.UpsertApprovalPolicyRequest.rule_kind:type_name -> resources.documents.ApprovalRuleKind
	18, // 2: services.documents.UpsertApprovalPolicyRequest.on_edit_behavior:type_name -> resources.documents.OnEditBehavior
	19, // 3: services.documents.UpsertApprovalPolicyRequest.due_at:type_name -> resources.timestamp.Timestamp
	16, // 4: services.documents.UpsertApprovalPolicyResponse.policy:type_name -> resources.documents.ApprovalPolicy
	19, // 5: services.documents.StartApprovalRoundRequest.snapshot_date:type_name -> resources.timestamp.Timestamp
	16, // 6: services.documents.StartApprovalRoundResponse.policy:type_name -> resources.documents.ApprovalPolicy
	20, // 7: services.documents.StartApprovalRoundResponse.tasks:type_name -> resources.documents.ApprovalTask
	16, // 8: services.documents.CompleteApprovalRoundResponse.policy:type_name -> resources.documents.ApprovalPolicy
	21, // 9: services.documents.ListApprovalTasksRequest.statuses:type_name -> resources.documents.ApprovalTaskStatus
	20, // 10: services.documents.ListApprovalTasksResponse.tasks:type_name -> resources.documents.ApprovalTask
	21, // 11: services.documents.DecideApprovalTaskRequest.new_status:type_name -> resources.documents.ApprovalTaskStatus
	20, // 12: services.documents.DecideApprovalTaskResponse.task:type_name -> resources.documents.ApprovalTask
	16, // 13: services.documents.DecideApprovalTaskResponse.policy:type_name -> resources.documents.ApprovalPolicy
	20, // 14: services.documents.ReopenApprovalTaskResponse.task:type_name -> resources.documents.ApprovalTask
	16, // 15: services.documents.ReopenApprovalTaskResponse.policy:type_name -> resources.documents.ApprovalPolicy
	16, // 16: services.documents.RecomputeApprovalPolicyCountersResponse.policy:type_name -> resources.documents.ApprovalPolicy
	0,  // 17: services.documents.ApprovalService.GetApprovalPolicy:input_type -> services.documents.GetApprovalPolicyRequest
	2,  // 18: services.documents.ApprovalService.UpsertApprovalPolicy:input_type -> services.documents.UpsertApprovalPolicyRequest
	4,  // 19: services.documents.ApprovalService.StartApprovalRound:input_type -> services.documents.StartApprovalRoundRequest
	6,  // 20: services.documents.ApprovalService.CompleteApprovalRound:input_type -> services.documents.CompleteApprovalRoundRequest
	8,  // 21: services.documents.ApprovalService.ListApprovalTasks:input_type -> services.documents.ListApprovalTasksRequest
	10, // 22: services.documents.ApprovalService.DecideApprovalTask:input_type -> services.documents.DecideApprovalTaskRequest
	12, // 23: services.documents.ApprovalService.ReopenApprovalTask:input_type -> services.documents.ReopenApprovalTaskRequest
	14, // 24: services.documents.ApprovalService.RecomputeApprovalPolicyCounters:input_type -> services.documents.RecomputeApprovalPolicyCountersRequest
	1,  // 25: services.documents.ApprovalService.GetApprovalPolicy:output_type -> services.documents.GetApprovalPolicyResponse
	3,  // 26: services.documents.ApprovalService.UpsertApprovalPolicy:output_type -> services.documents.UpsertApprovalPolicyResponse
	5,  // 27: services.documents.ApprovalService.StartApprovalRound:output_type -> services.documents.StartApprovalRoundResponse
	7,  // 28: services.documents.ApprovalService.CompleteApprovalRound:output_type -> services.documents.CompleteApprovalRoundResponse
	9,  // 29: services.documents.ApprovalService.ListApprovalTasks:output_type -> services.documents.ListApprovalTasksResponse
	11, // 30: services.documents.ApprovalService.DecideApprovalTask:output_type -> services.documents.DecideApprovalTaskResponse
	13, // 31: services.documents.ApprovalService.ReopenApprovalTask:output_type -> services.documents.ReopenApprovalTaskResponse
	15, // 32: services.documents.ApprovalService.RecomputeApprovalPolicyCounters:output_type -> services.documents.RecomputeApprovalPolicyCountersResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_services_documents_approval_proto_init() }
func file_services_documents_approval_proto_init() {
	if File_services_documents_approval_proto != nil {
		return
	}
	file_services_documents_approval_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_documents_approval_proto_rawDesc), len(file_services_documents_approval_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_documents_approval_proto_goTypes,
		DependencyIndexes: file_services_documents_approval_proto_depIdxs,
		MessageInfos:      file_services_documents_approval_proto_msgTypes,
	}.Build()
	File_services_documents_approval_proto = out.File
	file_services_documents_approval_proto_goTypes = nil
	file_services_documents_approval_proto_depIdxs = nil
}
