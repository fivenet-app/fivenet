// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: services/documents/approval.proto

package documents

import (
	database "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/common/database"
	documents "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/documents"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApprovalPanelSnapshot struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Smallest incomplete order
	CurrentOrder int32 `protobuf:"varint,2,opt,name=current_order,json=currentOrder,proto3" json:"current_order,omitempty"`
	// With aggregates
	Stages                     []*documents.ApprovalStage `protobuf:"bytes,3,rep,name=stages,proto3" json:"stages,omitempty"`
	PendingTasks               []*documents.ApprovalTask  `protobuf:"bytes,4,rep,name=pending_tasks,json=pendingTasks,proto3" json:"pending_tasks,omitempty"`
	AllRequiredStagesSatisfied bool                       `protobuf:"varint,5,opt,name=all_required_stages_satisfied,json=allRequiredStagesSatisfied,proto3" json:"all_required_stages_satisfied,omitempty"`
	AnyDeclined                bool                       `protobuf:"varint,6,opt,name=any_declined,json=anyDeclined,proto3" json:"any_declined,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ApprovalPanelSnapshot) Reset() {
	*x = ApprovalPanelSnapshot{}
	mi := &file_services_documents_approval_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalPanelSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalPanelSnapshot) ProtoMessage() {}

func (x *ApprovalPanelSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalPanelSnapshot.ProtoReflect.Descriptor instead.
func (*ApprovalPanelSnapshot) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{0}
}

func (x *ApprovalPanelSnapshot) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ApprovalPanelSnapshot) GetCurrentOrder() int32 {
	if x != nil {
		return x.CurrentOrder
	}
	return 0
}

func (x *ApprovalPanelSnapshot) GetStages() []*documents.ApprovalStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *ApprovalPanelSnapshot) GetPendingTasks() []*documents.ApprovalTask {
	if x != nil {
		return x.PendingTasks
	}
	return nil
}

func (x *ApprovalPanelSnapshot) GetAllRequiredStagesSatisfied() bool {
	if x != nil {
		return x.AllRequiredStagesSatisfied
	}
	return false
}

func (x *ApprovalPanelSnapshot) GetAnyDeclined() bool {
	if x != nil {
		return x.AnyDeclined
	}
	return false
}

type StartReviewRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Optional override
	OnEditBehavior documents.OnEditBehavior `protobuf:"varint,2,opt,name=on_edit_behavior,json=onEditBehavior,proto3,enum=resources.documents.OnEditBehavior" json:"on_edit_behavior,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StartReviewRequest) Reset() {
	*x = StartReviewRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReviewRequest) ProtoMessage() {}

func (x *StartReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReviewRequest.ProtoReflect.Descriptor instead.
func (*StartReviewRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{1}
}

func (x *StartReviewRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *StartReviewRequest) GetOnEditBehavior() documents.OnEditBehavior {
	if x != nil {
		return x.OnEditBehavior
	}
	return documents.OnEditBehavior(0)
}

type StartReviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PolicyId      string                 `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Panel         *ApprovalPanelSnapshot `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartReviewResponse) Reset() {
	*x = StartReviewResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReviewResponse) ProtoMessage() {}

func (x *StartReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReviewResponse.ProtoReflect.Descriptor instead.
func (*StartReviewResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{2}
}

func (x *StartReviewResponse) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *StartReviewResponse) GetPanel() *ApprovalPanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type GetApprovalPanelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovalPanelRequest) Reset() {
	*x = GetApprovalPanelRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovalPanelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovalPanelRequest) ProtoMessage() {}

func (x *GetApprovalPanelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovalPanelRequest.ProtoReflect.Descriptor instead.
func (*GetApprovalPanelRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{3}
}

func (x *GetApprovalPanelRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type GetApprovalPanelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Panel         *ApprovalPanelSnapshot `protobuf:"bytes,1,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApprovalPanelResponse) Reset() {
	*x = GetApprovalPanelResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApprovalPanelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApprovalPanelResponse) ProtoMessage() {}

func (x *GetApprovalPanelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApprovalPanelResponse.ProtoReflect.Descriptor instead.
func (*GetApprovalPanelResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{4}
}

func (x *GetApprovalPanelResponse) GetPanel() *ApprovalPanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type ListMyApprovalTasksRequest struct {
	state      protoimpl.MessageState      `protogen:"open.v1"`
	Pagination *database.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Default: PENDING
	Status        []documents.ApprovalTaskStatus `protobuf:"varint,2,rep,packed,name=status,proto3,enum=resources.documents.ApprovalTaskStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMyApprovalTasksRequest) Reset() {
	*x = ListMyApprovalTasksRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMyApprovalTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyApprovalTasksRequest) ProtoMessage() {}

func (x *ListMyApprovalTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyApprovalTasksRequest.ProtoReflect.Descriptor instead.
func (*ListMyApprovalTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{5}
}

func (x *ListMyApprovalTasksRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMyApprovalTasksRequest) GetStatus() []documents.ApprovalTaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListMyApprovalTasksResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Tasks         []*documents.ApprovalTask    `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMyApprovalTasksResponse) Reset() {
	*x = ListMyApprovalTasksResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMyApprovalTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyApprovalTasksResponse) ProtoMessage() {}

func (x *ListMyApprovalTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyApprovalTasksResponse.ProtoReflect.Descriptor instead.
func (*ListMyApprovalTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{6}
}

func (x *ListMyApprovalTasksResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMyApprovalTasksResponse) GetTasks() []*documents.ApprovalTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DecisionApprove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       string                 `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionApprove) Reset() {
	*x = DecisionApprove{}
	mi := &file_services_documents_approval_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionApprove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionApprove) ProtoMessage() {}

func (x *DecisionApprove) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionApprove.ProtoReflect.Descriptor instead.
func (*DecisionApprove) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{7}
}

func (x *DecisionApprove) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DecisionDecline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionDecline) Reset() {
	*x = DecisionDecline{}
	mi := &file_services_documents_approval_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionDecline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionDecline) ProtoMessage() {}

func (x *DecisionDecline) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionDecline.ProtoReflect.Descriptor instead.
func (*DecisionDecline) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{8}
}

func (x *DecisionDecline) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type DecideApprovalTaskRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	TaskId string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Types that are valid to be assigned to Decision:
	//
	//	*DecideApprovalTaskRequest_Approve
	//	*DecideApprovalTaskRequest_Decline
	Decision      isDecideApprovalTaskRequest_Decision `protobuf_oneof:"decision"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideApprovalTaskRequest) Reset() {
	*x = DecideApprovalTaskRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideApprovalTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideApprovalTaskRequest) ProtoMessage() {}

func (x *DecideApprovalTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideApprovalTaskRequest.ProtoReflect.Descriptor instead.
func (*DecideApprovalTaskRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{9}
}

func (x *DecideApprovalTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *DecideApprovalTaskRequest) GetDecision() isDecideApprovalTaskRequest_Decision {
	if x != nil {
		return x.Decision
	}
	return nil
}

func (x *DecideApprovalTaskRequest) GetApprove() *DecisionApprove {
	if x != nil {
		if x, ok := x.Decision.(*DecideApprovalTaskRequest_Approve); ok {
			return x.Approve
		}
	}
	return nil
}

func (x *DecideApprovalTaskRequest) GetDecline() *DecisionDecline {
	if x != nil {
		if x, ok := x.Decision.(*DecideApprovalTaskRequest_Decline); ok {
			return x.Decline
		}
	}
	return nil
}

type isDecideApprovalTaskRequest_Decision interface {
	isDecideApprovalTaskRequest_Decision()
}

type DecideApprovalTaskRequest_Approve struct {
	Approve *DecisionApprove `protobuf:"bytes,10,opt,name=approve,proto3,oneof"`
}

type DecideApprovalTaskRequest_Decline struct {
	Decline *DecisionDecline `protobuf:"bytes,11,opt,name=decline,proto3,oneof"`
}

func (*DecideApprovalTaskRequest_Approve) isDecideApprovalTaskRequest_Decision() {}

func (*DecideApprovalTaskRequest_Decline) isDecideApprovalTaskRequest_Decision() {}

type DecideApprovalTaskResponse struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	Updated             *documents.ApprovalTask `protobuf:"bytes,1,opt,name=updated,proto3" json:"updated,omitempty"`
	StageCompleted      bool                    `protobuf:"varint,2,opt,name=stage_completed,json=stageCompleted,proto3" json:"stage_completed,omitempty"`
	DocumentNowApproved bool                    `protobuf:"varint,3,opt,name=document_now_approved,json=documentNowApproved,proto3" json:"document_now_approved,omitempty"`
	// Updated snapshot for optimistic UI
	Panel         *ApprovalPanelSnapshot `protobuf:"bytes,4,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecideApprovalTaskResponse) Reset() {
	*x = DecideApprovalTaskResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecideApprovalTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideApprovalTaskResponse) ProtoMessage() {}

func (x *DecideApprovalTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideApprovalTaskResponse.ProtoReflect.Descriptor instead.
func (*DecideApprovalTaskResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{10}
}

func (x *DecideApprovalTaskResponse) GetUpdated() *documents.ApprovalTask {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *DecideApprovalTaskResponse) GetStageCompleted() bool {
	if x != nil {
		return x.StageCompleted
	}
	return false
}

func (x *DecideApprovalTaskResponse) GetDocumentNowApproved() bool {
	if x != nil {
		return x.DocumentNowApproved
	}
	return false
}

func (x *DecideApprovalTaskResponse) GetPanel() *ApprovalPanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

// Leader UX: add or cancel reviewer tasks on the fly
type AddReviewersRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DocumentId int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	// Who to add
	Selector *documents.PartySelector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
	// Optional: convert to a parallel stage if needed
	QuorumAny int32 `protobuf:"varint,3,opt,name=quorum_any,json=quorumAny,proto3" json:"quorum_any,omitempty"`
	// Optional: attach to existing stage
	StageId       int64 `protobuf:"varint,4,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddReviewersRequest) Reset() {
	*x = AddReviewersRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReviewersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReviewersRequest) ProtoMessage() {}

func (x *AddReviewersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReviewersRequest.ProtoReflect.Descriptor instead.
func (*AddReviewersRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{11}
}

func (x *AddReviewersRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *AddReviewersRequest) GetSelector() *documents.PartySelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *AddReviewersRequest) GetQuorumAny() int32 {
	if x != nil {
		return x.QuorumAny
	}
	return 0
}

func (x *AddReviewersRequest) GetStageId() int64 {
	if x != nil {
		return x.StageId
	}
	return 0
}

type AddReviewersResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	CreatedTasks  []*documents.ApprovalTask `protobuf:"bytes,1,rep,name=created_tasks,json=createdTasks,proto3" json:"created_tasks,omitempty"`
	Panel         *ApprovalPanelSnapshot    `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddReviewersResponse) Reset() {
	*x = AddReviewersResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddReviewersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReviewersResponse) ProtoMessage() {}

func (x *AddReviewersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReviewersResponse.ProtoReflect.Descriptor instead.
func (*AddReviewersResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{12}
}

func (x *AddReviewersResponse) GetCreatedTasks() []*documents.ApprovalTask {
	if x != nil {
		return x.CreatedTasks
	}
	return nil
}

func (x *AddReviewersResponse) GetPanel() *ApprovalPanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

type CancelReviewTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    int64                  `protobuf:"varint,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TaskIds       []string               `protobuf:"bytes,2,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelReviewTasksRequest) Reset() {
	*x = CancelReviewTasksRequest{}
	mi := &file_services_documents_approval_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelReviewTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReviewTasksRequest) ProtoMessage() {}

func (x *CancelReviewTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReviewTasksRequest.ProtoReflect.Descriptor instead.
func (*CancelReviewTasksRequest) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{13}
}

func (x *CancelReviewTasksRequest) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *CancelReviewTasksRequest) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *CancelReviewTasksRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelReviewTasksResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Cancelled     []*documents.ApprovalTask `protobuf:"bytes,1,rep,name=cancelled,proto3" json:"cancelled,omitempty"`
	Panel         *ApprovalPanelSnapshot    `protobuf:"bytes,2,opt,name=panel,proto3" json:"panel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelReviewTasksResponse) Reset() {
	*x = CancelReviewTasksResponse{}
	mi := &file_services_documents_approval_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelReviewTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReviewTasksResponse) ProtoMessage() {}

func (x *CancelReviewTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_documents_approval_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReviewTasksResponse.ProtoReflect.Descriptor instead.
func (*CancelReviewTasksResponse) Descriptor() ([]byte, []int) {
	return file_services_documents_approval_proto_rawDescGZIP(), []int{14}
}

func (x *CancelReviewTasksResponse) GetCancelled() []*documents.ApprovalTask {
	if x != nil {
		return x.Cancelled
	}
	return nil
}

func (x *CancelReviewTasksResponse) GetPanel() *ApprovalPanelSnapshot {
	if x != nil {
		return x.Panel
	}
	return nil
}

var File_services_documents_approval_proto protoreflect.FileDescriptor

const file_services_documents_approval_proto_rawDesc = "" +
	"\n" +
	"!services/documents/approval.proto\x12\x12services.documents\x1a(resources/common/database/database.proto\x1a\"resources/documents/approval.proto\"\xc7\x02\n" +
	"\x15ApprovalPanelSnapshot\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12#\n" +
	"\rcurrent_order\x18\x02 \x01(\x05R\fcurrentOrder\x12:\n" +
	"\x06stages\x18\x03 \x03(\v2\".resources.documents.ApprovalStageR\x06stages\x12F\n" +
	"\rpending_tasks\x18\x04 \x03(\v2!.resources.documents.ApprovalTaskR\fpendingTasks\x12A\n" +
	"\x1dall_required_stages_satisfied\x18\x05 \x01(\bR\x1aallRequiredStagesSatisfied\x12!\n" +
	"\fany_declined\x18\x06 \x01(\bR\vanyDeclined\"\x84\x01\n" +
	"\x12StartReviewRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12M\n" +
	"\x10on_edit_behavior\x18\x02 \x01(\x0e2#.resources.documents.OnEditBehaviorR\x0eonEditBehavior\"s\n" +
	"\x13StartReviewResponse\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12?\n" +
	"\x05panel\x18\x02 \x01(\v2).services.documents.ApprovalPanelSnapshotR\x05panel\":\n" +
	"\x17GetApprovalPanelRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\"[\n" +
	"\x18GetApprovalPanelResponse\x12?\n" +
	"\x05panel\x18\x01 \x01(\v2).services.documents.ApprovalPanelSnapshotR\x05panel\"\xab\x01\n" +
	"\x1aListMyApprovalTasksRequest\x12L\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2,.resources.common.database.PaginationRequestR\n" +
	"pagination\x12?\n" +
	"\x06status\x18\x02 \x03(\x0e2'.resources.documents.ApprovalTaskStatusR\x06status\"\xa5\x01\n" +
	"\x1bListMyApprovalTasksResponse\x12M\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2-.resources.common.database.PaginationResponseR\n" +
	"pagination\x127\n" +
	"\x05tasks\x18\x02 \x03(\v2!.resources.documents.ApprovalTaskR\x05tasks\"+\n" +
	"\x0fDecisionApprove\x12\x18\n" +
	"\acomment\x18\x01 \x01(\tR\acomment\")\n" +
	"\x0fDecisionDecline\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"\xc2\x01\n" +
	"\x19DecideApprovalTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12?\n" +
	"\aapprove\x18\n" +
	" \x01(\v2#.services.documents.DecisionApproveH\x00R\aapprove\x12?\n" +
	"\adecline\x18\v \x01(\v2#.services.documents.DecisionDeclineH\x00R\adeclineB\n" +
	"\n" +
	"\bdecision\"\xf7\x01\n" +
	"\x1aDecideApprovalTaskResponse\x12;\n" +
	"\aupdated\x18\x01 \x01(\v2!.resources.documents.ApprovalTaskR\aupdated\x12'\n" +
	"\x0fstage_completed\x18\x02 \x01(\bR\x0estageCompleted\x122\n" +
	"\x15document_now_approved\x18\x03 \x01(\bR\x13documentNowApproved\x12?\n" +
	"\x05panel\x18\x04 \x01(\v2).services.documents.ApprovalPanelSnapshotR\x05panel\"\xb0\x01\n" +
	"\x13AddReviewersRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12>\n" +
	"\bselector\x18\x02 \x01(\v2\".resources.documents.PartySelectorR\bselector\x12\x1d\n" +
	"\n" +
	"quorum_any\x18\x03 \x01(\x05R\tquorumAny\x12\x19\n" +
	"\bstage_id\x18\x04 \x01(\x03R\astageId\"\x9f\x01\n" +
	"\x14AddReviewersResponse\x12F\n" +
	"\rcreated_tasks\x18\x01 \x03(\v2!.resources.documents.ApprovalTaskR\fcreatedTasks\x12?\n" +
	"\x05panel\x18\x02 \x01(\v2).services.documents.ApprovalPanelSnapshotR\x05panel\"n\n" +
	"\x18CancelReviewTasksRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\x03R\n" +
	"documentId\x12\x19\n" +
	"\btask_ids\x18\x02 \x03(\tR\ataskIds\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x9d\x01\n" +
	"\x19CancelReviewTasksResponse\x12?\n" +
	"\tcancelled\x18\x01 \x03(\v2!.resources.documents.ApprovalTaskR\tcancelled\x12?\n" +
	"\x05panel\x18\x02 \x01(\v2).services.documents.ApprovalPanelSnapshotR\x05panel2\xa2\x05\n" +
	"\x0fApprovalService\x12^\n" +
	"\vStartReview\x12&.services.documents.StartReviewRequest\x1a'.services.documents.StartReviewResponse\x12m\n" +
	"\x10GetApprovalPanel\x12+.services.documents.GetApprovalPanelRequest\x1a,.services.documents.GetApprovalPanelResponse\x12v\n" +
	"\x13ListMyApprovalTasks\x12..services.documents.ListMyApprovalTasksRequest\x1a/.services.documents.ListMyApprovalTasksResponse\x12s\n" +
	"\x12DecideApprovalTask\x12-.services.documents.DecideApprovalTaskRequest\x1a..services.documents.DecideApprovalTaskResponse\x12a\n" +
	"\fAddReviewers\x12'.services.documents.AddReviewersRequest\x1a(.services.documents.AddReviewersResponse\x12p\n" +
	"\x11CancelReviewTasks\x12,.services.documents.CancelReviewTasksRequest\x1a-.services.documents.CancelReviewTasksResponseBPZNgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/documents;documentsb\x06proto3"

var (
	file_services_documents_approval_proto_rawDescOnce sync.Once
	file_services_documents_approval_proto_rawDescData []byte
)

func file_services_documents_approval_proto_rawDescGZIP() []byte {
	file_services_documents_approval_proto_rawDescOnce.Do(func() {
		file_services_documents_approval_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_documents_approval_proto_rawDesc), len(file_services_documents_approval_proto_rawDesc)))
	})
	return file_services_documents_approval_proto_rawDescData
}

var file_services_documents_approval_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_services_documents_approval_proto_goTypes = []any{
	(*ApprovalPanelSnapshot)(nil),       // 0: services.documents.ApprovalPanelSnapshot
	(*StartReviewRequest)(nil),          // 1: services.documents.StartReviewRequest
	(*StartReviewResponse)(nil),         // 2: services.documents.StartReviewResponse
	(*GetApprovalPanelRequest)(nil),     // 3: services.documents.GetApprovalPanelRequest
	(*GetApprovalPanelResponse)(nil),    // 4: services.documents.GetApprovalPanelResponse
	(*ListMyApprovalTasksRequest)(nil),  // 5: services.documents.ListMyApprovalTasksRequest
	(*ListMyApprovalTasksResponse)(nil), // 6: services.documents.ListMyApprovalTasksResponse
	(*DecisionApprove)(nil),             // 7: services.documents.DecisionApprove
	(*DecisionDecline)(nil),             // 8: services.documents.DecisionDecline
	(*DecideApprovalTaskRequest)(nil),   // 9: services.documents.DecideApprovalTaskRequest
	(*DecideApprovalTaskResponse)(nil),  // 10: services.documents.DecideApprovalTaskResponse
	(*AddReviewersRequest)(nil),         // 11: services.documents.AddReviewersRequest
	(*AddReviewersResponse)(nil),        // 12: services.documents.AddReviewersResponse
	(*CancelReviewTasksRequest)(nil),    // 13: services.documents.CancelReviewTasksRequest
	(*CancelReviewTasksResponse)(nil),   // 14: services.documents.CancelReviewTasksResponse
	(*documents.ApprovalStage)(nil),     // 15: resources.documents.ApprovalStage
	(*documents.ApprovalTask)(nil),      // 16: resources.documents.ApprovalTask
	(documents.OnEditBehavior)(0),       // 17: resources.documents.OnEditBehavior
	(*database.PaginationRequest)(nil),  // 18: resources.common.database.PaginationRequest
	(documents.ApprovalTaskStatus)(0),   // 19: resources.documents.ApprovalTaskStatus
	(*database.PaginationResponse)(nil), // 20: resources.common.database.PaginationResponse
	(*documents.PartySelector)(nil),     // 21: resources.documents.PartySelector
}
var file_services_documents_approval_proto_depIdxs = []int32{
	15, // 0: services.documents.ApprovalPanelSnapshot.stages:type_name -> resources.documents.ApprovalStage
	16, // 1: services.documents.ApprovalPanelSnapshot.pending_tasks:type_name -> resources.documents.ApprovalTask
	17, // 2: services.documents.StartReviewRequest.on_edit_behavior:type_name -> resources.documents.OnEditBehavior
	0,  // 3: services.documents.StartReviewResponse.panel:type_name -> services.documents.ApprovalPanelSnapshot
	0,  // 4: services.documents.GetApprovalPanelResponse.panel:type_name -> services.documents.ApprovalPanelSnapshot
	18, // 5: services.documents.ListMyApprovalTasksRequest.pagination:type_name -> resources.common.database.PaginationRequest
	19, // 6: services.documents.ListMyApprovalTasksRequest.status:type_name -> resources.documents.ApprovalTaskStatus
	20, // 7: services.documents.ListMyApprovalTasksResponse.pagination:type_name -> resources.common.database.PaginationResponse
	16, // 8: services.documents.ListMyApprovalTasksResponse.tasks:type_name -> resources.documents.ApprovalTask
	7,  // 9: services.documents.DecideApprovalTaskRequest.approve:type_name -> services.documents.DecisionApprove
	8,  // 10: services.documents.DecideApprovalTaskRequest.decline:type_name -> services.documents.DecisionDecline
	16, // 11: services.documents.DecideApprovalTaskResponse.updated:type_name -> resources.documents.ApprovalTask
	0,  // 12: services.documents.DecideApprovalTaskResponse.panel:type_name -> services.documents.ApprovalPanelSnapshot
	21, // 13: services.documents.AddReviewersRequest.selector:type_name -> resources.documents.PartySelector
	16, // 14: services.documents.AddReviewersResponse.created_tasks:type_name -> resources.documents.ApprovalTask
	0,  // 15: services.documents.AddReviewersResponse.panel:type_name -> services.documents.ApprovalPanelSnapshot
	16, // 16: services.documents.CancelReviewTasksResponse.cancelled:type_name -> resources.documents.ApprovalTask
	0,  // 17: services.documents.CancelReviewTasksResponse.panel:type_name -> services.documents.ApprovalPanelSnapshot
	1,  // 18: services.documents.ApprovalService.StartReview:input_type -> services.documents.StartReviewRequest
	3,  // 19: services.documents.ApprovalService.GetApprovalPanel:input_type -> services.documents.GetApprovalPanelRequest
	5,  // 20: services.documents.ApprovalService.ListMyApprovalTasks:input_type -> services.documents.ListMyApprovalTasksRequest
	9,  // 21: services.documents.ApprovalService.DecideApprovalTask:input_type -> services.documents.DecideApprovalTaskRequest
	11, // 22: services.documents.ApprovalService.AddReviewers:input_type -> services.documents.AddReviewersRequest
	13, // 23: services.documents.ApprovalService.CancelReviewTasks:input_type -> services.documents.CancelReviewTasksRequest
	2,  // 24: services.documents.ApprovalService.StartReview:output_type -> services.documents.StartReviewResponse
	4,  // 25: services.documents.ApprovalService.GetApprovalPanel:output_type -> services.documents.GetApprovalPanelResponse
	6,  // 26: services.documents.ApprovalService.ListMyApprovalTasks:output_type -> services.documents.ListMyApprovalTasksResponse
	10, // 27: services.documents.ApprovalService.DecideApprovalTask:output_type -> services.documents.DecideApprovalTaskResponse
	12, // 28: services.documents.ApprovalService.AddReviewers:output_type -> services.documents.AddReviewersResponse
	14, // 29: services.documents.ApprovalService.CancelReviewTasks:output_type -> services.documents.CancelReviewTasksResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_services_documents_approval_proto_init() }
func file_services_documents_approval_proto_init() {
	if File_services_documents_approval_proto != nil {
		return
	}
	file_services_documents_approval_proto_msgTypes[9].OneofWrappers = []any{
		(*DecideApprovalTaskRequest_Approve)(nil),
		(*DecideApprovalTaskRequest_Decline)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_documents_approval_proto_rawDesc), len(file_services_documents_approval_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_documents_approval_proto_goTypes,
		DependencyIndexes: file_services_documents_approval_proto_depIdxs,
		MessageInfos:      file_services_documents_approval_proto_msgTypes,
	}.Build()
	File_services_documents_approval_proto = out.File
	file_services_documents_approval_proto_goTypes = nil
	file_services_documents_approval_proto_depIdxs = nil
}
