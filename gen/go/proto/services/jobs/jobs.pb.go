// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: services/jobs/jobs.proto

package jobs

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	database "github.com/fivenet-app/fivenet/gen/go/proto/resources/common/database"
	jobs "github.com/fivenet-app/fivenet/gen/go/proto/resources/jobs"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListColleaguesRequest struct {
	state      protoimpl.MessageState      `protogen:"open.v1"`
	Pagination *database.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Sort       *database.Sort              `protobuf:"bytes,2,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	// Search params
	Search        string   `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	UserId        *int32   `protobuf:"varint,4,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Absent        *bool    `protobuf:"varint,5,opt,name=absent,proto3,oneof" json:"absent,omitempty"`
	LabelIds      []uint64 `protobuf:"varint,6,rep,packed,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	NamePrefix    *string  `protobuf:"bytes,7,opt,name=name_prefix,json=namePrefix,proto3,oneof" json:"name_prefix,omitempty"`
	NameSuffix    *string  `protobuf:"bytes,8,opt,name=name_suffix,json=nameSuffix,proto3,oneof" json:"name_suffix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListColleaguesRequest) Reset() {
	*x = ListColleaguesRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListColleaguesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColleaguesRequest) ProtoMessage() {}

func (x *ListColleaguesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColleaguesRequest.ProtoReflect.Descriptor instead.
func (*ListColleaguesRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *ListColleaguesRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListColleaguesRequest) GetSort() *database.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListColleaguesRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListColleaguesRequest) GetUserId() int32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListColleaguesRequest) GetAbsent() bool {
	if x != nil && x.Absent != nil {
		return *x.Absent
	}
	return false
}

func (x *ListColleaguesRequest) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *ListColleaguesRequest) GetNamePrefix() string {
	if x != nil && x.NamePrefix != nil {
		return *x.NamePrefix
	}
	return ""
}

func (x *ListColleaguesRequest) GetNameSuffix() string {
	if x != nil && x.NameSuffix != nil {
		return *x.NameSuffix
	}
	return ""
}

type ListColleaguesResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Colleagues    []*jobs.Colleague            `protobuf:"bytes,2,rep,name=colleagues,proto3" json:"colleagues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListColleaguesResponse) Reset() {
	*x = ListColleaguesResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListColleaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColleaguesResponse) ProtoMessage() {}

func (x *ListColleaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColleaguesResponse.ProtoReflect.Descriptor instead.
func (*ListColleaguesResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{1}
}

func (x *ListColleaguesResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListColleaguesResponse) GetColleagues() []*jobs.Colleague {
	if x != nil {
		return x.Colleagues
	}
	return nil
}

type GetSelfRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfRequest) Reset() {
	*x = GetSelfRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfRequest) ProtoMessage() {}

func (x *GetSelfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfRequest.ProtoReflect.Descriptor instead.
func (*GetSelfRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{2}
}

type GetSelfResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Colleague     *jobs.Colleague        `protobuf:"bytes,1,opt,name=colleague,proto3" json:"colleague,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSelfResponse) Reset() {
	*x = GetSelfResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSelfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelfResponse) ProtoMessage() {}

func (x *GetSelfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelfResponse.ProtoReflect.Descriptor instead.
func (*GetSelfResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{3}
}

func (x *GetSelfResponse) GetColleague() *jobs.Colleague {
	if x != nil {
		return x.Colleague
	}
	return nil
}

type GetColleagueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InfoOnly      *bool                  `protobuf:"varint,2,opt,name=info_only,json=infoOnly,proto3,oneof" json:"info_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueRequest) Reset() {
	*x = GetColleagueRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueRequest) ProtoMessage() {}

func (x *GetColleagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueRequest.ProtoReflect.Descriptor instead.
func (*GetColleagueRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *GetColleagueRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetColleagueRequest) GetInfoOnly() bool {
	if x != nil && x.InfoOnly != nil {
		return *x.InfoOnly
	}
	return false
}

type GetColleagueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Colleague     *jobs.Colleague        `protobuf:"bytes,1,opt,name=colleague,proto3" json:"colleague,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueResponse) Reset() {
	*x = GetColleagueResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueResponse) ProtoMessage() {}

func (x *GetColleagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueResponse.ProtoReflect.Descriptor instead.
func (*GetColleagueResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{5}
}

func (x *GetColleagueResponse) GetColleague() *jobs.Colleague {
	if x != nil {
		return x.Colleague
	}
	return nil
}

type ListColleagueActivityRequest struct {
	state      protoimpl.MessageState      `protogen:"open.v1"`
	Pagination *database.PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Sort       *database.Sort              `protobuf:"bytes,2,opt,name=sort,proto3,oneof" json:"sort,omitempty"`
	// Search params
	UserIds       []int32                     `protobuf:"varint,3,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	ActivityTypes []jobs.JobsUserActivityType `protobuf:"varint,4,rep,packed,name=activity_types,json=activityTypes,proto3,enum=resources.jobs.JobsUserActivityType" json:"activity_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListColleagueActivityRequest) Reset() {
	*x = ListColleagueActivityRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListColleagueActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColleagueActivityRequest) ProtoMessage() {}

func (x *ListColleagueActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColleagueActivityRequest.ProtoReflect.Descriptor instead.
func (*ListColleagueActivityRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{6}
}

func (x *ListColleagueActivityRequest) GetPagination() *database.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListColleagueActivityRequest) GetSort() *database.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListColleagueActivityRequest) GetUserIds() []int32 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *ListColleagueActivityRequest) GetActivityTypes() []jobs.JobsUserActivityType {
	if x != nil {
		return x.ActivityTypes
	}
	return nil
}

type ListColleagueActivityResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Pagination    *database.PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Activity      []*jobs.JobsUserActivity     `protobuf:"bytes,2,rep,name=activity,proto3" json:"activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListColleagueActivityResponse) Reset() {
	*x = ListColleagueActivityResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListColleagueActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColleagueActivityResponse) ProtoMessage() {}

func (x *ListColleagueActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColleagueActivityResponse.ProtoReflect.Descriptor instead.
func (*ListColleagueActivityResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{7}
}

func (x *ListColleagueActivityResponse) GetPagination() *database.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListColleagueActivityResponse) GetActivity() []*jobs.JobsUserActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

type SetJobsUserPropsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Props *jobs.JobsUserProps    `protobuf:"bytes,1,opt,name=props,proto3" json:"props,omitempty"`
	// @sanitize
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetJobsUserPropsRequest) Reset() {
	*x = SetJobsUserPropsRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetJobsUserPropsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobsUserPropsRequest) ProtoMessage() {}

func (x *SetJobsUserPropsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobsUserPropsRequest.ProtoReflect.Descriptor instead.
func (*SetJobsUserPropsRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{8}
}

func (x *SetJobsUserPropsRequest) GetProps() *jobs.JobsUserProps {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *SetJobsUserPropsRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SetJobsUserPropsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Props         *jobs.JobsUserProps    `protobuf:"bytes,1,opt,name=props,proto3" json:"props,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetJobsUserPropsResponse) Reset() {
	*x = SetJobsUserPropsResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetJobsUserPropsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetJobsUserPropsResponse) ProtoMessage() {}

func (x *SetJobsUserPropsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetJobsUserPropsResponse.ProtoReflect.Descriptor instead.
func (*SetJobsUserPropsResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{9}
}

func (x *SetJobsUserPropsResponse) GetProps() *jobs.JobsUserProps {
	if x != nil {
		return x.Props
	}
	return nil
}

type GetColleagueLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Search        *string                `protobuf:"bytes,1,opt,name=search,proto3,oneof" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueLabelsRequest) Reset() {
	*x = GetColleagueLabelsRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueLabelsRequest) ProtoMessage() {}

func (x *GetColleagueLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueLabelsRequest.ProtoReflect.Descriptor instead.
func (*GetColleagueLabelsRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{10}
}

func (x *GetColleagueLabelsRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

type GetColleagueLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        []*jobs.Label          `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueLabelsResponse) Reset() {
	*x = GetColleagueLabelsResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueLabelsResponse) ProtoMessage() {}

func (x *GetColleagueLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueLabelsResponse.ProtoReflect.Descriptor instead.
func (*GetColleagueLabelsResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{11}
}

func (x *GetColleagueLabelsResponse) GetLabels() []*jobs.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ManageColleagueLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        []*jobs.Label          `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageColleagueLabelsRequest) Reset() {
	*x = ManageColleagueLabelsRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageColleagueLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageColleagueLabelsRequest) ProtoMessage() {}

func (x *ManageColleagueLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageColleagueLabelsRequest.ProtoReflect.Descriptor instead.
func (*ManageColleagueLabelsRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{12}
}

func (x *ManageColleagueLabelsRequest) GetLabels() []*jobs.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ManageColleagueLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Labels        []*jobs.Label          `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageColleagueLabelsResponse) Reset() {
	*x = ManageColleagueLabelsResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageColleagueLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageColleagueLabelsResponse) ProtoMessage() {}

func (x *ManageColleagueLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageColleagueLabelsResponse.ProtoReflect.Descriptor instead.
func (*ManageColleagueLabelsResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{13}
}

func (x *ManageColleagueLabelsResponse) GetLabels() []*jobs.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GetColleagueLabelsStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LabelIds      []uint64               `protobuf:"varint,1,rep,packed,name=label_ids,json=labelIds,proto3" json:"label_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueLabelsStatsRequest) Reset() {
	*x = GetColleagueLabelsStatsRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueLabelsStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueLabelsStatsRequest) ProtoMessage() {}

func (x *GetColleagueLabelsStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueLabelsStatsRequest.ProtoReflect.Descriptor instead.
func (*GetColleagueLabelsStatsRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{14}
}

func (x *GetColleagueLabelsStatsRequest) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type GetColleagueLabelsStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         []*jobs.LabelCount     `protobuf:"bytes,1,rep,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetColleagueLabelsStatsResponse) Reset() {
	*x = GetColleagueLabelsStatsResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetColleagueLabelsStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColleagueLabelsStatsResponse) ProtoMessage() {}

func (x *GetColleagueLabelsStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColleagueLabelsStatsResponse.ProtoReflect.Descriptor instead.
func (*GetColleagueLabelsStatsResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{15}
}

func (x *GetColleagueLabelsStatsResponse) GetCount() []*jobs.LabelCount {
	if x != nil {
		return x.Count
	}
	return nil
}

type GetMOTDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMOTDRequest) Reset() {
	*x = GetMOTDRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMOTDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMOTDRequest) ProtoMessage() {}

func (x *GetMOTDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMOTDRequest.ProtoReflect.Descriptor instead.
func (*GetMOTDRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{16}
}

type GetMOTDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Motd          string                 `protobuf:"bytes,1,opt,name=motd,proto3" json:"motd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMOTDResponse) Reset() {
	*x = GetMOTDResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMOTDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMOTDResponse) ProtoMessage() {}

func (x *GetMOTDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMOTDResponse.ProtoReflect.Descriptor instead.
func (*GetMOTDResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{17}
}

func (x *GetMOTDResponse) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

type SetMOTDRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @sanitize: method=StripTags
	Motd          string `protobuf:"bytes,1,opt,name=motd,proto3" json:"motd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMOTDRequest) Reset() {
	*x = SetMOTDRequest{}
	mi := &file_services_jobs_jobs_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMOTDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMOTDRequest) ProtoMessage() {}

func (x *SetMOTDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMOTDRequest.ProtoReflect.Descriptor instead.
func (*SetMOTDRequest) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{18}
}

func (x *SetMOTDRequest) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

type SetMOTDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Motd          string                 `protobuf:"bytes,1,opt,name=motd,proto3" json:"motd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMOTDResponse) Reset() {
	*x = SetMOTDResponse{}
	mi := &file_services_jobs_jobs_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMOTDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMOTDResponse) ProtoMessage() {}

func (x *SetMOTDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_jobs_jobs_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMOTDResponse.ProtoReflect.Descriptor instead.
func (*SetMOTDResponse) Descriptor() ([]byte, []int) {
	return file_services_jobs_jobs_proto_rawDescGZIP(), []int{19}
}

func (x *SetMOTDResponse) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

var File_services_jobs_jobs_proto protoreflect.FileDescriptor

var file_services_jobs_jobs_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2f,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x1a, 0x28, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6a,
	0x6f, 0x62, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6a, 0x6f,
	0x62, 0x73, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6a,
	0x6f, 0x62, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x03, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x40, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00,
	0x48, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52,
	0x06, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x18, 0x0c, 0x48, 0x03, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x0c, 0x48, 0x04, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61,
	0x62, 0x73, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x0a,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x09, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4f, 0x6e, 0x6c, 0x79,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x22, 0xab, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x55, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x10, 0x0a, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0xac, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22,
	0x75, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x12,
	0x25, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x10, 0x03, 0x18, 0xff, 0x01, 0xd0, 0x01, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f,
	0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x20, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x4d, 0x0a, 0x1c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x22, 0x4e, 0x0a, 0x1d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x22, 0x3d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x22, 0x53, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x4f,
	0x54, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x74, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x22, 0x2e,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x22, 0x25,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x6f, 0x74, 0x64, 0x32, 0xd5, 0x07, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x12,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x22,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f,
	0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12,
	0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x69, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x15, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x78, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4d, 0x4f, 0x54, 0x44, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x12, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53,
	0x65, 0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x4f, 0x54, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x40, 0x5a,
	0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x69, 0x76, 0x65,
	0x6e, 0x65, 0x74, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x74, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x3b, 0x6a, 0x6f, 0x62, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_services_jobs_jobs_proto_rawDescOnce sync.Once
	file_services_jobs_jobs_proto_rawDescData []byte
)

func file_services_jobs_jobs_proto_rawDescGZIP() []byte {
	file_services_jobs_jobs_proto_rawDescOnce.Do(func() {
		file_services_jobs_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_jobs_jobs_proto_rawDesc), len(file_services_jobs_jobs_proto_rawDesc)))
	})
	return file_services_jobs_jobs_proto_rawDescData
}

var file_services_jobs_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_services_jobs_jobs_proto_goTypes = []any{
	(*ListColleaguesRequest)(nil),           // 0: services.jobs.ListColleaguesRequest
	(*ListColleaguesResponse)(nil),          // 1: services.jobs.ListColleaguesResponse
	(*GetSelfRequest)(nil),                  // 2: services.jobs.GetSelfRequest
	(*GetSelfResponse)(nil),                 // 3: services.jobs.GetSelfResponse
	(*GetColleagueRequest)(nil),             // 4: services.jobs.GetColleagueRequest
	(*GetColleagueResponse)(nil),            // 5: services.jobs.GetColleagueResponse
	(*ListColleagueActivityRequest)(nil),    // 6: services.jobs.ListColleagueActivityRequest
	(*ListColleagueActivityResponse)(nil),   // 7: services.jobs.ListColleagueActivityResponse
	(*SetJobsUserPropsRequest)(nil),         // 8: services.jobs.SetJobsUserPropsRequest
	(*SetJobsUserPropsResponse)(nil),        // 9: services.jobs.SetJobsUserPropsResponse
	(*GetColleagueLabelsRequest)(nil),       // 10: services.jobs.GetColleagueLabelsRequest
	(*GetColleagueLabelsResponse)(nil),      // 11: services.jobs.GetColleagueLabelsResponse
	(*ManageColleagueLabelsRequest)(nil),    // 12: services.jobs.ManageColleagueLabelsRequest
	(*ManageColleagueLabelsResponse)(nil),   // 13: services.jobs.ManageColleagueLabelsResponse
	(*GetColleagueLabelsStatsRequest)(nil),  // 14: services.jobs.GetColleagueLabelsStatsRequest
	(*GetColleagueLabelsStatsResponse)(nil), // 15: services.jobs.GetColleagueLabelsStatsResponse
	(*GetMOTDRequest)(nil),                  // 16: services.jobs.GetMOTDRequest
	(*GetMOTDResponse)(nil),                 // 17: services.jobs.GetMOTDResponse
	(*SetMOTDRequest)(nil),                  // 18: services.jobs.SetMOTDRequest
	(*SetMOTDResponse)(nil),                 // 19: services.jobs.SetMOTDResponse
	(*database.PaginationRequest)(nil),      // 20: resources.common.database.PaginationRequest
	(*database.Sort)(nil),                   // 21: resources.common.database.Sort
	(*database.PaginationResponse)(nil),     // 22: resources.common.database.PaginationResponse
	(*jobs.Colleague)(nil),                  // 23: resources.jobs.Colleague
	(jobs.JobsUserActivityType)(0),          // 24: resources.jobs.JobsUserActivityType
	(*jobs.JobsUserActivity)(nil),           // 25: resources.jobs.JobsUserActivity
	(*jobs.JobsUserProps)(nil),              // 26: resources.jobs.JobsUserProps
	(*jobs.Label)(nil),                      // 27: resources.jobs.Label
	(*jobs.LabelCount)(nil),                 // 28: resources.jobs.LabelCount
}
var file_services_jobs_jobs_proto_depIdxs = []int32{
	20, // 0: services.jobs.ListColleaguesRequest.pagination:type_name -> resources.common.database.PaginationRequest
	21, // 1: services.jobs.ListColleaguesRequest.sort:type_name -> resources.common.database.Sort
	22, // 2: services.jobs.ListColleaguesResponse.pagination:type_name -> resources.common.database.PaginationResponse
	23, // 3: services.jobs.ListColleaguesResponse.colleagues:type_name -> resources.jobs.Colleague
	23, // 4: services.jobs.GetSelfResponse.colleague:type_name -> resources.jobs.Colleague
	23, // 5: services.jobs.GetColleagueResponse.colleague:type_name -> resources.jobs.Colleague
	20, // 6: services.jobs.ListColleagueActivityRequest.pagination:type_name -> resources.common.database.PaginationRequest
	21, // 7: services.jobs.ListColleagueActivityRequest.sort:type_name -> resources.common.database.Sort
	24, // 8: services.jobs.ListColleagueActivityRequest.activity_types:type_name -> resources.jobs.JobsUserActivityType
	22, // 9: services.jobs.ListColleagueActivityResponse.pagination:type_name -> resources.common.database.PaginationResponse
	25, // 10: services.jobs.ListColleagueActivityResponse.activity:type_name -> resources.jobs.JobsUserActivity
	26, // 11: services.jobs.SetJobsUserPropsRequest.props:type_name -> resources.jobs.JobsUserProps
	26, // 12: services.jobs.SetJobsUserPropsResponse.props:type_name -> resources.jobs.JobsUserProps
	27, // 13: services.jobs.GetColleagueLabelsResponse.labels:type_name -> resources.jobs.Label
	27, // 14: services.jobs.ManageColleagueLabelsRequest.labels:type_name -> resources.jobs.Label
	27, // 15: services.jobs.ManageColleagueLabelsResponse.labels:type_name -> resources.jobs.Label
	28, // 16: services.jobs.GetColleagueLabelsStatsResponse.count:type_name -> resources.jobs.LabelCount
	0,  // 17: services.jobs.JobsService.ListColleagues:input_type -> services.jobs.ListColleaguesRequest
	2,  // 18: services.jobs.JobsService.GetSelf:input_type -> services.jobs.GetSelfRequest
	4,  // 19: services.jobs.JobsService.GetColleague:input_type -> services.jobs.GetColleagueRequest
	6,  // 20: services.jobs.JobsService.ListColleagueActivity:input_type -> services.jobs.ListColleagueActivityRequest
	8,  // 21: services.jobs.JobsService.SetJobsUserProps:input_type -> services.jobs.SetJobsUserPropsRequest
	10, // 22: services.jobs.JobsService.GetColleagueLabels:input_type -> services.jobs.GetColleagueLabelsRequest
	12, // 23: services.jobs.JobsService.ManageColleagueLabels:input_type -> services.jobs.ManageColleagueLabelsRequest
	14, // 24: services.jobs.JobsService.GetColleagueLabelsStats:input_type -> services.jobs.GetColleagueLabelsStatsRequest
	16, // 25: services.jobs.JobsService.GetMOTD:input_type -> services.jobs.GetMOTDRequest
	18, // 26: services.jobs.JobsService.SetMOTD:input_type -> services.jobs.SetMOTDRequest
	1,  // 27: services.jobs.JobsService.ListColleagues:output_type -> services.jobs.ListColleaguesResponse
	3,  // 28: services.jobs.JobsService.GetSelf:output_type -> services.jobs.GetSelfResponse
	5,  // 29: services.jobs.JobsService.GetColleague:output_type -> services.jobs.GetColleagueResponse
	7,  // 30: services.jobs.JobsService.ListColleagueActivity:output_type -> services.jobs.ListColleagueActivityResponse
	9,  // 31: services.jobs.JobsService.SetJobsUserProps:output_type -> services.jobs.SetJobsUserPropsResponse
	11, // 32: services.jobs.JobsService.GetColleagueLabels:output_type -> services.jobs.GetColleagueLabelsResponse
	13, // 33: services.jobs.JobsService.ManageColleagueLabels:output_type -> services.jobs.ManageColleagueLabelsResponse
	15, // 34: services.jobs.JobsService.GetColleagueLabelsStats:output_type -> services.jobs.GetColleagueLabelsStatsResponse
	17, // 35: services.jobs.JobsService.GetMOTD:output_type -> services.jobs.GetMOTDResponse
	19, // 36: services.jobs.JobsService.SetMOTD:output_type -> services.jobs.SetMOTDResponse
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_services_jobs_jobs_proto_init() }
func file_services_jobs_jobs_proto_init() {
	if File_services_jobs_jobs_proto != nil {
		return
	}
	file_services_jobs_jobs_proto_msgTypes[0].OneofWrappers = []any{}
	file_services_jobs_jobs_proto_msgTypes[4].OneofWrappers = []any{}
	file_services_jobs_jobs_proto_msgTypes[6].OneofWrappers = []any{}
	file_services_jobs_jobs_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_jobs_jobs_proto_rawDesc), len(file_services_jobs_jobs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_jobs_jobs_proto_goTypes,
		DependencyIndexes: file_services_jobs_jobs_proto_depIdxs,
		MessageInfos:      file_services_jobs_jobs_proto_msgTypes,
	}.Build()
	File_services_jobs_jobs_proto = out.File
	file_services_jobs_jobs_proto_goTypes = nil
	file_services_jobs_jobs_proto_depIdxs = nil
}
