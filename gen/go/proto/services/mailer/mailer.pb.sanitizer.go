// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: services/mailer/mailer.proto

package mailer

import (
	"github.com/fivenet-app/fivenet/pkg/html/htmlsanitizer"
)

func (m *CreateOrUpdateEmailRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Email
	if m.Email != nil {
		if v, ok := any(m.GetEmail()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreateOrUpdateEmailResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Email
	if m.Email != nil {
		if v, ok := any(m.GetEmail()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreateOrUpdateTemplateRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Template
	if m.Template != nil {
		if v, ok := any(m.GetTemplate()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreateOrUpdateTemplateResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Template
	if m.Template != nil {
		if v, ok := any(m.GetTemplate()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreateThreadRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Message
	if m.Message != nil {
		if v, ok := any(m.GetMessage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Recipients
	for idx, item := range m.Recipients {
		_, _ = idx, item

		m.Recipients[idx] = htmlsanitizer.StripTags(m.Recipients[idx])

	}

	// Field: Thread
	if m.Thread != nil {
		if v, ok := any(m.GetThread()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreateThreadResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Thread
	if m.Thread != nil {
		if v, ok := any(m.GetThread()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *DeleteEmailRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteEmailResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteMessageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteMessageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteTemplateRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteTemplateResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteThreadRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeleteThreadResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetEmailProposalsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetEmailProposalsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetEmailRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetEmailResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Email
	if m.Email != nil {
		if v, ok := any(m.GetEmail()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *GetEmailSettingsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetEmailSettingsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Settings
	if m.Settings != nil {
		if v, ok := any(m.GetSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *GetTemplateRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetTemplateResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Template
	if m.Template != nil {
		if v, ok := any(m.GetTemplate()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *GetThreadRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetThreadResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Thread
	if m.Thread != nil {
		if v, ok := any(m.GetThread()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *GetThreadStateRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetThreadStateResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: State
	if m.State != nil {
		if v, ok := any(m.GetState()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListEmailsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListEmailsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Emails
	for idx, item := range m.Emails {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListTemplatesRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *ListTemplatesResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Templates
	for idx, item := range m.Templates {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *ListThreadMessagesRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: After
	if m.After != nil {
		if v, ok := any(m.GetAfter()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListThreadMessagesResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Messages
	for idx, item := range m.Messages {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListThreadsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListThreadsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Threads
	for idx, item := range m.Threads {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *PostMessageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Message
	if m.Message != nil {
		if v, ok := any(m.GetMessage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Recipients
	for idx, item := range m.Recipients {
		_, _ = idx, item

		m.Recipients[idx] = htmlsanitizer.StripTags(m.Recipients[idx])

	}

	return nil
}

func (m *PostMessageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Message
	if m.Message != nil {
		if v, ok := any(m.GetMessage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SearchThreadsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SearchThreadsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Messages
	for idx, item := range m.Messages {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SetEmailSettingsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Settings
	if m.Settings != nil {
		if v, ok := any(m.GetSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SetEmailSettingsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Settings
	if m.Settings != nil {
		if v, ok := any(m.GetSettings()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SetThreadStateRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: State
	if m.State != nil {
		if v, ok := any(m.GetState()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *SetThreadStateResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: State
	if m.State != nil {
		if v, ok := any(m.GetState()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}
