// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: services/wiki/wiki.proto

package wiki

func (m *CreatePageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Page
	if m.Page != nil {
		if v, ok := any(m.GetPage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *CreatePageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Page
	if m.Page != nil {
		if v, ok := any(m.GetPage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *DeletePageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *DeletePageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetPageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *GetPageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Page
	if m.Page != nil {
		if v, ok := any(m.GetPage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListPageActivityRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListPageActivityResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Activity
	for idx, item := range m.Activity {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListPagesRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	// Field: Sort
	if m.Sort != nil {
		if v, ok := any(m.GetSort()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListPagesResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pages
	for idx, item := range m.Pages {
		_, _ = idx, item

		if v, ok := any(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := any(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *UpdatePageRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Page
	if m.Page != nil {
		if v, ok := any(m.GetPage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *UpdatePageResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Page
	if m.Page != nil {
		if v, ok := any(m.GetPage()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}
