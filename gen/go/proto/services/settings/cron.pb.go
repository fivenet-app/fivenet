// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: services/settings/cron.proto

package settings

import (
	cron "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/common/cron"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCronjobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCronjobsRequest) Reset() {
	*x = ListCronjobsRequest{}
	mi := &file_services_settings_cron_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCronjobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronjobsRequest) ProtoMessage() {}

func (x *ListCronjobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_settings_cron_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronjobsRequest.ProtoReflect.Descriptor instead.
func (*ListCronjobsRequest) Descriptor() ([]byte, []int) {
	return file_services_settings_cron_proto_rawDescGZIP(), []int{0}
}

type ListCronjobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*cron.Cronjob        `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCronjobsResponse) Reset() {
	*x = ListCronjobsResponse{}
	mi := &file_services_settings_cron_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCronjobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCronjobsResponse) ProtoMessage() {}

func (x *ListCronjobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_settings_cron_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCronjobsResponse.ProtoReflect.Descriptor instead.
func (*ListCronjobsResponse) Descriptor() ([]byte, []int) {
	return file_services_settings_cron_proto_rawDescGZIP(), []int{1}
}

func (x *ListCronjobsResponse) GetJobs() []*cron.Cronjob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

var File_services_settings_cron_proto protoreflect.FileDescriptor

const file_services_settings_cron_proto_rawDesc = "" +
	"\n" +
	"\x1cservices/settings/cron.proto\x12\x11services.settings\x1a resources/common/cron/cron.proto\"\x15\n" +
	"\x13ListCronjobsRequest\"J\n" +
	"\x14ListCronjobsResponse\x122\n" +
	"\x04jobs\x18\x01 \x03(\v2\x1e.resources.common.cron.CronjobR\x04jobs2n\n" +
	"\vCronService\x12_\n" +
	"\fListCronjobs\x12&.services.settings.ListCronjobsRequest\x1a'.services.settings.ListCronjobsResponseBNZLgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/settings;settingsb\x06proto3"

var (
	file_services_settings_cron_proto_rawDescOnce sync.Once
	file_services_settings_cron_proto_rawDescData []byte
)

func file_services_settings_cron_proto_rawDescGZIP() []byte {
	file_services_settings_cron_proto_rawDescOnce.Do(func() {
		file_services_settings_cron_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_settings_cron_proto_rawDesc), len(file_services_settings_cron_proto_rawDesc)))
	})
	return file_services_settings_cron_proto_rawDescData
}

var file_services_settings_cron_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_services_settings_cron_proto_goTypes = []any{
	(*ListCronjobsRequest)(nil),  // 0: services.settings.ListCronjobsRequest
	(*ListCronjobsResponse)(nil), // 1: services.settings.ListCronjobsResponse
	(*cron.Cronjob)(nil),         // 2: resources.common.cron.Cronjob
}
var file_services_settings_cron_proto_depIdxs = []int32{
	2, // 0: services.settings.ListCronjobsResponse.jobs:type_name -> resources.common.cron.Cronjob
	0, // 1: services.settings.CronService.ListCronjobs:input_type -> services.settings.ListCronjobsRequest
	1, // 2: services.settings.CronService.ListCronjobs:output_type -> services.settings.ListCronjobsResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_services_settings_cron_proto_init() }
func file_services_settings_cron_proto_init() {
	if File_services_settings_cron_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_settings_cron_proto_rawDesc), len(file_services_settings_cron_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_settings_cron_proto_goTypes,
		DependencyIndexes: file_services_settings_cron_proto_depIdxs,
		MessageInfos:      file_services_settings_cron_proto_msgTypes,
	}.Build()
	File_services_settings_cron_proto = out.File
	file_services_settings_cron_proto_goTypes = nil
	file_services_settings_cron_proto_depIdxs = nil
}
