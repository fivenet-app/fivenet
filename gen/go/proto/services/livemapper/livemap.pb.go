// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: services/livemapper/livemap.proto

package livemapper

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	livemap "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/livemap"
	users "github.com/fivenet-app/fivenet/v2025/gen/go/proto/resources/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{0}
}

type StreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*StreamResponse_Jobs
	//	*StreamResponse_Markers
	//	*StreamResponse_Users
	Data          isStreamResponse_Data `protobuf_oneof:"data"`
	UserOnDuty    *bool                 `protobuf:"varint,4,opt,name=user_on_duty,json=userOnDuty,proto3,oneof" json:"user_on_duty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{1}
}

func (x *StreamResponse) GetData() isStreamResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamResponse) GetJobs() *JobsList {
	if x != nil {
		if x, ok := x.Data.(*StreamResponse_Jobs); ok {
			return x.Jobs
		}
	}
	return nil
}

func (x *StreamResponse) GetMarkers() *MarkerMarkersUpdates {
	if x != nil {
		if x, ok := x.Data.(*StreamResponse_Markers); ok {
			return x.Markers
		}
	}
	return nil
}

func (x *StreamResponse) GetUsers() *UserMarkersUpdates {
	if x != nil {
		if x, ok := x.Data.(*StreamResponse_Users); ok {
			return x.Users
		}
	}
	return nil
}

func (x *StreamResponse) GetUserOnDuty() bool {
	if x != nil && x.UserOnDuty != nil {
		return *x.UserOnDuty
	}
	return false
}

type isStreamResponse_Data interface {
	isStreamResponse_Data()
}

type StreamResponse_Jobs struct {
	Jobs *JobsList `protobuf:"bytes,1,opt,name=jobs,proto3,oneof"`
}

type StreamResponse_Markers struct {
	Markers *MarkerMarkersUpdates `protobuf:"bytes,2,opt,name=markers,proto3,oneof"`
}

type StreamResponse_Users struct {
	Users *UserMarkersUpdates `protobuf:"bytes,3,opt,name=users,proto3,oneof"`
}

func (*StreamResponse_Jobs) isStreamResponse_Data() {}

func (*StreamResponse_Markers) isStreamResponse_Data() {}

func (*StreamResponse_Users) isStreamResponse_Data() {}

type JobsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*users.Job           `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Markers       []*users.Job           `protobuf:"bytes,2,rep,name=markers,proto3" json:"markers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobsList) Reset() {
	*x = JobsList{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobsList) ProtoMessage() {}

func (x *JobsList) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobsList.ProtoReflect.Descriptor instead.
func (*JobsList) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{2}
}

func (x *JobsList) GetUsers() []*users.Job {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *JobsList) GetMarkers() []*users.Job {
	if x != nil {
		return x.Markers
	}
	return nil
}

type MarkerMarkersUpdates struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Updated       []*livemap.MarkerMarker `protobuf:"bytes,1,rep,name=updated,proto3" json:"updated,omitempty"`
	Deleted       []uint64                `protobuf:"varint,2,rep,packed,name=deleted,proto3" json:"deleted,omitempty"`
	Part          int32                   `protobuf:"varint,3,opt,name=part,proto3" json:"part,omitempty"`
	Partial       bool                    `protobuf:"varint,4,opt,name=partial,proto3" json:"partial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkerMarkersUpdates) Reset() {
	*x = MarkerMarkersUpdates{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkerMarkersUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkerMarkersUpdates) ProtoMessage() {}

func (x *MarkerMarkersUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkerMarkersUpdates.ProtoReflect.Descriptor instead.
func (*MarkerMarkersUpdates) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{3}
}

func (x *MarkerMarkersUpdates) GetUpdated() []*livemap.MarkerMarker {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *MarkerMarkersUpdates) GetDeleted() []uint64 {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *MarkerMarkersUpdates) GetPart() int32 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *MarkerMarkersUpdates) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

type UserMarkersUpdates struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       []*livemap.UserMarker  `protobuf:"bytes,1,rep,name=updated,proto3" json:"updated,omitempty"`
	Deleted       []int32                `protobuf:"varint,2,rep,packed,name=deleted,proto3" json:"deleted,omitempty"`
	Part          int32                  `protobuf:"varint,3,opt,name=part,proto3" json:"part,omitempty"`
	Partial       bool                   `protobuf:"varint,4,opt,name=partial,proto3" json:"partial,omitempty"`
	Clear         *bool                  `protobuf:"varint,5,opt,name=clear,proto3,oneof" json:"clear,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserMarkersUpdates) Reset() {
	*x = UserMarkersUpdates{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserMarkersUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarkersUpdates) ProtoMessage() {}

func (x *UserMarkersUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarkersUpdates.ProtoReflect.Descriptor instead.
func (*UserMarkersUpdates) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{4}
}

func (x *UserMarkersUpdates) GetUpdated() []*livemap.UserMarker {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *UserMarkersUpdates) GetDeleted() []int32 {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *UserMarkersUpdates) GetPart() int32 {
	if x != nil {
		return x.Part
	}
	return 0
}

func (x *UserMarkersUpdates) GetPartial() bool {
	if x != nil {
		return x.Partial
	}
	return false
}

func (x *UserMarkersUpdates) GetClear() bool {
	if x != nil && x.Clear != nil {
		return *x.Clear
	}
	return false
}

type CreateOrUpdateMarkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Marker        *livemap.MarkerMarker  `protobuf:"bytes,1,opt,name=marker,proto3" json:"marker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrUpdateMarkerRequest) Reset() {
	*x = CreateOrUpdateMarkerRequest{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrUpdateMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateMarkerRequest) ProtoMessage() {}

func (x *CreateOrUpdateMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateMarkerRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateMarkerRequest) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOrUpdateMarkerRequest) GetMarker() *livemap.MarkerMarker {
	if x != nil {
		return x.Marker
	}
	return nil
}

type CreateOrUpdateMarkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Marker        *livemap.MarkerMarker  `protobuf:"bytes,1,opt,name=marker,proto3" json:"marker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrUpdateMarkerResponse) Reset() {
	*x = CreateOrUpdateMarkerResponse{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrUpdateMarkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateMarkerResponse) ProtoMessage() {}

func (x *CreateOrUpdateMarkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateMarkerResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateMarkerResponse) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOrUpdateMarkerResponse) GetMarker() *livemap.MarkerMarker {
	if x != nil {
		return x.Marker
	}
	return nil
}

type DeleteMarkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMarkerRequest) Reset() {
	*x = DeleteMarkerRequest{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMarkerRequest) ProtoMessage() {}

func (x *DeleteMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMarkerRequest.ProtoReflect.Descriptor instead.
func (*DeleteMarkerRequest) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMarkerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMarkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMarkerResponse) Reset() {
	*x = DeleteMarkerResponse{}
	mi := &file_services_livemapper_livemap_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMarkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMarkerResponse) ProtoMessage() {}

func (x *DeleteMarkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_livemapper_livemap_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMarkerResponse.ProtoReflect.Descriptor instead.
func (*DeleteMarkerResponse) Descriptor() ([]byte, []int) {
	return file_services_livemapper_livemap_proto_rawDescGZIP(), []int{8}
}

var File_services_livemapper_livemap_proto protoreflect.FileDescriptor

const file_services_livemapper_livemap_proto_rawDesc = "" +
	"\n" +
	"!services/livemapper/livemap.proto\x12\x13services.livemapper\x1a\x1fresources/livemap/livemap.proto\x1a\x1aresources/users/jobs.proto\x1a\x17validate/validate.proto\"\x0f\n" +
	"\rStreamRequest\"\x92\x02\n" +
	"\x0eStreamResponse\x123\n" +
	"\x04jobs\x18\x01 \x01(\v2\x1d.services.livemapper.JobsListH\x00R\x04jobs\x12E\n" +
	"\amarkers\x18\x02 \x01(\v2).services.livemapper.MarkerMarkersUpdatesH\x00R\amarkers\x12?\n" +
	"\x05users\x18\x03 \x01(\v2'.services.livemapper.UserMarkersUpdatesH\x00R\x05users\x12%\n" +
	"\fuser_on_duty\x18\x04 \x01(\bH\x01R\n" +
	"userOnDuty\x88\x01\x01B\v\n" +
	"\x04data\x12\x03\xf8B\x01B\x0f\n" +
	"\r_user_on_duty\"f\n" +
	"\bJobsList\x12*\n" +
	"\x05users\x18\x01 \x03(\v2\x14.resources.users.JobR\x05users\x12.\n" +
	"\amarkers\x18\x02 \x03(\v2\x14.resources.users.JobR\amarkers\"\x99\x01\n" +
	"\x14MarkerMarkersUpdates\x129\n" +
	"\aupdated\x18\x01 \x03(\v2\x1f.resources.livemap.MarkerMarkerR\aupdated\x12\x18\n" +
	"\adeleted\x18\x02 \x03(\x04R\adeleted\x12\x12\n" +
	"\x04part\x18\x03 \x01(\x05R\x04part\x12\x18\n" +
	"\apartial\x18\x04 \x01(\bR\apartial\"\xba\x01\n" +
	"\x12UserMarkersUpdates\x127\n" +
	"\aupdated\x18\x01 \x03(\v2\x1d.resources.livemap.UserMarkerR\aupdated\x12\x18\n" +
	"\adeleted\x18\x02 \x03(\x05R\adeleted\x12\x12\n" +
	"\x04part\x18\x03 \x01(\x05R\x04part\x12\x18\n" +
	"\apartial\x18\x04 \x01(\bR\apartial\x12\x19\n" +
	"\x05clear\x18\x05 \x01(\bH\x00R\x05clear\x88\x01\x01B\b\n" +
	"\x06_clear\"`\n" +
	"\x1bCreateOrUpdateMarkerRequest\x12A\n" +
	"\x06marker\x18\x01 \x01(\v2\x1f.resources.livemap.MarkerMarkerB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06marker\"W\n" +
	"\x1cCreateOrUpdateMarkerResponse\x127\n" +
	"\x06marker\x18\x01 \x01(\v2\x1f.resources.livemap.MarkerMarkerR\x06marker\"%\n" +
	"\x13DeleteMarkerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\x16\n" +
	"\x14DeleteMarkerResponse2\xca\x02\n" +
	"\x11LivemapperService\x12S\n" +
	"\x06Stream\x12\".services.livemapper.StreamRequest\x1a#.services.livemapper.StreamResponse0\x01\x12{\n" +
	"\x14CreateOrUpdateMarker\x120.services.livemapper.CreateOrUpdateMarkerRequest\x1a1.services.livemapper.CreateOrUpdateMarkerResponse\x12c\n" +
	"\fDeleteMarker\x12(.services.livemapper.DeleteMarkerRequest\x1a).services.livemapper.DeleteMarkerResponseBLZJgithub.com/fivenet-app/fivenet/v2025/gen/go/proto/services/livemapper;livemapperb\x06proto3"

var (
	file_services_livemapper_livemap_proto_rawDescOnce sync.Once
	file_services_livemapper_livemap_proto_rawDescData []byte
)

func file_services_livemapper_livemap_proto_rawDescGZIP() []byte {
	file_services_livemapper_livemap_proto_rawDescOnce.Do(func() {
		file_services_livemapper_livemap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_services_livemapper_livemap_proto_rawDesc), len(file_services_livemapper_livemap_proto_rawDesc)))
	})
	return file_services_livemapper_livemap_proto_rawDescData
}

var file_services_livemapper_livemap_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_services_livemapper_livemap_proto_goTypes = []any{
	(*StreamRequest)(nil),                // 0: services.livemapper.StreamRequest
	(*StreamResponse)(nil),               // 1: services.livemapper.StreamResponse
	(*JobsList)(nil),                     // 2: services.livemapper.JobsList
	(*MarkerMarkersUpdates)(nil),         // 3: services.livemapper.MarkerMarkersUpdates
	(*UserMarkersUpdates)(nil),           // 4: services.livemapper.UserMarkersUpdates
	(*CreateOrUpdateMarkerRequest)(nil),  // 5: services.livemapper.CreateOrUpdateMarkerRequest
	(*CreateOrUpdateMarkerResponse)(nil), // 6: services.livemapper.CreateOrUpdateMarkerResponse
	(*DeleteMarkerRequest)(nil),          // 7: services.livemapper.DeleteMarkerRequest
	(*DeleteMarkerResponse)(nil),         // 8: services.livemapper.DeleteMarkerResponse
	(*users.Job)(nil),                    // 9: resources.users.Job
	(*livemap.MarkerMarker)(nil),         // 10: resources.livemap.MarkerMarker
	(*livemap.UserMarker)(nil),           // 11: resources.livemap.UserMarker
}
var file_services_livemapper_livemap_proto_depIdxs = []int32{
	2,  // 0: services.livemapper.StreamResponse.jobs:type_name -> services.livemapper.JobsList
	3,  // 1: services.livemapper.StreamResponse.markers:type_name -> services.livemapper.MarkerMarkersUpdates
	4,  // 2: services.livemapper.StreamResponse.users:type_name -> services.livemapper.UserMarkersUpdates
	9,  // 3: services.livemapper.JobsList.users:type_name -> resources.users.Job
	9,  // 4: services.livemapper.JobsList.markers:type_name -> resources.users.Job
	10, // 5: services.livemapper.MarkerMarkersUpdates.updated:type_name -> resources.livemap.MarkerMarker
	11, // 6: services.livemapper.UserMarkersUpdates.updated:type_name -> resources.livemap.UserMarker
	10, // 7: services.livemapper.CreateOrUpdateMarkerRequest.marker:type_name -> resources.livemap.MarkerMarker
	10, // 8: services.livemapper.CreateOrUpdateMarkerResponse.marker:type_name -> resources.livemap.MarkerMarker
	0,  // 9: services.livemapper.LivemapperService.Stream:input_type -> services.livemapper.StreamRequest
	5,  // 10: services.livemapper.LivemapperService.CreateOrUpdateMarker:input_type -> services.livemapper.CreateOrUpdateMarkerRequest
	7,  // 11: services.livemapper.LivemapperService.DeleteMarker:input_type -> services.livemapper.DeleteMarkerRequest
	1,  // 12: services.livemapper.LivemapperService.Stream:output_type -> services.livemapper.StreamResponse
	6,  // 13: services.livemapper.LivemapperService.CreateOrUpdateMarker:output_type -> services.livemapper.CreateOrUpdateMarkerResponse
	8,  // 14: services.livemapper.LivemapperService.DeleteMarker:output_type -> services.livemapper.DeleteMarkerResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_services_livemapper_livemap_proto_init() }
func file_services_livemapper_livemap_proto_init() {
	if File_services_livemapper_livemap_proto != nil {
		return
	}
	file_services_livemapper_livemap_proto_msgTypes[1].OneofWrappers = []any{
		(*StreamResponse_Jobs)(nil),
		(*StreamResponse_Markers)(nil),
		(*StreamResponse_Users)(nil),
	}
	file_services_livemapper_livemap_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_livemapper_livemap_proto_rawDesc), len(file_services_livemapper_livemap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_livemapper_livemap_proto_goTypes,
		DependencyIndexes: file_services_livemapper_livemap_proto_depIdxs,
		MessageInfos:      file_services_livemapper_livemap_proto_msgTypes,
	}.Build()
	File_services_livemapper_livemap_proto = out.File
	file_services_livemapper_livemap_proto_goTypes = nil
	file_services_livemapper_livemap_proto_depIdxs = nil
}
