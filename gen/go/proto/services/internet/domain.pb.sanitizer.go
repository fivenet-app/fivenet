// Code generated by protoc-gen-customizer. DO NOT EDIT.
// source: services/internet/domain.proto

package internet

import (
	"github.com/fivenet-app/fivenet/pkg/html/htmlsanitizer"
)

func (m *CheckDomainAvailabilityRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Name
	m.Name = htmlsanitizer.StripTags(m.Name)

	return nil
}

func (m *CheckDomainAvailabilityResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *ListDomainsRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := interface{}(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *ListDomainsResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Domains
	for idx, item := range m.Domains {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}

	}

	// Field: Pagination
	if m.Pagination != nil {
		if v, ok := interface{}(m.GetPagination()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *RegisterDomainRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Name
	m.Name = htmlsanitizer.StripTags(m.Name)

	return nil
}

func (m *RegisterDomainResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Domain
	if m.Domain != nil {
		if v, ok := interface{}(m.GetDomain()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *TransferDomainRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *TransferDomainResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	return nil
}

func (m *UpdateDomainRequest) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Domain
	if m.Domain != nil {
		if v, ok := interface{}(m.GetDomain()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}

func (m *UpdateDomainResponse) Sanitize() error {
	if m == nil {
		return nil
	}

	// Field: Domain
	if m.Domain != nil {
		if v, ok := interface{}(m.GetDomain()).(interface{ Sanitize() error }); ok {
			if err := v.Sanitize(); err != nil {
				return err
			}
		}
	}

	return nil
}
